[{"C:\\mendpress\\client\\src\\PrivateRoute.js":"1","C:\\mendpress\\client\\src\\containers\\Cart\\index.js":"2","C:\\mendpress\\client\\src\\components\\Header\\Header.js":"3","C:\\mendpress\\client\\src\\store\\actions\\cartActions.js":"4","C:\\mendpress\\client\\src\\components\\Widgets\\Widget.js":"5","C:\\mendpress\\client\\src\\components\\UI\\NormalInput\\index.js":"6","C:\\mendpress\\client\\src\\components\\QuantityControl\\index.js":"7","C:\\mendpress\\client\\src\\store\\reducers\\userReducers.js":"8","C:\\mendpress\\client\\src\\components\\CartPrice\\index.js":"9","C:\\mendpress\\client\\src\\containers\\ProductDetails\\index.js":"10","C:\\mendpress\\client\\src\\components\\ShopStore\\About\\About.js":"11","C:\\mendpress\\client\\src\\components\\ShopStore\\Products\\Products.js":"12","C:\\mendpress\\client\\src\\containers\\Orders\\index.js":"13","C:\\mendpress\\client\\src\\containers\\IdleTimerContainer\\IdleTimerContainer.js":"14","C:\\mendpress\\client\\src\\index.js":"15","C:\\mendpress\\client\\src\\containers\\Login\\index.js":"16","C:\\mendpress\\client\\src\\containers\\ControlPanel\\index.js":"17","C:\\mendpress\\client\\src\\containers\\Home\\index.js":"18","C:\\mendpress\\client\\src\\store\\reducers\\cartReducers.js":"19","C:\\mendpress\\client\\src\\store\\actions\\productActions.js":"20","C:\\mendpress\\client\\src\\components\\ShopStore\\ShopStore.js":"21","C:\\mendpress\\client\\src\\containers\\usersList\\Users.js":"22","C:\\mendpress\\client\\src\\constants\\index.js":"23","C:\\mendpress\\client\\src\\components\\UI\\MdpStyledComponents.js":"24","C:\\mendpress\\client\\src\\containers\\App.js":"25","C:\\mendpress\\client\\src\\components\\Logo\\index.js":"26","C:\\mendpress\\client\\src\\containers\\PlaceOrder\\index.js":"27","C:\\mendpress\\client\\src\\containers\\ThankYou\\index.js":"28","C:\\mendpress\\client\\src\\containers\\Signup\\index.js":"29","C:\\mendpress\\client\\src\\components\\Footer\\FooterContainer.js":"30","C:\\mendpress\\client\\src\\components\\UI\\RadioButton\\index.js":"31","C:\\mendpress\\client\\src\\components\\Footer\\Footer.js":"32","C:\\mendpress\\client\\src\\containers\\PlaceOrder\\AddressForm\\index.js":"33","C:\\mendpress\\client\\src\\components\\Icon\\index.js":"34","C:\\mendpress\\client\\src\\components\\Footer\\styles\\footer.js":"35","C:\\mendpress\\client\\src\\components\\Header\\MainHeader\\MainHeader.js":"36","C:\\mendpress\\client\\src\\containers\\Orders\\OrderManagement.js":"37","C:\\mendpress\\client\\src\\components\\Header\\TopHeader\\TopHeader.js":"38","C:\\mendpress\\client\\src\\components\\UI\\MobileTypeInput\\index.js":"39","C:\\mendpress\\client\\src\\containers\\Cart\\CartItem\\index.js":"40","C:\\mendpress\\client\\src\\containers\\Orders\\OrderManagement2.js":"41","C:\\mendpress\\client\\src\\constants\\cartConstants.js":"42","C:\\mendpress\\client\\src\\components\\UI\\SubmitGradientButton\\index.js":"43","C:\\mendpress\\client\\src\\store\\actions\\userActions.js":"44","C:\\mendpress\\client\\src\\containers\\Products\\ProductsScreen.js":"45","C:\\mendpress\\client\\src\\containers\\Products\\ProductManagement.js":"46"},{"size":642,"mtime":1626897933540,"results":"47","hashOfConfig":"48"},{"size":4451,"mtime":1627765255163,"results":"49","hashOfConfig":"48"},{"size":1208,"mtime":1626897933561,"results":"50","hashOfConfig":"48"},{"size":2809,"mtime":1626897933673,"results":"51","hashOfConfig":"48"},{"size":803,"mtime":1626897933611,"results":"52","hashOfConfig":"48"},{"size":1269,"mtime":1626897933603,"results":"53","hashOfConfig":"48"},{"size":817,"mtime":1626897933580,"results":"54","hashOfConfig":"48"},{"size":1433,"mtime":1626897933685,"results":"55","hashOfConfig":"48"},{"size":2094,"mtime":1626897933540,"results":"56","hashOfConfig":"48"},{"size":5681,"mtime":1627237590826,"results":"57","hashOfConfig":"48"},{"size":2725,"mtime":1627236588510,"results":"58","hashOfConfig":"48"},{"size":4208,"mtime":1627720723250,"results":"59","hashOfConfig":"48"},{"size":16629,"mtime":1628094218557,"results":"60","hashOfConfig":"48"},{"size":2401,"mtime":1626897933636,"results":"61","hashOfConfig":"48"},{"size":515,"mtime":1626897933671,"results":"62","hashOfConfig":"48"},{"size":2933,"mtime":1626897933644,"results":"63","hashOfConfig":"48"},{"size":272,"mtime":1626897933626,"results":"64","hashOfConfig":"48"},{"size":342,"mtime":1626897933636,"results":"65","hashOfConfig":"48"},{"size":3536,"mtime":1626897933682,"results":"66","hashOfConfig":"48"},{"size":6721,"mtime":1626897933673,"results":"67","hashOfConfig":"48"},{"size":2310,"mtime":1628083246274,"results":"68","hashOfConfig":"48"},{"size":12742,"mtime":1628936952546,"results":"69","hashOfConfig":"48"},{"size":111,"mtime":1628937102911,"results":"70","hashOfConfig":"48"},{"size":7887,"mtime":1626897933596,"results":"71","hashOfConfig":"48"},{"size":2200,"mtime":1627765406160,"results":"72","hashOfConfig":"48"},{"size":373,"mtime":1626897933572,"results":"73","hashOfConfig":"48"},{"size":14627,"mtime":1627765269377,"results":"74","hashOfConfig":"48"},{"size":1377,"mtime":1627765309884,"results":"75","hashOfConfig":"48"},{"size":5572,"mtime":1626897933665,"results":"76","hashOfConfig":"48"},{"size":2029,"mtime":1626897933559,"results":"77","hashOfConfig":"48"},{"size":408,"mtime":1626897933603,"results":"78","hashOfConfig":"48"},{"size":861,"mtime":1626897933555,"results":"79","hashOfConfig":"48"},{"size":4106,"mtime":1626897933646,"results":"80","hashOfConfig":"48"},{"size":174,"mtime":1626897933572,"results":"81","hashOfConfig":"48"},{"size":1130,"mtime":1626897933561,"results":"82","hashOfConfig":"48"},{"size":1203,"mtime":1626897933561,"results":"83","hashOfConfig":"48"},{"size":25713,"mtime":1628856553204,"results":"84","hashOfConfig":"48"},{"size":3032,"mtime":1628083604290,"results":"85","hashOfConfig":"48"},{"size":442,"mtime":1626897933601,"results":"86","hashOfConfig":"48"},{"size":2502,"mtime":1626897933626,"results":"87","hashOfConfig":"48"},{"size":13760,"mtime":1628425130390,"results":"88","hashOfConfig":"48"},{"size":394,"mtime":1626897933615,"results":"89","hashOfConfig":"48"},{"size":371,"mtime":1626897933603,"results":"90","hashOfConfig":"48"},{"size":2370,"mtime":1626897933673,"results":"91","hashOfConfig":"48"},{"size":13842,"mtime":1628850248087,"results":"92","hashOfConfig":"48"},{"size":13651,"mtime":1628931645419,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1f92f9e",{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"97"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"166"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"176"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"97"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"97"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"111"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"120"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"101"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":54,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218"},"C:\\mendpress\\client\\src\\PrivateRoute.js",["219"],"import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin\r\n\r\n    console.log(\"prrrrrrrrrrrrrr\")\r\n    \r\n    return <Route {...rest} render={(props) => {\r\n        \r\n\r\n        if(userInfo){\r\n          \r\n                return <Component {...props} />\r\n        }else{\r\n                return <Redirect to=\"/login\" />\r\n            \r\n        }\r\n        \r\n\r\n    }} />\r\n}\r\n\r\nexport default PrivateRoute;",["220","221"],"C:\\mendpress\\client\\src\\containers\\Cart\\index.js",["222","223","224","225","226","227","228","229","230"],"import React, { useEffect, useState } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\nimport CartItem from './CartItem'\r\nimport CartPrice from '../../components/CartPrice';\r\n\r\n\r\nimport { addToCart, updateCart, getCartItems} from '../../store/actions/cartActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Route , withRouter} from 'react-router-dom'\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n\r\n\r\n\r\nconst Cart = (props) => {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItem, totalAmount, cartCount} = cart\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n\r\n  const [qty, setQty] = useState(0)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n \r\n \r\n  useEffect(() => {\r\n    /*if (userInfo) {\r\n      dispatch(addToCart(userInfo, cartItems));\r\n    }*/\r\n    if(userInfo){\r\n        dispatch(getCartItems(userInfo))\r\n    }\r\n  }, [qty])\r\n\r\n\r\n  const decreaseQuantity = (e, productId) => {\r\n        updateThisCart(productId, -1)\r\n        setQty(-1)\r\n    }\r\n\r\n  const increaseQuantity = (e, productId) => {\r\n        updateThisCart(productId, 1);\r\n        setQty(1)\r\n    }\r\n\r\n  const  updateThisCart =  (productId, quantity) => {\r\n\r\n        try{\r\n            \r\n            let product = cartItem.find(item => item.product === productId);\r\n            const myproduct = {\r\n                productId: product.product,\r\n                quantity: parseInt(product.quantity) + parseInt(quantity),\r\n                newQuantity: quantity,\r\n                price: product.price,\r\n                total: parseFloat(product.total) + parseFloat( product.price * quantity )\r\n            }\r\n\r\n            if(product.quantity <= 0){\r\n                return;\r\n            }\r\n            dispatch(updateCart(userInfo.token, userInfo.userId, myproduct))\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n\r\n  const changeQuantity = (e, productId) => {\r\n\r\n         console.log(e.target.value);\r\n\r\n         if(isNaN(e.target.value)){\r\n         return;\r\n         }\r\n\r\n        const firstDigit = parseInt(e.target.value.split(\"\")[0]);\r\n        if(firstDigit === 0){\r\n            return;\r\n        }\r\n\r\n        // //alert(e.target.value);\r\n\r\n        updateThisCart(productId, parseInt(e.target.value));\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"Content\">\r\n                <div className=\"CartWrapper\">\r\n                    <div className=\"CartDetails\">\r\n                        {/* List cart items */}\r\n                        <div className=\"CardTitle\">\r\n                            <h3>Mon panier</h3>\r\n                        </div>\r\n                        <div className=\"CardBody\">\r\n\r\n                            {cartItem.length === 0 ?\r\n                                <div>\r\n                                Vous n'avez aucun article dans votre panier\r\n                                </div>\r\n                                     :\r\n                                     cartItem.map(product => \r\n                                    <CartItem\r\n                                        key={product.product}\r\n                                        productId={product.product}\r\n                                        name={product.name}\r\n                                        imageUrl={product.imageUrl}\r\n                                        price={product.price}\r\n                                        quantity={product.quantity}\r\n                                        total={product.total}\r\n                                        //name=\"quantity\" \r\n                                        changeQuantity={changeQuantity}\r\n                                        increaseQuantity={increaseQuantity}\r\n                                        decreaseQuantity={decreaseQuantity}\r\n                                />)\r\n                            }\r\n\r\n                            <div className=\"PlaceOrder\">\r\n                                <MdpButton outline mdpXLContact onClick={() => props.history.push('/')}>Poursuivre mes achats</MdpButton>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <CartPrice red={props}/>\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Cart",["231","232"],"C:\\mendpress\\client\\src\\components\\Header\\Header.js",["233","234","235","236","237","238","239","240"],"\r\nimport './style.css';\r\nimport TopHeader from './TopHeader/TopHeader';\r\nimport MainHeader from './MainHeader/MainHeader';\r\nimport BottomHeader from './BottomHeader/BottomHeader'\r\n\r\nimport { addToCart, updateCart, getCartItems} from '../../store/actions/cartActions'\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout, update } from '../../store/actions/userActions';\r\n\r\nconst  Header = (props) =>  {\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItem, totalAmount, cartCount} = cart\r\n  const dispatch = useDispatch();\r\n \r\n\r\n  useEffect(() => {\r\n    dispatch(getCartItems(userInfo))\r\n    \r\n  }, [])\r\n \r\n  const handleLogout = () => {\r\n        dispatch(logout());\r\n        props.history.push(\"/\");\r\n    }\r\n\r\n    const cartCounter = userInfo ? cartCount : '';\r\n\r\n    return (\r\n        <header className=\"Header\">\r\n            <TopHeader logout={handleLogout} />\r\n            <MainHeader cartCount={cartCounter} />\r\n            <BottomHeader />\r\n        </header>\r\n    );\r\n    \r\n    \r\n}\r\n\r\nexport default Header",["241","242"],"C:\\mendpress\\client\\src\\store\\actions\\cartActions.js",["243","244","245","246","247","248"],"C:\\mendpress\\client\\src\\components\\Widgets\\Widget.js",["249"],"import React from 'react'\r\nimport './style.css'\r\n\r\n\r\n\r\n\r\nconst Widget = (props) => {\r\n\r\n    return ( <div className=\"widgets\">\r\n\r\n\r\n            <iframe src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FAxel4591&\r\n                        tabs=timeline&width=240&height=1500&small_header=false&\r\n                        adapt_container_width=true&show_facepile=true&appId=480627086662809\"\r\n                    width=\"240\" \r\n                    height=\"100%\"\r\n                    style={{border:\"none\", overflow: \"hidden\"}} \r\n                    frameBorder=\"0\"\r\n                    allowtransparency=\"true\"\r\n                    scrolling=\"no\"\r\n                    allow=\"encrypted-media\"></iframe>\r\n\r\n            </div>\r\n        \r\n        )\r\n}\r\n\r\n\r\nexport default Widget",["250","251"],"C:\\mendpress\\client\\src\\components\\UI\\NormalInput\\index.js",[],["252","253"],"C:\\mendpress\\client\\src\\components\\QuantityControl\\index.js",["254"],"import React from 'react';\r\nimport './style.css';\r\n\r\nconst QuantityControl = props => {\r\n    return (\r\n        <div className=\"QunantityControl\">\r\n            <button onClick={(e) => {\r\n                if(props.quantity > 1 ){\r\n                    props.decreaseQuantity(e, props.productId)\r\n                }\r\n            } }>-</button>\r\n                <input \r\n                    type=\"text\" \r\n                    onChange={(e) => props.changeQuantity(e, props.productId)} \r\n                    name={props.name}\r\n                    value={props.quantity == 0 ? 1 : props.quantity}\r\n                    disabled = {true}\r\n                />\r\n            <button onClick={(e) => props.increaseQuantity(e, props.productId)\r\n                }>+</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuantityControl;","C:\\mendpress\\client\\src\\store\\reducers\\userReducers.js",[],["255","256"],"C:\\mendpress\\client\\src\\components\\CartPrice\\index.js",["257","258","259","260","261","262","263","264","265"],"import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport  { Redirect } from 'react-router-dom'\r\nimport { addToCart, updateCart, getCartItems} from '../../store/actions/cartActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n\r\n\r\n\r\n\r\nconst CartPrice = (props) => {\r\n\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItem, totalAmount, cartCount} = cart\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n\r\n  const [qty, setQty] = useState(0)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n      dispatch(getCartItems())\r\n\r\n  }, [])\r\n\r\n  const placeOrderNow  = () => {\r\n    if(!userInfo){\r\n        props.history.push('/login');\r\n        return;\r\n    }else{\r\n        props.red.history.push('/place-order')\r\n    }\r\n    } \r\n\r\n\r\n    return (\r\n        <div className=\"PriceWrapper\">\r\n            {/* show price */}\r\n            <div className=\"CardTitle\">\r\n                <h3>Détails de la commande</h3>\r\n            </div>\r\n            <div className=\"CardBody\">\r\n                <div className=\"FinalBilling\">\r\n                    <div className=\"Row\">\r\n                        <p>Prix ({cartCount})</p>\r\n                        <p>{totalAmount}€</p>\r\n                    </div>\r\n                    <div className=\"Row\">\r\n                        <p>Livraison</p>\r\n                        <p>0€</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"Row\">\r\n                        <h4>Total à Payer</h4>\r\n                        <h4>{totalAmount}€</h4>\r\n                    </div>\r\n                    <div className=\"Row\" style={{marginLeft: \"48px\", marginTop: \"63px\"}}>\r\n                        <MdpButton outline mdpXLContact onClick={() => placeOrderNow()}>Passer la commande</MdpButton>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\n\r\nexport default CartPrice","C:\\mendpress\\client\\src\\containers\\ProductDetails\\index.js",["266","267","268","269","270","271","272","273","274","275","276"],"\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\nimport React, {useEffect,  useState } from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport {useParams, Link } from 'react-router-dom'\r\n\r\nimport { detailsProduct } from '../../store/actions/productActions'\r\nimport {usePath} from 'hookrouter';\r\n//import Rating from '../components/Rating';\r\n//import { PRODUCT_REVIEW_SAVE_RESET } from '../constants/productConstants';\r\nimport { addToCart, updateCart, getCartItems } from '../../store/actions/cartActions'\r\n\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n\r\nconst ProductDetails = (props) => {\r\n  const userSignin = useSelector((state) => state.userSignin)\r\n  const { userInfo } = userSignin\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { product, loading, error } = productDetails\r\n  const dispatch = useDispatch()\r\n  const { category, slug } = useParams()\r\n  const cart = useSelector(state => state.cart);\r\n  const { cartItems, totalAmount, cartCount} = cart\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch(detailsProduct(category, slug))\r\n\r\n    if(userInfo){\r\n        dispatch(getCartItems(userInfo))\r\n    }\r\n\r\n\r\n    return () => {\r\n      //\r\n    };\r\n  }, [slug, category]);\r\n\r\n\r\n  const addItemToCart = (product) => {\r\n\r\n    if(!userInfo){\r\n        props.history.push('/login');\r\n        return;\r\n    }else {\r\n        if(!userInfo.isAdmin){\r\n            const cartItem = {\r\n                user: userInfo.userId,\r\n                product: product._id,\r\n                name: product.name,\r\n                imageUrl: product.imageUrl,\r\n                quantity: 1,\r\n                price: product.price\r\n            }\r\n        \r\n           dispatch(addToCart(userInfo, cartItem))\r\n        }\r\n    } \r\n   \r\n}\r\n\r\nconst acheterNow  = (product) => {\r\n\r\n    if(!userInfo){\r\n        props.history.push('/login');\r\n        return;\r\n    }else {\r\n        if(!userInfo.isAdmin){\r\n            const cartItem = {\r\n                user: userInfo.userId,\r\n                product: product._id,\r\n                name: product.name,\r\n                imageUrl: product.imageUrl,\r\n                quantity: 1,\r\n                price: product.price\r\n            }\r\n        \r\n           dispatch(addToCart(userInfo, cartItem))\r\n        }\r\n    } \r\n}\r\n\r\n\r\n    let productDescription\r\n\r\n    if(product){\r\n        productDescription = \r\n            <div style={{marginBottom: \"12px\"}} className=\"Content\">\r\n                <div style={{marginTop: \"12px\"}} className=\"ProductDetailsWrapper\">\r\n                    <div className=\"ProductDetailsImage\">\r\n                        <div className=\"ProductDetailsImageWrapper\">\r\n                            <img  src={product.imageUrl} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"mdpBtn\">\r\n                             <MdpButton outline mdpXLContact  onClick={() => {\r\n                                 addItemToCart(product)\r\n                                props.history.push('/cart')\r\n                             } }>\r\n                                <i className=\"fas fa-shopping-cart\" style={{marginRight: \"3px\"}}></i>\r\n                                &nbsp;\r\n                                Ajouter au panier\r\n                             </MdpButton>        \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    <div className=\"ProductDetails\">\r\n                        <p className=\"ProductTitle\">{product.name}</p>\r\n                        <p className=\"ProductPrice\">{product.price}€</p>\r\n                        <div className=\"BreadCrumb\">\r\n                            <small>Auteur: Nene DOGBA | Date de parition: 12 mars 2020</small>\r\n                            <small>{ product.stock > 0 ? \"  \"+ product.stock  + \" exemplaire en stock\" : \"Rupture de stock\"  } | Expédition sous 24 heures</small>\r\n          \r\n                        </div>\r\n                        <div className=\"ProductDescription\">\r\n                            <h3 style={{marginTop: \"17px\"}}>Description</h3>\r\n                            <div className=\"BreadCrumb\">\r\n                            <small>{product.description}</small>\r\n                            </div>\r\n\r\n                            <h4 style={{marginTop: \"18px\"}}>A propos de l'auteur</h4>\r\n                            <div className=\"BreadCrumb\">\r\n                            <small>      \r\n                            <p>laceholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available</p>\r\n                            </small>\r\n                            </div>\r\n                         \r\n                        </div>\r\n                        <div className=\"mdpBtn\" style={{marginTop: \"51px\"}}>\r\n                        <MdpButton outline mdpXLContact onClick={() => { if(userInfo){\r\n                                    acheterNow(product)\r\n                                    props.history.push('/place-order')\r\n                                  }\r\n                                  }} style={{marginRight: \"6px\"}}><i className=\"fas fa-heart\" style={{marginRight: \"3px\", color:\"red\"}}></i>&nbsp;Acheter maintenant</MdpButton>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n    }else{\r\n        productDescription = <div>Product is loading...!</div>\r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        <div>\r\n            {productDescription}\r\n        </div>\r\n    );\r\n    \r\n\r\n}\r\n\r\n\r\n\r\nexport default ProductDetails","C:\\mendpress\\client\\src\\components\\ShopStore\\About\\About.js",["277","278","279","280","281","282","283","284","285","286"],"import React, { useState } from 'react';\r\nimport './style.css'\r\nimport {MdpStyledError, MdpStyledFieldset, MdpStyledButton, \r\n    MdpStyledTextArea, MdpStyledInput, MdpStyledForm, MdpStyledFormWrapper, MdpButton}\r\n    from '../../UI/MdpStyledComponents'\r\n\r\nconst About = (props) => {\r\n\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n \r\n      <div className=\"about\">\r\n        <img className=\"im\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRvnepXY_pXSetZzx76oYZqMAPlQA7OVcBRmQ&usqp=CAU\" width=\"300\" height=\"300\" />\r\n\r\n                <div className=\"BreadCrumb1\">\r\n                <small1>\r\n                \"MEND Press\" est une société d'édition de livres édifiants et inspirants.\r\n\r\n                Ses sujets d'édition portent sur la Foi Chrétienne, le Développement Personnel, le Sport, le Bien être, la Santé, les Sciences, l'Education, la Musique, les Arts, \r\n                la Culture, le Développement économique, l'Entrepreneuriat et les Nouvelles Technologies.<br/> <br/>\r\n\r\n                Vous êtes sur le site Internet de l'entité qui édite et publie de la littérature chrétienne \r\n                conforme à l'évangile du salut à travers Jésus-Christ et dont voici la mission: \r\n                <ul className=\"a\">\r\n                <li>édifier les membres du Corps du Christ;</li>\r\n                <li>encourager à faire confiance à Dieu et le servir;</li>\r\n                <li>partager avec le plus grand nombre ce que Dieu fait dans les vies aujourd'hui;</li>\r\n                <li>promouvoir les auteurs et transformer les manuscrits non édités en ouvrages.</li>\r\n                </ul> <br/>\r\n\r\n                Elle propose les services suivants:\r\n                <ul className=\"a\">\r\n                <li>porter à la connaissance des lecteurs des textes qui répondent à sa ligne éditoriale et qui l’auront convaincue;</li>\r\n                <li>accompagner un auteur depuis le manuscrit jusqu’à ses lecteurs;</li>\r\n                <li>contracter avec toute personne ou structure nécessaire à l’épanouissement des livres;</li>\r\n                <li>avoir des activités économiques, qu’il s’agisse de vendre ses livres sans but lucratif\r\n                ou de rémunérer l’auteur ainsi que toute personne ou structure avec laquelle un contrat marchand est\r\n                passé;</li>\r\n                <li>organiser ou participer à toute sorte d’action ou événement culturel (par exemple\r\n                lecture publique, dédicaces, conférences, salon ou festival…) favorisant la diffusion du livre.</li>\r\n                </ul> \r\n                </small1>\r\n                </div>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","C:\\mendpress\\client\\src\\components\\ShopStore\\Products\\Products.js",["287","288","289","290"],"\r\nimport './style.css';\r\nimport Product from './Product';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {usePath} from 'hookrouter'\r\n\r\nimport {listCategories, listProducts} from '../../../store/actions/productActions'\r\nimport {MdpButton} from '../../UI/MdpStyledComponents'\r\nimport Widget from '../../Widgets/Widget'\r\nimport IdleTimerContainer from '../../../containers/IdleTimerContainer/IdleTimerContainer'\r\n\r\n\r\n\r\nconst Products = (props) => {\r\n\r\n    const [title, setTitle] = useState('Les produits')\r\n    const [slug, setSlug] = useState('')\r\n    const [filter, setFilter] = useState(1)\r\n    const productList = useSelector((state) => state.productList)\r\n    const {loading, products} = productList\r\n\r\n    const categoryList = useSelector((state) => state.categoryList)\r\n    const {categories} = categoryList\r\n    const url = usePath()\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(() => {\r\n              \r\n        dispatch(listProducts(slug, filter))\r\n        dispatch(listCategories())\r\n        \r\n        return () => {\r\n          //\r\n        }\r\n      }, [slug, filter, url])\r\n\r\n  \r\n    return (\r\n\r\n        <div className=\"Content\">\r\n                <div className=\"ContentTitle\">\r\n                     <h2 className=\"CategoryTitle\">{title}</h2>\r\n                </div>\r\n                <div className=\"ContentBody\">\r\n                    <div className=\"SideMenu\">\r\n                        <h3 className=\"SideMenuTitle\">Filtres</h3>\r\n                        <div className=\"Filter\">\r\n                            <p className=\"FilterTitle\">Categories</p>\r\n                            <ul>\r\n                                {categories &&\r\n                                    categories.map((value) => ( \r\n                                <ul className=\"ulCat\">\r\n                                    <li key={value._id}>\r\n                                    <Link to={`/products/${value.slug}`} onClick={() => {\r\n                                             \r\n                                            setSlug(value.slug)\r\n                                            setTitle(value.name)\r\n            \r\n                                    } }>{value.name}\r\n                                    </Link>\r\n                                   \r\n                                    </li>\r\n                                </ul>))\r\n                                    \r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        \r\n                        <div className=\"Filter\" style={{marginBottom: \"6px\"}}>\r\n       \r\n                            <p className=\"FilterTitle\">Prix</p>\r\n                            <div>\r\n                                <MdpButton outline mdpXLTRI onClick={() => setFilter(1)} >Tri croissant</MdpButton>\r\n                            </div>\r\n                            <div>\r\n                                <MdpButton outline mdpXLTRI onClick={() => setFilter(-1)}>Tri décroissant</MdpButton>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <Widget/>\r\n                    \r\n                    </div>\r\n                    \r\n                    <div className=\"MainContent\">\r\n\r\n                    <div className=\"ProductArea\">\r\n                        { products &&\r\n                            products.map(product => <Product\r\n                                key={product._id}\r\n                                id={product._id}\r\n                                name={product.name}\r\n                                price={product.price}\r\n                                description={product.description}\r\n                                imageUrl={product.imageUrl}\r\n                                slug={product.slug}\r\n                            />)\r\n                        }\r\n                        \r\n                    </div>\r\n\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n               \r\n        </div>\r\n\r\n        \r\n    )\r\n    \r\n}\r\n\r\n\r\nexport default Products","C:\\mendpress\\client\\src\\containers\\Orders\\index.js",["291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"import './style.css';\r\nimport Header from '../../components/Header/Header'\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {base_url} from '../../constants/index'\r\nimport Axios from 'axios'\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n\r\n\r\n\r\n\r\n\r\nconst Orders = (props) => {\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin\r\n  const [ordersList, setOrderList] = useState([])\r\n  const [userList, setUserList] = useState([])\r\n  const [userIds, setUserIds] = useState([])\r\n  const [isOrderOpened, setIsOrderOpened] = useState(false)\r\n  const [firstName, setFirstName] = useState(\"\")\r\n  const [lastName, setLastName] = useState(\"\")\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    if(!userInfo){\r\n\r\n        props.history.push('/login');\r\n                 \r\n    }else{\r\n        if(userInfo.isAdmin){\r\n            //getUsers()\r\n            adminGetAllUsers()\r\n         }else{\r\n            getOrders()\r\n      }\r\n    \r\n    }\r\n    return () => {\r\n    };\r\n  }, []);\r\n\r\n    //get orders fir a specific user\r\n     const getOrders = async () => {\r\n        console.log(userInfo)\r\n        try{\r\n\r\n        const { data } = await Axios.get(`${base_url}/order/getorders/${userInfo.userId}`, {\r\n            headers: {\r\n                  Authorization: ' Bearer ' + userInfo.token\r\n            }\r\n        })\r\n        console.log(\"responseorder: \"+JSON.stringify(data.message));\r\n        setOrderList(data.message)\r\n\r\n    }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // get orders for all users\r\n    const getOrdersAdmin = async (uid) => {\r\n        try{\r\n\r\n        const { data } = await Axios.get(`${base_url}/order/getorders/${uid}`, {\r\n            headers: {\r\n                  Authorization: ' Bearer ' + userInfo.token\r\n            }\r\n        })\r\n        console.log(\"responseorderrrrrrr: \"+JSON.stringify(data.message));\r\n        setOrderList(data.message)\r\n\r\n    }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n\r\n    /****get all users for administration back office */\r\n    const adminGetAllUsers = async () => {\r\n       // getUsers()\r\n        console.log(\"admin get orders\")\r\n        try{\r\n\r\n            const { data } = await Axios.get(`${base_url}/admin/get-users`, {\r\n                headers: {\r\n                      Authorization: ' Bearer ' + userInfo.token\r\n                }\r\n            })\r\n            console.log(\"response All users: \"+JSON.stringify(data.message));\r\n            setUserList(data.message)\r\n\r\n        }catch(error){\r\n            console.log(error + \"error front\");\r\n        }\r\n        \r\n    }\r\n\r\n    const deleteOrder =  async (orderId) => {\r\n        console.log(\"admin get orders\")\r\n      /*  try{\r\n\r\n            const { data } = await Axios.get(`${base_url}/admin/deleteOrder/${orderId}`, {\r\n                headers: {\r\n                      Authorization: ' Bearer ' + userInfo.token\r\n                }\r\n            })\r\n            console.log(\"response All users: \"+JSON.stringify(data.message));\r\n            setUserList(data.message)\r\n\r\n        }catch(error){\r\n            console.log(error + \"error front\");\r\n        }*/\r\n    }\r\n    \r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    const getOrderTotal = (id) => {\r\n        const singleOrder = ordersList.find(order => order._id === id);\r\n        let orderTotal = 0;\r\n        singleOrder.order.forEach(order => {\r\n            orderTotal = orderTotal + (order.price * order.quantity)\r\n        });\r\n\r\n        return orderTotal;\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"Content\">\r\n                <div className=\"Card\">\r\n                   { userInfo.isAdmin ? <p className=\"CardText\">Liste des commandes</p> : <p className=\"CardText\">Mes Commandes</p>} \r\n\r\n                    {\r\n                      !userInfo.isAdmin && ordersList.map(order => {\r\n                            return (\r\n                                <div key={order._id} className=\"Order\">\r\n                                    <div className=\"OrderHeader\">\r\n                                        <a href=\"#\">{order._id}</a>\r\n                                    </div>\r\n                                    <div className=\"OrderDescription\">\r\n                                        <div className=\"od1\">\r\n                                            <p className=\"odtitle\">Adresse de livraison</p>\r\n                                            <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\r\n                                        </div>\r\n                                        <div className=\"od2\">\r\n                                            <p className=\"odtitle\">Type de paiement</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut du paiement</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut de la livraison</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{ order.isOrderCompleted ? \"livré le 12/01/2021\" : order.paymentStatus }</a>\r\n                                        </div>\r\n                                    \r\n                                    </div>\r\n                                    <div>\r\n                                        {order.order.map(item => (\r\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\r\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\r\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"odtitle\">{item.product.name}</p>\r\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\r\n                                                    <p>Quantité: {item.quantity}</p>\r\n                                                    <p>{item.price * item.quantity}€</p>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"OrderFooter\">\r\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\r\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                      userInfo.isAdmin && !isOrderOpened && userList.map(user => {\r\n                        if(!user.isAdmin && user.hasAnOrder){\r\n                            return (                               \r\n\r\n                                <div key={user._id} className=\"Order\">\r\n                                    <div className=\"OrderHeader\">\r\n                                        CID: <a href=\"#\">{user._id}</a>\r\n                                    </div>\r\n                                    <div className=\"OrderDescription\">\r\n                                    <div className=\"od1\">\r\n                                            <p className=\"odtitle\">Prenom</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{user.firstName}</a>\r\n\r\n                                    </div>\r\n                                    <div className=\"od1\">\r\n                                            <p className=\"odtitle\">Nom</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{user.lastName}</a>\r\n                                    </div>\r\n                                    <div className=\"od1\" style={{marginRight: \"5px\"}}>\r\n                                            <p className=\"odtitle\" >Email</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{user.email}</a>\r\n                                    </div>\r\n                                    <div className=\"od1\">\r\n                                            <p className=\"odtitle\" style={{marginRight: \"20px\"}}>Voir les commandes</p>\r\n                                                <MdpButton style={{float: \"right\"}} outline mdpXL onClick={() => {\r\n                                                           // setCreate(true)\r\n                                                           getOrdersAdmin(user._id)\r\n                                                           setFirstName(user.firstName)\r\n                                                           setLastName(user.lastName)\r\n                                                            setIsOrderOpened(true)\r\n                                                        } }\r\n                                                        >\r\n                                                        Consulter\r\n                                                </MdpButton>\r\n\r\n                                    </div>\r\n                                    \r\n                                    </div>\r\n                                    <div>\r\n                                    </div>\r\n                                    <div className=\"OrderFooter\">\r\n                                        <p>Commande passée le </p>\r\n                                        <p>Total de la commande€</p>\r\n                                    </div>\r\n                                </div>\r\n                                 )\r\n                                }\r\n                        })\r\n                    }\r\n                    {\r\n                      userInfo.isAdmin && isOrderOpened && ordersList.map(order => {\r\n                            return (\r\n                                <div key={order._id} className=\"Order\">\r\n                                    <div className=\"OrderHeader\">\r\n                                    N° de la commande:  <a style={{marginRight: \"10px\"}} href=\"#\">{order._id}</a>\r\n\r\n                                    Utilisateur: <a  className=\"odp\" style={{color: \"white\"}}>{firstName} {lastName}</a>\r\n\r\n                                    <MdpButton style={{float: \"right\"}} outline mdpXL onClick={() => {\r\n                                                           setFirstName(\" \")\r\n                                                           setLastName(\" \")\r\n                                                            setIsOrderOpened(false) \r\n                                                            adminGetAllUsers()                                                           \r\n                                                        } }\r\n                                                        >\r\n                                            Retour\r\n                                    </MdpButton>\r\n                                    </div>\r\n                                    <div className=\"OrderDescription\">\r\n                                        <div className=\"od1\">\r\n                                            <p className=\"odtitle\">Adresse de livraison</p>\r\n                                            <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\r\n                                        </div>\r\n                                        <div className=\"od2\">\r\n                                            <p className=\"odtitle\">Type de paiement</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut du paiement</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut de la livraison</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{ order.isOrderCompleted ? \"livré le 12/01/2021\" : order.paymentStatus }</a>\r\n                                        </div>\r\n                                    \r\n                                    </div>\r\n                                    <div>\r\n                                        {order.order.map(item => (\r\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\r\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\r\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"odtitle\">{item.product.name}</p>\r\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\r\n                                                    <p>Quantité: {item.quantity}</p>\r\n                                                    <p>{item.price * item.quantity}€</p>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"OrderFooter\">\r\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\r\n                                        <MdpButton \r\n                                        style={{marginLeft: \"-675px\"}}\r\n                                        outline\r\n                                        mdpS\r\n                                        mdpDelete\r\n                                        onClick={() => {\r\n                                                            deleteOrder(order._id)\r\n                                                            console.log(order._id)                                                           \r\n                                                        } } >\r\n                                        <i className=\"fas fa-trash\" style={{marginRight: \"3px\"}}></i>&nbsp;\r\n                                        Supprimer\r\n                                        </MdpButton>\r\n                                      \r\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n    \r\n}\r\n\r\n\r\nexport default Orders","C:\\mendpress\\client\\src\\containers\\IdleTimerContainer\\IdleTimerContainer.js",["314","315","316","317","318","319","320","321"],"import React, {useRef, useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport IdleTimer from 'react-idle-timer'\r\nimport { logout, update } from '../../store/actions/userActions';\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n\r\n\r\n\r\n\r\nconst IdleTimerContainer = (props) => {\r\n    const idleTimerRef = useRef(null)\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, userInfo, error } = userSignin\r\n    const dispatch = useDispatch();\r\n\r\n    const [isIdle, setIsIdle] = useState(false)\r\n    const [seconds, setSeconds ] =  useState(20);\r\n    const [timer, setTimer] = useState(null)\r\n    \r\n    /*\r\n    useEffect(()=>{\r\n    let myInterval = setInterval(() => {\r\n            if (seconds > 0) {\r\n                setSeconds(seconds - 1);\r\n            }\r\n            if (seconds === 0) {\r\n                clearInterval(myInterval)\r\n       \r\n            } \r\n        }, 1000)\r\n\r\n        return () => clearInterval(myInterval);\r\n        \r\n    }, [])\r\n      */\r\n\r\n \r\n    const onIdle =  () => {\r\n\r\n/*\r\n      if(userInfo){\r\n\r\n        setIsIdle(true)\r\n        let myInterval = setInterval(() => {\r\n          if (seconds > 0) {\r\n              setSeconds(seconds - 1);\r\n\r\n          }\r\n          if (seconds === 0) {\r\n              clearInterval(myInterval)\r\n              dispatch(logout());\r\n              props.idle.history.push(\"/\");\r\n     \r\n          }\r\n      }, 1000)\r\n\r\n      setTimer(myInterval)\r\n\r\n                     \r\n        }else{\r\n       \r\n            console.log(\"************ User not connected ************\")\r\n      \r\n      }*/\r\n    \r\n    }\r\n  \r\n\r\n    return (\r\n      <div>\r\n          <IdleTimer ref={idleTimerRef} timeout = {5 * 1000} onIdle={onIdle}>\r\n               {isIdle && <div style={{display:\"flex\"}}>\r\n               <p style={{color: \"red\", fontSize: \"17px\", marginRight:\"6px\"}} >Vous serez déconnecter dans 00:{seconds}s..  </p>\r\n               <MdpButton \r\n                onClick={() => {\r\n                  clearInterval(timer)\r\n                  setIsIdle(false)\r\n                  setSeconds(20)             \r\n                }}\r\n             \r\n             outline mdpXL >\r\n                Annuler\r\n             </MdpButton>\r\n               </div>\r\n               \r\n\r\n               }\r\n          </IdleTimer>\r\n      </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default IdleTimerContainer\r\n","C:\\mendpress\\client\\src\\index.js",["322"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n{/**import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport store from './containers/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, document.getElementById('root'));\r\n */}","C:\\mendpress\\client\\src\\containers\\Login\\index.js",["323","324"],"import './style.css';\r\nimport Logo from './MEND.png';\r\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\r\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\r\nimport Error from '../../components/Error';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signin } from '../../store/actions/userActions'\r\n\r\nconst SigninScreen = (props) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [isError, setIsError] = useState(false)\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { loading, userInfo, error } = userSignin;\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push('/');\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo]);\r\n\r\n\r\n  const loginHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if(email === ''){\r\n        setIsError(true)\r\n        setErrorMessage('Enter Email'); return;\r\n    }\r\n\r\n    const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\n    if(!emailPattern.test(email)){\r\n        setIsError(true)\r\n        setErrorMessage('Invalid Email Address'); return;\r\n    }\r\n\r\n    if(password === '' && password < 6){\r\n        setIsError(true)\r\n        setErrorMessage('Enter Password'); return;\r\n    }\r\n\r\n    dispatch(signin(email, password))\r\n    }\r\n\r\n\r\n\r\n  return ( \r\n  \r\n  <div className=\"LoginContainer\">\r\n  <div className=\"WelcomeText\">\r\n      <h3>Connexion</h3>\r\n  </div>\r\n  {loading && <div>Loading...</div>}\r\n  {error && <div>{error}</div>}\r\n  <img src={Logo} alt=\"logo\" height=\"80\" width=\"300\"/> \r\n  <div className=\"LoginWrapper\">\r\n      <form onSubmit={loginHandler} autoComplete=\"off\">\r\n  \r\n          <MobileTypeInput \r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              textChange={(e) => setEmail(e.target.value)}\r\n              name=\"email\"\r\n          />\r\n          <MobileTypeInput \r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              textChange={(e) => setPassword(e.target.value)}\r\n              name=\"password\"\r\n          />\r\n  \r\n          <Error>\r\n              {errorMessage}\r\n          </Error>\r\n          \r\n          <SubmitGradientButton \r\n              label=\"Login\"\r\n              style={{marginTop: '30px'}}\r\n          />\r\n      </form>\r\n  \r\n      \r\n  \r\n  </div>\r\n  <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n      <Link to=\"/signup\">Créer un compte</Link>\r\n      <Link to=\"/forget-password\">Mot de passe oublié ?</Link>\r\n  </div>\r\n  \r\n  \r\n  </div>)\r\n}\r\nexport default SigninScreen;",["325","326"],"C:\\mendpress\\client\\src\\containers\\ControlPanel\\index.js",[],["327","328"],"C:\\mendpress\\client\\src\\containers\\Home\\index.js",["329","330"],"C:\\mendpress\\client\\src\\store\\reducers\\cartReducers.js",["331"],"import { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../../constants/cartConstants\"\r\n\r\nconst initState = {\r\n    cartItem: [],\r\n    totalAmount: 0,\r\n    cartCount: 0\r\n}\r\n\r\nconst cartReducers = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case ADD_TO_CART:\r\n            const cartItem = state.cartItem;\r\n            let updatedCartItem = [];\r\n            let totalAmount;\r\n\r\n            const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\r\n\r\n            if(itemCount.length === 0){\r\n                updatedCartItem = [\r\n                    ...cartItem,\r\n                    {\r\n                        product: actions.cartItem.product,\r\n                        name: actions.cartItem.name,\r\n                        imageUrl: actions.cartItem.imageUrl,\r\n                        price: actions.cartItem.price,\r\n                        quantity: actions.cartItem.quantity,\r\n                        total: actions.cartItem.quantity * actions.cartItem.price\r\n                    }\r\n                ];\r\n            }else{\r\n                updatedCartItem = cartItem.map(item => \r\n                    item.product === actions.cartItem.product ?\r\n                    {\r\n                        ...item,\r\n                        quantity: item.quantity + actions.cartItem.quantity,\r\n                        total: item.total + actions.cartItem.price\r\n                    } : item\r\n                    )\r\n            }\r\n            totalAmount = state.totalAmount + actions.cartItem.price\r\n            state = {\r\n                cartItem: updatedCartItem,\r\n                totalAmount: totalAmount,\r\n                cartCount: state.cartCount + 1\r\n            }\r\n            break;\r\n        case GET_CART_DETAILS:\r\n\r\n            const cItem = actions.cartItems.cart;\r\n            let totalAmt = 0;\r\n            let quantityCount = 0;\r\n            const updateCartItem = cItem.map(item => {\r\n                totalAmt += item.total;\r\n                quantityCount += item.quantity;\r\n                \r\n                return {\r\n                    product: item.product._id,\r\n                    name: item.product.name,\r\n                    imageUrl: item.product.imageUrl,\r\n                    price: item.price,\r\n                    quantity: item.quantity,\r\n                    total: item.total\r\n                }\r\n\r\n            })\r\n            state = {\r\n                cartItem: updateCartItem,\r\n                totalAmount: totalAmt,\r\n                cartCount: quantityCount\r\n            }\r\n            break;\r\n        case UPDATE_CART:\r\n            const updateItem = actions.item;\r\n            const cartItems = state.cartItem.map(item => {\r\n                return item.product === updateItem.productId ? \r\n                {\r\n                    ...item,\r\n                    quantity: updateItem.quantity,\r\n                    total: updateItem.total\r\n                } : item\r\n            });\r\n            state = {\r\n                cartItem: cartItems,\r\n                totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\r\n                cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\r\n            }\r\n            break;\r\n        case CLEAR_CART:\r\n            state = {\r\n                cartItem: [],\r\n                totalAmount: 0,\r\n                cartCount: 0\r\n            }\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default cartReducers;",["332","333"],"C:\\mendpress\\client\\src\\store\\actions\\productActions.js",["334"],"C:\\mendpress\\client\\src\\components\\ShopStore\\ShopStore.js",["335"],"C:\\mendpress\\client\\src\\containers\\usersList\\Users.js",["336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362"],"C:\\mendpress\\client\\src\\constants\\index.js",[],"C:\\mendpress\\client\\src\\components\\UI\\MdpStyledComponents.js",["363"],"import styled, {css, ThemeProvider} from 'styled-components'\r\nimport { colors } from './global.js'\r\n \r\n\r\n\r\nexport const MdpButton = styled.button`\r\n\r\nfont-family: 'Avenir';\r\ncursor: pointer;\r\n\r\n${props => props.outline && css`\r\n    background: none;\r\n  `};\r\n${props => props.primary && css`\r\n    background: ${colors.primary};\r\n    color: ${colors.white};\r\n`};\r\n${props => props.secondary && css`\r\n    background: ${colors.secondary}; \r\n    color: ${colors.white};\r\n`};\r\n\r\n${props => props.mdpXL && css`\r\n    width: 90px;\r\n    height: 28px;\r\n    margin-bottom: 16px;\r\n    padding: 0 6px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n    border: 1px solid ${colors.primary};\r\n    color: ${colors.primary};\r\n\r\n`};\r\n\r\n${props => props.mdpXL && css`\r\n    &:hover {\r\n        background: ${colors.primary}; \r\n        color: ${colors.white};\r\n    }\r\n  `}\r\n\r\n  ${props => props.mdpXLContact && css`\r\n    width: 190px;\r\n    height: 58px;\r\n    margin-bottom: 16px;\r\n    padding: 0 6px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n    border: 1px solid ${colors.primary};\r\n    color: ${colors.primary};\r\n    font-size: 12px;\r\n\r\n`};\r\n\r\n${props => props.mdpXLContact && css`\r\n    &:hover {\r\n        background: ${colors.primary}; \r\n        color: ${colors.white};\r\n    }\r\n  `}\r\n\r\n  ${props => props.mdpXLTRI && css`\r\n    width: 95%;\r\n    margin: 2px 5px;\r\n    padding: 5px 0;\r\n    height: 33px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n    border: 1px solid ${colors.primary};\r\n    color: ${colors.primary};\r\n\r\n`};\r\n\r\n${props => props.mdpXLTRI && css`\r\n    &:hover {\r\n        background: ${colors.primary}; \r\n        color: ${colors.white};\r\n    }\r\n  `}\r\n\r\n${props => props.mdpM && css`\r\n    width: 90px;\r\n    height: 28px;\r\n    margin-bottom: 16px;\r\n    padding: 0 6px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n`};\r\n${props => props.mdpM && css`\r\n    &:hover {\r\n        background: ${colors.secondary}; \r\n        color: ${colors.white};\r\n    }\r\n  `}\r\n\r\n${props => props.mdpS && css`\r\n    width: 80px;\r\n    height: 20px;\r\n    padding: 0 6px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n`};\r\n${props => props.mdpEdit && css`\r\n    width: 80px;\r\n    height: 20px;\r\n    padding: 0 6px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n    border: 1px solid ${colors.primary};\r\n    color: ${colors.primary};\r\n`};\r\n\r\n${props => props.mdpEdit && css`\r\n    &:hover {\r\n        background: ${colors.primary}; \r\n        color: ${colors.white};\r\n    }\r\n  `}\r\n\r\n  ${props => props.mdpDelete && css`\r\n    width: 80px;\r\n    height: 20px;\r\n    padding: 0 6px;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\r\n    border: 1px solid ${colors.red};\r\n    color: ${colors.red};\r\n`};\r\n\r\n${props => props.mdpDelete && css`\r\n    &:hover {\r\n        background: ${colors.red}; \r\n        color: ${colors.white};\r\n    }\r\n  `}\r\n   \r\n`\r\n\r\n\r\n//Icons\r\nexport const MdpIcon = styled.i`\r\nfont-size: 18px;\r\nmargin-right: 16px;\r\n`\r\n\r\n//Form \r\n\r\nexport const MdpSharedStyles = css`\r\n  background-color: #eee;\r\n  height: 40px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ddd;\r\n  margin: 10px 0 20px 0;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const MdpStyledFormWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const MdpStyledForm = styled.form`\r\n  width: 100%;\r\n  max-width: 400px;\r\n  padding: 40px;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport const MdpStyledInput = styled.input`\r\n  display: block;\r\n  width: 100%;\r\n  ${MdpSharedStyles}\r\n`;\r\n\r\nexport const MdpStyledTextArea = styled.textarea`\r\n  background-color: #eee;\r\n  width: 100%;\r\n  min-height: 100px;\r\n  resize: none;\r\n  ${MdpSharedStyles}\r\n`;\r\nexport const MdpStyledButton = styled.button`\r\n  display: block;\r\n  background-color: #f7797d;\r\n  color: #fff;\r\n  font-size: 0.9rem;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  height: 40px;\r\n  padding: 0 20px;\r\n  cursor: pointer;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nexport const MdpStyledFieldset = styled.fieldset`\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  margin: 20px 0;\r\n\r\n  legend {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  label {\r\n    padding-right: 20px;\r\n  }\r\n\r\n  input {\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const MdpStyledError = styled.div`\r\n  color: red;\r\n  font-weight: 800;\r\n  margin: 0 0 40px 0;\r\n`;\r\n\r\n\r\n/*\r\n\r\n\r\nprops.theme.primary.baseColor};\r\n\r\nconst theme = {\r\n    primary: {\r\n        baseColor: \"#888\"\r\n    }\r\n}\r\n\r\n\r\n.Content{\r\n    width: 85%;\r\n    border-top: 3px solid #000;\r\n    margin: 0 auto;\r\n    border-left: 1px solid #eee;\r\n    border-right: 1px solid #eee;\r\n    border-bottom: 1px solid #eee;\r\n}\r\n.ContentTitle{\r\n    text-align: center;\r\n    margin: 20px 0;\r\n}\r\n.CategoryTitle{\r\n    letter-spacing: 2px;\r\n    font-size: 30px;\r\n    font-weight: 300;\r\n    text-transform: capitalize;\r\n}\r\n\r\n\r\n.ProductArea{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.Product{\r\n    width: 280px;\r\n    border: 1px solid #cecece;\r\n    border-radius: 5px;\r\n    text-align: center;\r\n    margin: 0 1px 10px 0; /*changer le 1px à 10px pour pc windows mini\r\n    -webkit-transform: scale(0.8);\r\n          transform: scale(0.8);\r\n  -webkit-transition: all .3s ease-in-out;\r\n  transition: all .3s ease-in-out;  \r\n}\r\n\r\n.Product:hover {\r\n    background-color: #2b3039;\r\n  -webkit-transform: scale(1);\r\n          transform: scale(1);\r\n  cursor: pointer;\r\n}\r\n.Product > .ProductImage{\r\n    width: 80%;\r\n    height: 300px;\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n}\r\n.Product > .ProductImage > img{\r\n    width: 200px;\r\n    height: 300px;\r\n}\r\n\r\n.priceP span {\r\n    font-size: 12px;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n  }\r\n\r\n.priceP {\r\nfont-size: 16px;\r\ncolor: #fe8033;\r\n} \r\n\r\n.btnP {\r\n    width: 130px;\r\n    height: 35px;\r\n    font-size: 12px;\r\n    border-radius: 35px;\r\n    background-color: #2d343e;\r\n    color: rgba(255, 255, 255, 0.5);\r\n    cursor: pointer;\r\n    -webkit-transition: background-color .3s ease;\r\n    transition: background-color .3s ease;\r\n  \r\n    margin-left: 55px;\r\n\r\n    display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-pack: center;\r\n      -ms-flex-pack: center;\r\n          justify-content: center;\r\n  -webkit-box-align: center;\r\n      -ms-flex-align: center;\r\n          align-items: center;\r\n  }\r\n\r\n\r\n  .Product:hover .ProductDetails .btnP{\r\n    background-color: #fe8033;\r\n    font-size: 18px;\r\n    font-weight: 200;\r\n    color: #fff;\r\n  }\r\n  .Product:hover .ProductDetails .priceP{\r\n    font-size: 17px;\r\n  }\r\n  .Product:hover .ProductDetails .nameP{\r\n    font-size: 18px;\r\n    font-weight: 200;\r\n    color: #fff;\r\n  }\r\n  \r\n\r\n.ProductDetails{\r\n    margin: 20px 0;\r\n}\r\n\r\n.ContentBody{\r\n    display: flex;\r\n}\r\n.ContentBody .SideMenu{\r\n    flex: 2;\r\n}\r\n.ContentBody .MainContent{\r\n    flex: 8;\r\n}\r\n.SideMenu{\r\n    border: 1px solid #cecece;\r\n    margin-right: 10px;\r\n    box-sizing: border-box;\r\n}\r\n.SideMenu .SideMenuTitle{\r\n    font-size: 18px;\r\n    border-bottom: 1px solid #cecece;\r\n    padding: 5px 10px;\r\n}\r\n.Filter .FilterTitle{\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    padding: 5px 10px;\r\n}\r\n.SideMenu ul{\r\n    position: relative;\r\n}\r\n.SideMenu ul li{\r\n    margin-left: 10px;\r\n    font-size: 14px;\r\n}\r\n.SideMenu > ul > li > a:nth-of-type(1){\r\n    font-weight: bold;\r\n}\r\n.FilterButton{\r\n    width: 95%;\r\n    margin: 2px 5px;\r\n    padding: 5px 0;\r\n    border-radius: 3px;\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    font-family: 'Lato', sans-serif;\r\n    font-size: 12px;\r\n    background-color: #22402b;\r\n    color: white;\r\n}\r\n.FilterButton:hover{\r\n    background-color: black;\r\n    color: white;\r\n}\r\n*/\r\n",["364","365"],"C:\\mendpress\\client\\src\\containers\\App.js",["366","367"],"C:\\mendpress\\client\\src\\components\\Logo\\index.js",[],"C:\\mendpress\\client\\src\\containers\\PlaceOrder\\index.js",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"C:\\mendpress\\client\\src\\containers\\ThankYou\\index.js",["383","384","385","386","387","388","389","390","391","392"],"import React, { useState , useEffect} from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './style.css';\r\nimport { addToCart, updateCart, getCartItems } from '../../store/actions/cartActions'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst ThankYou  = (props) => {\r\n\r\n        const queryParams = props.location.search.split(\"?\")[1];\r\n        const orderId = queryParams.split(\"=\")[1];\r\n\r\n        const cart = useSelector(state => state.cart);\r\n        const { cartItem, totalAmount, cartCount} = cart\r\n\r\n        const userSignin = useSelector(state => state.userSignin);\r\n        const { loading, userInfo, error } = userSignin;\r\n        const dispatch = useDispatch()\r\n\r\n        useEffect(() => {\r\n\r\n            if(userInfo){\r\n            dispatch(getCartItems())\r\n            }\r\n        }, [])\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"Content\">\r\n                    <div className=\"ThankyouPage\">\r\n                       <h1>Merci pour votre commande</h1>\r\n                       <p className=\"OrderId\">L'identifiant de votre commande est: {orderId.toLocaleUpperCase()}</p>\r\n                       <p className=\"SmallText\"> Vous recevrez bientôt un mail de confirmation </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    \r\n\r\n}\r\n\r\nexport default ThankYou;",["393","394"],"C:\\mendpress\\client\\src\\containers\\Signup\\index.js",["395","396"],"import './style.css';\r\nimport Logo from './MEND.png';\r\nimport MobileTypeInput from '../../components/UI/MobileTypeInput'\r\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { register } from '../../store/actions/userActions'\r\nimport Error from '../../components/Error';\r\n\r\nconst Signup = (props) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repassword, setRepassword] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n  const [isError, setIsError]  = useState(false)\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n \r\n  //const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n  const dispatch = useDispatch();\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push('/login');\r\n    }\r\n    console.log(\"user data: \"+JSON.stringify(userInfo))\r\n    console.log(\"error: \"+JSON.stringify(error))\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo])\r\n  \r\n\r\n   const signupHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(firstName === ''){\r\n            setIsError(true)\r\n            setErrorMessage('Enter First Name')\r\n            return\r\n        }\r\n        if(lastName === ''){\r\n            setIsError(true)\r\n            setErrorMessage('Enter Last Name')\r\n            return\r\n        }\r\n\r\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\n        if(!emailPattern.test(email)){\r\n            setIsError(true)\r\n            setErrorMessage('Invalid Email Address')\r\n            return\r\n        }\r\n\r\n        if(email === ''){\r\n            setIsError(true)\r\n            setErrorMessage('Enter email')\r\n            return\r\n        }\r\n        if(password === ''){\r\n            setIsError(true)\r\n            setErrorMessage('Enter password')\r\n            return\r\n        }\r\n        if(repassword === ''){\r\n            setIsError(true)\r\n            setErrorMessage('Confirm password')\r\n            return\r\n        }\r\n        if(password !== repassword){\r\n            setIsError(true)\r\n            setErrorMessage('Password dosent match')\r\n            return\r\n        }\r\n        dispatch(register(firstName, lastName, email, password))\r\n        \r\n        if(!error){\r\n            props.history.push('/login');\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"LoginContainer\" style={{marginBottom: \"33px\"}}>\r\n        <div className=\"WelcomeText\">\r\n            <h3>Créer un compte</h3>\r\n        </div>\r\n          {loading && <div>Loading...</div>}\r\n          {error && <div>{error}</div>}\r\n        <img src={Logo} alt=\"logo\" height=\"80\" width=\"300\"/> \r\n        <div className=\"LoginWrapper\">\r\n            <form onSubmit={signupHandler} autoComplete=\"off\">\r\n\r\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <div style={{width: '49%'}}>\r\n                        <MobileTypeInput \r\n                            type=\"text\"\r\n                            placeholder=\"Nom\"\r\n                            value={firstName}\r\n                            textChange={(e) => setFirstName(e.target.value)}\r\n                            name=\"firstName\"\r\n                        />\r\n                    </div>\r\n                    <div style={{width: '49%'}}>\r\n                        <MobileTypeInput \r\n                            type=\"text\"\r\n                            placeholder=\"Prenom\"\r\n                            value={lastName}\r\n                            textChange={(e) => setLastName(e.target.value)}\r\n                            name=\"lastName\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n                <MobileTypeInput \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    textChange={(e) => setEmail(e.target.value)}\r\n                    name=\"email\"\r\n                />\r\n                <MobileTypeInput \r\n                    type=\"password\"\r\n                    placeholder=\"Mot de passe\"\r\n                    value={password}\r\n                    textChange={(e) => setPassword(e.target.value)}\r\n                    name=\"password\"\r\n                />\r\n                <MobileTypeInput \r\n                    type=\"password\"\r\n                    placeholder=\"Confirmation de mot de passe\"\r\n                    value={repassword}\r\n                    textChange={(e) => setRepassword(e.target.value)}\r\n                    name=\"repassword\"\r\n                />\r\n                \r\n                <Error>\r\n                    {errorMessage}\r\n                </Error>\r\n\r\n                <SubmitGradientButton \r\n                    label=\"S'inscrire\"\r\n                    style={{marginTop: '30px'}}\r\n                />\r\n            </form>\r\n        </div>\r\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n            <Link to=\"/login\">Se connecter</Link>\r\n            <Link to=\"/forget-password\">Mot de passe oublié ?</Link>\r\n        </div>\r\n        \r\n        \r\n    </div>\r\n)\r\n\r\n}\r\n\r\n\r\nexport default Signup\r\n\r\n","C:\\mendpress\\client\\src\\components\\Footer\\FooterContainer.js",[],"C:\\mendpress\\client\\src\\components\\UI\\RadioButton\\index.js",[],"C:\\mendpress\\client\\src\\components\\Footer\\Footer.js",[],"C:\\mendpress\\client\\src\\containers\\PlaceOrder\\AddressForm\\index.js",[],"C:\\mendpress\\client\\src\\components\\Icon\\index.js",[],"C:\\mendpress\\client\\src\\components\\Footer\\styles\\footer.js",[],"C:\\mendpress\\client\\src\\components\\Header\\MainHeader\\MainHeader.js",["397","398","399"],"C:\\mendpress\\client\\src\\containers\\Orders\\OrderManagement.js",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\nimport Header from '../../components/Header/Header'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {base_url} from '../../constants/index'\r\nimport Axios from 'axios'\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n//import './style.css';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport 'ag-grid-enterprise';\r\nimport {AccessAlarm, ThreeDRotation, AutorenewIcon } from '@material-ui/icons';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport OrderManagement2 from './OrderManagement2'\r\n\r\nconst OrderManagement = (props) => {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, userInfo, error } = userSignin\r\n    const [userList, setUserList] = useState([])\r\n    const [ordersList, setOrdersList] = useState([])\r\n    const [status, setStatus] = useState(false)\r\n    const [deleteDb, setDeleteDb] = useState(false)\r\n    const [isOpened, setIsOpened] = useState(true)\r\n    const [firstName, setFirstName] = useState(\"\")\r\n   const [lastName, setLastName] = useState(\"\")\r\n   const [myOrders, setMyOrders] = useState([])\r\n   const [deliveryStatus, setDeliveryStatus] = useState(\"livré le 12/01/2021\")\r\n\r\n\r\n  \r\n    const columns = [\r\n        {headerName:\"Actions\" , field:\"\", editable: false,\r\n        cellRendererFramework: (params) => ( <MdpButton outline mdpXL onClick={() => {\r\n            if(!params.data.isAdmin && params.data.hasAnOrder){\r\n              //setOrderUserID(params.data._id)\r\n                getOrdersAdmin(params.data._id)\r\n                setFirstName(params.data.firstName)\r\n                setLastName(params.data.lastName)\r\n                setIsOpened(false)\r\n              console.log(\"orders ftater consulter \"+JSON.stringify(myOrders))\r\n              console.log(\"isopened after cisuloter 3: \"+JSON.stringify(isOpened));\r\n              }      \r\n        } }\r\n        >\r\n        <span style={{flexDirection:\"column\", textAlign: \"center\"}}>Consulter <VisibilityIcon fontSize=\"medium\" /></span>\r\n        </MdpButton>)},\r\n        {headerName:\"Commande\" , field:\"hasAnOrder\", editable: true, \r\n        cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n        {headerName:\"Nom\" , field:\"lastName\", editable: false, \r\n         cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n        {headerName:\"Prenom\" , field:\"firstName\", editable: false, \r\n        cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n        {headerName:\"UID\", field:\"_id\", editable: false, \r\n        cellRenderer: 'agAnimateShowChangeCellRenderer'},    \r\n       \r\n    ];\r\n\r\n\r\n \r\n    const columns1 = [\r\n      {headerName:\"N° de la commande\" , field:\"_id\", editable: false, cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Commande passée le\" , field:\"orderDate\",cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Produit\" , field:\"product\", \r\n      cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Montant total\" , field:\"total\", \r\n      cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n  \r\n       \r\n       {headerName:\"Status de Paiement\", field:\"paymentStatut\", cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n  \r\n      {headerName:\"Adresse de livraison\" , field:\"deliveryAdress\",  cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Type de Paiement\", field:\"paymentType\", cellRenderer: 'agAnimateShowChangeCellRenderer'}, \r\n      \r\n      {headerName:\"Status de Paiement\", field:\"paymentStatut\",  cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Statut de la livraison\" , field:\"DeliveryStatus\",  cellRenderer: 'agAnimateShowChangeCellRenderer'}\r\n     \r\n  ];\r\n  //columns for one user orders:\r\n\r\n\r\n   /* const frameworkComponents ={\r\n        genderCellRenderer: GenderRenderer\r\n      }*/\r\n    const defaultColDef = { \r\n        sortable: true,\r\n        editable: true, \r\n        filter: true,\r\n        resizable: true,\r\n        minWidth: 100,\r\n        flex: 1,\r\n        floatingFilter: true,\r\n        icons: {\r\n            sortAscending: '<i class=\"fa fa-sort-alpha-up\"/>',\r\n            sortDescending: '<i class=\"fa fa-sort-alpha-down\"/>',\r\n        }\r\n        }\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n    \r\n        if(!userInfo){\r\n    \r\n            props.history.push('/login');\r\n                     \r\n        }else{\r\n            if(userInfo.isAdmin){\r\n                //getUsers()\r\n                \r\n                //getOneUserOrders()\r\n                adminGetAllUsers()\r\n            }\r\n        \r\n        }\r\n        return () => {\r\n        };\r\n      }, []);\r\n    \r\n    \r\n    const onGridReady = (params) => {\r\n        setGridApi(params.api);\r\n        setGridColumnApi(params.columnApi);\r\n        console.log(\"Grid is ready load orders \"+params.api);\r\n        \r\n      };\r\n\r\n  \r\n    const onQuickFilterChanged = () => {\r\n    gridApi.setQuickFilter(document.getElementById('quickFilter').value);\r\n    };\r\n    const getRowData = () => {\r\n        var rowData = [];\r\n        userList.forEachNode(function (node) {\r\n          rowData.push(node.data);\r\n        });\r\n        console.log('Row Data:');\r\n        console.log(rowData);\r\n      };\r\n    \r\n    const clearData = () => {\r\n        userList.setRowData([]);\r\n      };\r\n\r\n    const updateItems = () => {\r\n    var itemsToUpdate = [];\r\n    gridApi.forEachNodeAfterFilterAndSort(function (rowNode, index) {\r\n        if (index >= 2) {\r\n        return;\r\n        }\r\n        var data = rowNode.data;\r\n        itemsToUpdate.push(data);\r\n    });\r\n    var res = gridApi.applyTransaction({ update: itemsToUpdate });\r\n    printResult(res);\r\n    };\r\n\r\n    const onRemoveSelected = () => {\r\n    var selectedData = gridApi.getSelectedRows();\r\n    var res = gridApi.applyTransaction({ remove: selectedData });\r\n    printResult(res);\r\n\r\n    if(deleteDb){\r\n\r\n    //api delete on db  \r\n  }\r\n    };\r\n    const deleteOrder =  async (orderId) => {\r\n        console.log(\"admin get orders\")\r\n      /*  try{\r\n\r\n            const { data } = await Axios.get(`${base_url}/admin/deleteOrder/${orderId}`, {\r\n                headers: {\r\n                      Authorization: ' Bearer ' + userInfo.token\r\n                }\r\n            })\r\n            console.log(\"response All users: \"+JSON.stringify(data.message));\r\n            setUserList(data.message)\r\n\r\n        }catch(error){\r\n            console.log(error + \"error front\");\r\n        }*/\r\n    }\r\n\r\n\r\n    const saveDataOnDb = () =>  {\r\n      \r\n      }\r\n\r\n    const printResult = (res) => {\r\n    console.log('---------------------------------------');\r\n    if (res.add) {\r\n        res.add.forEach(function (rowNode) {\r\n        console.log('Added Row Node', rowNode);\r\n        });\r\n    }\r\n    if (res.remove) {\r\n        res.remove.forEach(function (rowNode) {\r\n        console.log('Removed Row Node', rowNode);\r\n        });\r\n    }\r\n    if (res.update) {\r\n        res.update.forEach(function (rowNode) {\r\n        console.log('Updated Row Node', rowNode);\r\n        });\r\n    }\r\n    }\r\n    /****get all users for administration back office */\r\n    const adminGetAllUsers = async () => {\r\n        // getUsers()\r\n            console.log(\"admin get users \")\r\n            try{\r\n\r\n                const { data } = await Axios.get(`${base_url}/admin/get-users`, {\r\n                    headers: {\r\n                        Authorization: ' Bearer ' + userInfo.token\r\n                    }\r\n                })\r\n                console.log(\"response All users: \");\r\n                setUserList(data.message)\r\n\r\n            }catch(error){\r\n                console.log(error + \"error front\");\r\n            }\r\n            \r\n        }\r\n\r\n    const getOrdersAdmin =  async (userId) => {\r\n        \r\n                console.log(\"admin get orders\" + userId)\r\n                try{\r\n                    \r\n                const { data } = await Axios.get(`${base_url}/order/getorders/${userId}`, {\r\n                    headers: {\r\n                            Authorization: ' Bearer ' + userInfo.token\r\n                    }\r\n                })\r\n                console.log(\"responseorderrrrrrr: \"+JSON.stringify(data.message));\r\n                setOrdersList(data.message)\r\n                console.log(\"responseorderrrrrrr 2: \"+JSON.stringify(isOpened));\r\n\r\n            \r\n            }catch(error){\r\n                console.log(error);\r\n            }\r\n    }\r\n\r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    const getOrderTotal = (id) => {\r\n      const singleOrder = ordersList.find(order => order._id === id);\r\n      let orderTotal = 0;\r\n      singleOrder.order.forEach(order => {\r\n          orderTotal = orderTotal + (order.price * order.quantity)\r\n      });\r\n\r\n      return orderTotal;\r\n  }\r\n    const onUpdateSomeValues = (rowIndex) => {\r\n      var rowCount = gridApi.getDisplayedRowCount();\r\n     \r\n        var rowNode = gridApi.getDisplayedRowAtIndex(rowIndex);\r\n\r\n        console.log(\"rownode::::: \"+rowNode)\r\n        if(rowNode.data.status!=\"NEW\"){\r\n          rowNode.setDataValue('status', \"UPDATED\")\r\n        }\r\n      \r\n    };\r\n\r\n    const onCellValueChanged = (event) => {\r\n    \r\n      console.log('Data after change is', event);\r\n      onUpdateSomeValues(event.rowIndex)\r\n\r\n    \r\n    };\r\n\r\n  const sendData = () => {\r\n    console.log(\"isopen =\"+isOpened)\r\n    if(status){\r\n\r\n      console.log('Data updated'+gridApi.data);\r\n    //update user info\r\n  }\r\n  }\r\n\r\n const submitHandler = () => {\r\n   console.log(\"submit data\")\r\n }\r\n\r\n   return (\r\n    <div className=\"Content\">\r\n    <div className=\"Card\">\r\n    { isOpened ? <p className=\"CardText\">Consultation des commandes</p> : <p className=\"CardText\">Liste commandes</p>}\r\n\r\n    { isOpened ? \r\n    \r\n       <div className=\"ag-theme-alpine\" style={{height: 560, width: 1251}}>\r\n     \r\n\r\n           <AgGridReact \r\n                rowData={userList} \r\n                columnDefs={columns} \r\n                defaultColDef={defaultColDef} \r\n                sideBar={{ toolPanels: ['columns'] }}\r\n                rowGroupPanelShow={'always'}\r\n                pivotPanelShow={'always'}\r\n                debug={true}\r\n                animateRows={true}\r\n                rowSelection={'multiple'}\r\n                enableBrowserTooltips={true}\r\n                tooltipShowDelay={{tooltipShowDelay: 2}}\r\n                pagination={true}\r\n                suppressRowClickSelection={true}\r\n                groupSelectsChildren={true}\r\n                onGridReady={onGridReady}\r\n                components={{ datePicker: getDatePicker() }}\r\n                //frameworkComponents={frameworkComponents}                    \r\n                onCellValueChanged={onCellValueChanged}\r\n                />          \r\n       </div>\r\n       : ordersList.map(order => {\r\n        return (\r\n         \r\n          <div key={order._id} className=\"Order\">\r\n                        <div className=\"OrderHeader\">\r\n                        N° de la commande:  <a style={{marginRight: \"10px\"}} >{order._id}</a>\r\n\r\n                        Utilisateur: <a  className=\"odp\" style={{color: \"white\"}}>{firstName} {lastName}</a>\r\n\r\n                        <MdpButton style={{float: \"right\"}} outline mdpXL onClick={() => {\r\n                                                setFirstName(\" \")\r\n                                                setLastName(\" \")\r\n                                                setIsOpened(true) \r\n                                                adminGetAllUsers()                                                           \r\n                                            } }\r\n                                            >\r\n                                Retour\r\n                        </MdpButton>\r\n                                    </div>\r\n                                    <div className=\"OrderDescription\" >\r\n                                      \r\n                                        <div className=\"od1\">\r\n                                            <p className=\"odtitle\">Adresse de livraison</p>\r\n                                            <input style={{backgroundColor:\"#00008B\", color: \"white\"}}\r\n                                                    value={`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}\r\n                                        \r\n                                                    readOnly\r\n                                                   type=\"text\" />\r\n                                       </div>\r\n                                        <div className=\"od2\">\r\n                                            <p className=\"odtitle\">Type de paiement</p>\r\n                                            <input style={{backgroundColor:\"#00008B\", color: \"white\"}}\r\n                                                    value={order.paymentType}\r\n                                                    readOnly\r\n                                                   type=\"text\" />\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut du paiement</p>\r\n                                            <input style={{backgroundColor:\"#00008B\", color: \"white\"}}\r\n                                                    value={order.paymentStatus}\r\n                                                    readOnly\r\n                                                   type=\"text\" />\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut de la livraison</p>\r\n                                            <input style={{backgroundColor:\"#00008B\", color: \"white\"}}\r\n                                                    value={deliveryStatus}\r\n                                                    onChange={(e) => setDeliveryStatus(e.target.value)}\r\n                                                   type=\"text\" required />\r\n                                              \r\n                                          </div>\r\n                                          <MdpButton type=\"submit\" outline mdpXL style={{float: \"left\" }}\r\n                                          onClick={(e) => {\r\n                                            e.preventDefault()\r\n                                            submitHandler()\r\n                                          }}>\r\n                                        Valider\r\n                                      </MdpButton>\r\n                                        \r\n                                    </div>\r\n\r\n\r\n                                    <div>\r\n                                        {order.order.map(item => (\r\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\r\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\r\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"odtitle\">{item.product.name}</p>\r\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\r\n                                                    <p>Quantité: {item.quantity}</p>\r\n                                                    <p>{item.price * item.quantity}€</p>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"OrderFooter\">\r\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\r\n                                        <MdpButton \r\n                                        style={{marginLeft: \"-675px\"}}\r\n                                        outline\r\n                                        mdpS\r\n                                        mdpDelete\r\n                                        onClick={() => {\r\n                                                            deleteOrder(order._id)\r\n                                                            console.log(order._id)                                                           \r\n                                                        } } >\r\n                                        <i className=\"fas fa-trash\" style={{marginRight: \"3px\"}}></i>&nbsp;\r\n                                        Supprimer\r\n                                        </MdpButton>\r\n                                      \r\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\r\n                                    </div>\r\n                                </div>\r\n     \r\n\r\n            \r\n        )\r\n    })}\r\n    </div>\r\n    </div>\r\n   );\r\n\r\n   \r\n\r\n\r\n \r\n  function extractValues(mappings) {\r\n    return Object.keys(mappings);\r\n  }\r\n  function lookupValue(mappings, key) {\r\n    console.log(\"key \"+key)\r\n    console.log(\"key \"+JSON.stringify(mappings))\r\n    return mappings[key];\r\n  }\r\n  function lookupKey(mappings, name) {\r\n    var keys = Object.keys(mappings);\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n      if (mappings[key] === name) {\r\n        return key;\r\n      }\r\n    }\r\n  }\r\n\r\n  function colourCellRenderer(params) {\r\n    if (params.value === '(Select All)') {\r\n      return params.value;\r\n    }\r\n    const image = props.value === 'Homme' ? 'male.png' : 'female.png';\r\n      const imageSource = `https://www.ag-grid.com/example-assets/genders/${image}`;\r\n    console.log(\"value \"+params.value)\r\n    return (\r\n      '<span style=\"color: ' +\r\n      removeSpaces(params.valueFormatted) +\r\n      '\">' + (params.value==\"Homme\"? '<img src=\"https://www.ag-grid.com/example-assets/genders/male.png\"/>'+\r\n      params.value +'</span>': '<img src=\"https://www.ag-grid.com/example-assets/genders/female.png\"/>'+\r\n      params.value +'</span>')\r\n    );\r\n  }\r\n  //PregnantWomanIcon params.value + `<img src={${imageSource}}/></span>`\r\n  function removeSpaces(str) {\r\n    return str ? str.replace(/\\s/g, '') : str;\r\n  }\r\n\r\nfunction getDatePicker() {\r\n    function Datepicker() {}\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement('input');\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add('ag-input');\r\n      this.eInput.style.height = '100%';\r\n      \r\n      this.eInput.setAttribute(\"type\", \"date\");\r\n    this.cell = params.eGridCell;\r\n    this.oldWidth = this.cell.style.width;\r\n    this.cell.style.width = \"162px\";\r\n    this.eInput.value = params.value;\r\n     //$(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () {};\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n  \r\n};\r\n{/** ordersList.map(order => {\r\n        return (\r\n            <div key={order._id} className=\"Order\">\r\n                                    <div className=\"OrderHeader\">\r\n                                    N° de la commande:  <a style={{marginRight: \"10px\"}} href=\"#\">{order._id}</a>\r\n\r\n                                    Utilisateur: <a  className=\"odp\" style={{color: \"white\"}}>{firstName} {lastName}</a>\r\n\r\n                                    <MdpButton style={{float: \"right\"}} outline mdpXL onClick={() => {\r\n                                                           setFirstName(\" \")\r\n                                                           setLastName(\" \")\r\n                                                           setIsOpened(false) \r\n                                                           adminGetAllUsers()                                                           \r\n                                                        } }\r\n                                                        >\r\n                                            Retour\r\n                                    </MdpButton>\r\n                                    </div>\r\n                                    <div className=\"OrderDescription\">\r\n                                        <div className=\"od1\">\r\n                                            <p className=\"odtitle\">Adresse de livraison</p>\r\n                                            <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\r\n                                        </div>\r\n                                        <div className=\"od2\">\r\n                                            <p className=\"odtitle\">Type de paiement</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut du paiement</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\r\n                                        </div>\r\n                                        <div className=\"od3\">\r\n                                            <p className=\"odtitle\" >Statut de la livraison</p>\r\n                                            <a className=\"odp\" style={{color: \"white\"}}>{ order.isOrderCompleted ? \"livré le 12/01/2021\" : order.paymentStatus }</a>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n\r\n                                    <div>\r\n                                        {order.order.map(item => (\r\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\r\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\r\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"odtitle\">{item.product.name}</p>\r\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\r\n                                                    <p>Quantité: {item.quantity}</p>\r\n                                                    <p>{item.price * item.quantity}€</p>\r\n                                                    </div>\r\n                                                    \r\n                                                </div>\r\n                                                \r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"OrderFooter\">\r\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\r\n                                        <MdpButton \r\n                                        style={{marginLeft: \"-675px\"}}\r\n                                        outline\r\n                                        mdpS\r\n                                        mdpDelete\r\n                                        onClick={() => {\r\n                                                            deleteOrder(order._id)\r\n                                                            console.log(order._id)                                                           \r\n                                                        } } >\r\n                                        <i className=\"fas fa-trash\" style={{marginRight: \"3px\"}}></i>&nbsp;\r\n                                        Supprimer\r\n                                        </MdpButton>\r\n                                      \r\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\r\n                                    </div>\r\n                                </div>\r\n        )\r\n    }) */}\r\nexport default OrderManagement;\r\n\r\n","C:\\mendpress\\client\\src\\components\\Header\\TopHeader\\TopHeader.js",["434","435","436"],"import { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport React, { useEffect } from 'react'\r\nimport { logout, update } from '../../../store/actions/userActions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport IdleTimerContainer from '../../../containers/IdleTimerContainer/IdleTimerContainer'\r\n\r\n\r\n\r\nconst TopHeader = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { userInfo } = userSignin\r\n\r\n    const handleLogout = () => {\r\n      dispatch(logout());\r\n    }\r\n\r\n \r\n    let guestAccount = <ul className=\"Dropdown Account\">\r\n                            <li><Link to=\"/signup\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>S'inscrire</span></Link></li>\r\n                            <li><Link to=\"/login\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>Se connecter</span></Link></li>\r\n                        </ul>;  \r\n    \r\n    if(userInfo){\r\n\r\n        if(userInfo.isAdmin==true){\r\n            guestAccount = <ul className=\"Dropdown Account\">\r\n            <li><Link to=\"/OrderManagement\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\r\n            <li><Link to=\"/manageusers\"><i className=\"fas fa-users\"></i>&nbsp;&nbsp;<span>Utilisateurs</span></Link></li>\r\n            <li><Link to=\"/manageproducts\"><i className=\"fas fa-book\"></i>&nbsp;&nbsp;<span>Produits</span></Link></li>\r\n            <li><Link to=\"\" onClick={() => handleLogout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\r\n        </ul>;\r\n        }else{\r\n            guestAccount = <ul className=\"Dropdown Account\">\r\n            <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\r\n            <li><Link to=\"\" onClick={() => handleLogout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\r\n        </ul>;\r\n        }\r\n        \r\n        }\r\n\r\n        return (\r\n            <div className=\"TopHeader\">\r\n                <div className=\"SocialMediaIcons\">\r\n                <ul className=\"TopMenu\">\r\n                    <i className=\"fab fa-facebook-f\"></i>\r\n                    <i className=\"fab fa-google-plus-g\"></i>\r\n                    <i className=\"fab fa-instagram\"></i>\r\n                    <i className=\"fab fa-youtube\"></i>\r\n                </ul>\r\n                </div>\r\n                <IdleTimerContainer  idle={props} >\r\n                </IdleTimerContainer> \r\n                <div>\r\n                    <ul className=\"TopMenu\">\r\n                        <li className=\"MenuItem\">\r\n                            <i className=\"fas fa-user-circle\" ></i>&nbsp;&nbsp;\r\n                            <Link to=\"/account\">{userInfo ? userInfo.firstName: 'Mon compte'}</Link>\r\n        \r\n                            {guestAccount}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\n\r\nexport default TopHeader;","C:\\mendpress\\client\\src\\components\\UI\\MobileTypeInput\\index.js",[],"C:\\mendpress\\client\\src\\containers\\Cart\\CartItem\\index.js",["437","438","439","440","441","442","443","444","445"],"import React, { useEffect, useState } from 'react';\r\nimport QuantityControl from '../../../components/QuantityControl';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './style.css';\r\nimport {\r\n    clearCart } from '../../../store/actions/cartActions'\r\nimport {MdpButton} from '../../../components/UI/MdpStyledComponents'\r\nimport { addToCart, updateCart, getCartItems} from '../../../store/actions/cartActions'\r\n\r\n\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, userInfo, error } = userSignin;\r\n\r\n    const cart = useSelector(state => state.cart);\r\n   const { cartItem, totalAmount, cartCount} = cart\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            dispatch(getCartItems(userInfo))\r\n        }\r\n      }, [props])\r\n\r\n    const removeFromCartHandler = () => {\r\n        const product = {\r\n                    productId: props.productId,\r\n                    quantity: props.quantity,\r\n                    total: props.total\r\n\r\n                    }\r\n        dispatch(clearCart(userInfo, product));\r\n        dispatch(getCartItems(userInfo))\r\n\r\n      }\r\n\r\n\r\n    return (\r\n        <div className=\"SingleItem\">\r\n            <div className=\"ItemWrapper\">\r\n                <div className=\"ItemImage\" style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}}>\r\n                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={props.imageUrl} alt=\"\" />\r\n                </div>\r\n                <div className=\"ItemDetails\">\r\n                    <p className=\"ItemName\">{props.name}</p>\r\n                    <p className=\"ItemPrice\">{props.total}€</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"CartActionButtons\">\r\n                <QuantityControl\r\n                    productId={props.productId}\r\n                    name={props.name} \r\n                    quantity={props.quantity}\r\n                    changeQuantity={props.changeQuantity}\r\n                    increaseQuantity={props.increaseQuantity}\r\n                    decreaseQuantity={props.decreaseQuantity}\r\n                />\r\n                <MdpButton style={{marginTop: \"15px\"}} outline mdpXL  onClick={() => removeFromCartHandler()} >\r\n                 Supprimer\r\n                 </MdpButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;","C:\\mendpress\\client\\src\\containers\\Orders\\OrderManagement2.js",["446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\nimport Header from '../../components/Header/Header'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {base_url} from '../../constants/index'\r\nimport Axios from 'axios'\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n//import './style.css';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport 'ag-grid-enterprise';\r\nimport {AccessAlarm, ThreeDRotation, AutorenewIcon } from '@material-ui/icons';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst OrderManagement2 = (props) => {\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const { loading, userInfo, error } = userSignin\r\n    const [ordersList, setOrdersList] = useState([])\r\n    const [deleteDb, setDeleteDb] = useState(false)\r\n    const [isOpened, setIsOpened] = useState(true)\r\n   const [fullName, setFullName] = useState(\"\")\r\n   const [myOrders, setMyOrders] = useState([])\r\n\r\n \r\n    const columns = [\r\n      {headerName:\"N° de la commande\" , field:\"_id\", editable: false, cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Commande passée le\" , field:\"orderDate\",cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Produit\" , field:\"product\", \r\n      cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Montant total\" , field:\"total\", \r\n      cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n  \r\n       \r\n       {headerName:\"Status de Paiement\", field:\"paymentStatut\", cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n  \r\n      {headerName:\"Adresse de livraison\" , field:\"deliveryAdress\",  cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Type de Paiement\", field:\"paymentType\", cellRenderer: 'agAnimateShowChangeCellRenderer'}, \r\n      \r\n      {headerName:\"Status de Paiement\", field:\"paymentStatut\",  cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      {headerName:\"Statut de la livraison\" , field:\"DeliveryStatus\",  cellRenderer: 'agAnimateShowChangeCellRenderer'}\r\n     \r\n  ];\r\n  //columns for one user orders:\r\n\r\n    const defaultColDef = { \r\n        sortable: true,\r\n        editable: true, \r\n        filter: true,\r\n        resizable: true,\r\n        minWidth: 100,\r\n        flex: 1,\r\n        floatingFilter: true,\r\n        icons: {\r\n            sortAscending: '<i class=\"fa fa-sort-alpha-up\"/>',\r\n            sortDescending: '<i class=\"fa fa-sort-alpha-down\"/>',\r\n        }\r\n        }\r\n    const [gridApi, setGridApi] = useState(null);\r\n    const [gridColumnApi, setGridColumnApi] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n    \r\n        if(!userInfo){\r\n    \r\n            props.history.push('/login');\r\n                     \r\n        }else{\r\n            if(userInfo.isAdmin){\r\n                getOrdersAdmin(props)\r\n            }\r\n        \r\n        }\r\n        return () => {\r\n        };\r\n      }, []);\r\n    \r\n    \r\n    const onGridReady = (params) => {\r\n        setGridApi(params.api);\r\n        setGridColumnApi(params.columnApi);\r\n        console.log(\"Grid is ready load orders \"+params.api);\r\n        \r\n      };\r\n\r\n  \r\n    const onQuickFilterChanged = () => {\r\n    gridApi.setQuickFilter(document.getElementById('quickFilter').value);\r\n    };\r\n    const getRowData = () => {\r\n        var rowData = [];\r\n        myOrders.forEachNode(function (node) {\r\n          rowData.push(node.data);\r\n        });\r\n        console.log('Row Data:');\r\n        console.log(rowData);\r\n      };\r\n    \r\n    const clearData = () => {\r\n        myOrders.setRowData([]);\r\n      };\r\n\r\n    const updateItems = () => {\r\n    var itemsToUpdate = [];\r\n    gridApi.forEachNodeAfterFilterAndSort(function (rowNode, index) {\r\n        if (index >= 2) {\r\n        return;\r\n        }\r\n        var data = rowNode.data;\r\n        itemsToUpdate.push(data);\r\n    });\r\n    var res = gridApi.applyTransaction({ update: itemsToUpdate });\r\n    printResult(res);\r\n    };\r\n\r\n    const onRemoveSelected = () => {\r\n    var selectedData = gridApi.getSelectedRows();\r\n    var res = gridApi.applyTransaction({ remove: selectedData });\r\n    printResult(res);\r\n\r\n    if(deleteDb){\r\n\r\n    //api delete on db  \r\n  }\r\n    };\r\n\r\n    const deleteOrder =  async (orderId) => {\r\n        console.log(\"admin get orders\")\r\n      /*  try{\r\n\r\n            const { data } = await Axios.get(`${base_url}/admin/deleteOrder/${orderId}`, {\r\n                headers: {\r\n                      Authorization: ' Bearer ' + userInfo.token\r\n                }\r\n            })\r\n            console.log(\"response All users: \"+JSON.stringify(data.message));\r\n            setUserList(data.message)\r\n\r\n        }catch(error){\r\n            console.log(error + \"error front\");\r\n        }*/\r\n    }\r\n\r\n\r\n    const saveDataOnDb = () =>  {\r\n      \r\n      }\r\n\r\n    const printResult = (res) => {\r\n    console.log('---------------------------------------');\r\n    if (res.add) {\r\n        res.add.forEach(function (rowNode) {\r\n        console.log('Added Row Node', rowNode);\r\n        });\r\n    }\r\n    if (res.remove) {\r\n        res.remove.forEach(function (rowNode) {\r\n        console.log('Removed Row Node', rowNode);\r\n        });\r\n    }\r\n    if (res.update) {\r\n        res.update.forEach(function (rowNode) {\r\n        console.log('Updated Row Node', rowNode);\r\n        });\r\n    }\r\n    }\r\n\r\n\r\n    const getOrdersAdmin =  async (props) => {\r\n        \r\n                console.log(\"admin get orders\" + props.userId)\r\n                try{\r\n                    \r\n                const { data } = await Axios.get(`${base_url}/order/getorders/${props.userId}`, {\r\n                    headers: {\r\n                            Authorization: ' Bearer ' + userInfo.token\r\n                    }\r\n                })\r\n                console.log(\"OrderManagement 2 data order: \"+JSON.stringify(data.message));\r\n\r\n                  var listOfOrder = []\r\n                   /* const singleOrder = item.find(order => order._id === id);\r\n                    console.log(\"single order \"+JSON.stringify(singleOrder))\r\n                    let orderTotal = 0;\r\n                    singleOrder.forEach(order => {\r\n                        orderTotal = orderTotal + (order.price * order.quantity)\r\n                    });*/\r\n\r\n                    listOfOrder[\"_id\"] = data.message[0]._id\r\n                    console.log(\" 2 data order list: \"+JSON.stringify(data.message[0].order));\r\n                    console.log(\" 2 data order list: \"+JSON.stringify(data.message[0].order[0]));\r\n                 \r\n                        listOfOrder[\"product\"+data.message[0].order[0].product.name] = data.message[0].order[0].product.imageUrl\r\n\r\n                        //const singleOrder = order.find(order => order._id === \"607d5b4cc44820040ad3d8ab\");\r\n                    //console.log(\"single order \"+JSON.stringify(singleOrder))\r\n\r\n                    let orderTotal = 0;\r\n                        orderTotal = orderTotal + (data.message[0].order[0].price * data.message[0].order[0].quantity)\r\n                 \r\n                        listOfOrder[\"total\"] = orderTotal\r\n\r\n                   \r\n                    listOfOrder[\"orderDate\"] = data.message[0].orderDate\r\n                   \r\n                    listOfOrder[\"deliveryAdress\"] = data.message[0].address.address + \" \"+ data.message[0].address.cityDistrictTown + \" \"+ data.message[0].address.pinCode + \" \"+ data.message[0].address.state \r\n                    listOfOrder[\"paymentType\"] = data.message[0].paymentType\r\n                    listOfOrder[\"paymentStatus\"] = data.message[0].paymentStatus\r\n                    listOfOrder[\"deliveryStatus\"] = data.message[0].isOrderCompleted   \r\n                    \r\n                  console.log(\"my orders 1\"+ JSON.stringify(listOfOrder))            \r\n\r\n                  setMyOrders(data.message[0])\r\n                  setFullName(data.message[0].address.fullName)\r\n            }catch(error){\r\n                console.log(error);\r\n            }\r\n    }\r\n\r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n  const getOrderTotal = (id) => {\r\n        console.log(\"single order1 \"+JSON.stringify(myOrders))\r\n        const singleOrder = myOrders.find(order => order._id === id);\r\n        console.log(\"single order \"+JSON.stringify(singleOrder))\r\n        let orderTotal = 0;\r\n        singleOrder.forEach(order => {\r\n            orderTotal = orderTotal + (order.price * order.quantity)\r\n        });\r\n\r\n        return orderTotal;\r\n    }\r\n\r\n    const onUpdateSomeValues = (rowIndex) => {\r\n      var rowCount = gridApi.getDisplayedRowCount();\r\n     \r\n        var rowNode = gridApi.getDisplayedRowAtIndex(rowIndex);\r\n\r\n        console.log(\"rownode::::: \"+rowNode)\r\n      /*  if(rowNode.data.status!=\"NEW\"){\r\n          rowNode.setDataValue('status', \"UPDATED\")\r\n        }*/\r\n      \r\n    };\r\n\r\n    const onCellValueChanged = (event) => {\r\n    \r\n      console.log('Data after change is', event);\r\n      onUpdateSomeValues(event.rowIndex)\r\n\r\n    \r\n    };\r\n\r\n  const sendData = () => {\r\n   \r\n  }\r\n  \r\n\r\n /* const setOrderData = () =>{\r\n\r\n    var listOfOrder = []\r\n    ordersList.map(item => {\r\n\r\n      listOfOrder[\"_id\"] = item._id\r\n      listOfOrder[\"product\"] = item.order\r\n      listOfOrder[\"orderDate\"] = item.orderDate\r\n      listOfOrder[\"total\"] = getOrderTotal(item.order._id)\r\n      listOfOrder[\"deliveryAdress\"] = item.address\r\n      listOfOrder[\"paymentType\"] = item.paymentType\r\n      listOfOrder[\"paymentStatus\"] = item.paymentStatus\r\n      listOfOrder[\"deliveryStatus\"] = \"\"\r\n    })\r\n\r\n    setMyOrders(listOfOrder)\r\n    console.log(\"set all order ..... \"+ JSON.stringify(ordersList))\r\n    console.log(\"set user order ..... \"+ JSON.stringify(myOrders))\r\n  }*/\r\n\r\n   return (\r\n    <div  className=\"ag-theme-alpine\" style={{height: 560, width: 1251}}>\r\n   \r\n        <MdpButton outline mdpXL onClick={() => {\r\n\r\n            onRemoveSelected()\r\n        } }\r\n        >\r\n         Supprimer\r\n        </MdpButton>\r\n        <p style={{float: 'left'}} > Acheteur: {fullName}</p>\r\n        <MdpButton style={{float: 'right'}}  outline mdpXL onClick={() => {\r\n\r\n           // setIsOpened(true)\r\n            console.log(isOpened)\r\n            //sendData()\r\n            \r\n            console.log(\"my orders \"+ JSON.stringify(myOrders))\r\n        } }\r\n        >\r\n        Enregistrer\r\n        </MdpButton>\r\n           <AgGridReact \r\n                rowData={myOrders} \r\n                columnDefs={columns} \r\n                defaultColDef={defaultColDef} \r\n                sideBar={{ toolPanels: ['columns'] }}\r\n                rowGroupPanelShow={'always'}\r\n                pivotPanelShow={'always'}\r\n                debug={true}\r\n                animateRows={true}\r\n                rowSelection={'multiple'}\r\n                enableBrowserTooltips={true}\r\n                tooltipShowDelay={{tooltipShowDelay: 2}}\r\n                pagination={true}\r\n                suppressRowClickSelection={true}\r\n                groupSelectsChildren={true}\r\n                onGridReady={onGridReady}\r\n                components={{ datePicker: getDatePicker() }}                 \r\n                onCellValueChanged={onCellValueChanged}\r\n                />          \r\n       </div>  \r\n\r\n   );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n \r\n  function extractValues(mappings) {\r\n    return Object.keys(mappings);\r\n  }\r\n  function lookupValue(mappings, key) {\r\n    console.log(\"key \"+key)\r\n    console.log(\"key \"+JSON.stringify(mappings))\r\n    return mappings[key];\r\n  }\r\n  function lookupKey(mappings, name) {\r\n    var keys = Object.keys(mappings);\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i];\r\n      if (mappings[key] === name) {\r\n        return key;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  function colourCellRenderer(params) {\r\n    if (params.value === '(Select All)') {\r\n      return params.value;\r\n    }\r\n    const image = props.value === 'Homme' ? 'male.png' : 'female.png';\r\n      const imageSource = `https://www.ag-grid.com/example-assets/genders/${image}`;\r\n    console.log(\"value \"+params.value)\r\n    return (\r\n      '<span style=\"color: ' +\r\n      removeSpaces(params.valueFormatted) +\r\n      '\">' + (params.value==\"Homme\"? '<img src=\"https://www.ag-grid.com/example-assets/genders/male.png\"/>'+\r\n      params.value +'</span>': '<img src=\"https://www.ag-grid.com/example-assets/genders/female.png\"/>'+\r\n      params.value +'</span>')\r\n    );\r\n  }\r\n  //PregnantWomanIcon params.value + `<img src={${imageSource}}/></span>`\r\n  function removeSpaces(str) {\r\n    return str ? str.replace(/\\s/g, '') : str;\r\n  }\r\n\r\nfunction getDatePicker() {\r\n    function Datepicker() {}\r\n    Datepicker.prototype.init = function (params) {\r\n      this.eInput = document.createElement('input');\r\n      this.eInput.value = params.value;\r\n      this.eInput.classList.add('ag-input');\r\n      this.eInput.style.height = '100%';\r\n      \r\n      this.eInput.setAttribute(\"type\", \"date\");\r\n    this.cell = params.eGridCell;\r\n    this.oldWidth = this.cell.style.width;\r\n    this.cell.style.width = \"162px\";\r\n    this.eInput.value = params.value;\r\n     //$(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\r\n    };\r\n    Datepicker.prototype.getGui = function () {\r\n      return this.eInput;\r\n    };\r\n    Datepicker.prototype.afterGuiAttached = function () {\r\n      this.eInput.focus();\r\n      this.eInput.select();\r\n    };\r\n    Datepicker.prototype.getValue = function () {\r\n      return this.eInput.value;\r\n    };\r\n    Datepicker.prototype.destroy = function () {};\r\n    Datepicker.prototype.isPopup = function () {\r\n      return false;\r\n    };\r\n    return Datepicker;\r\n  }\r\n  \r\n};\r\n\r\nexport default OrderManagement2;\r\n\r\n","C:\\mendpress\\client\\src\\constants\\cartConstants.js",[],"C:\\mendpress\\client\\src\\components\\UI\\SubmitGradientButton\\index.js",[],"C:\\mendpress\\client\\src\\store\\actions\\userActions.js",[],"C:\\mendpress\\client\\src\\containers\\Products\\ProductsScreen.js",["477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492"],"C:\\mendpress\\client\\src\\containers\\Products\\ProductManagement.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport axios from 'axios';\r\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport RemoveCircleOutlineIcon from '@material-ui/icons/RemoveCircleOutline';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport 'ag-grid-enterprise';\r\n//import AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport FiberNewIcon from '@material-ui/icons/FiberNew'\r\n\r\nimport {\r\n  saveProduct,\r\n  listProducts,\r\n  deleteProduct,\r\n  listCategories\r\n} from '../../store/actions/productActions'\r\n\r\nimport './style.css';\r\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\r\n\r\n\r\nconst ProductManagement = (props) => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [imageUrl, setImageUrl] = useState(null);\r\n  const [category, setCategory] = useState('ebooks');\r\n  const [stock, setStock] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [slug, setSlug] = useState('');\r\n  const [create, setCreate] = useState(true);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [deleteItem, setDeleteItem] = useState(false);\r\n  const [delProduct,  setDelProduct] = useState(null)\r\n  const [listOfProducts,  setListOfProducts] = useState(null)\r\n  const [catListName, setCatListName] = useState([])\r\n  const [catListID, setCatListID] = useState([])\r\n\r\n  \r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {userInfo, error } = userSignin\r\n  \r\n  const productList = useSelector((state) => state.productList)\r\n  const {loading, products} = productList\r\n\r\n  const categoryList = useSelector((state) => state.categoryList)\r\n  const {categories} = categoryList\r\n\r\n  const productSave = useSelector((state) => state.productSave)\r\n  const {\r\n    loading: loadingSave,\r\n    success: successSave,\r\n    error: errorSave,\r\n  } = productSave;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n  \r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listProducts('', 1))\r\n    dispatch(listCategories())\r\n    setList()\r\n\r\n  }, [successSave, successDelete])\r\n\r\n  const openModal = (product) => {\r\n    setModalVisible(true);\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setDescription(product.description);\r\n    setSlug(product.slug)\r\n    setImageUrl(product.imageUrl);\r\n\r\n    categories.map((cat) => {\r\n      if(cat.name==product.category){\r\n        setCategory(cat._id)\r\n\r\n      }}\r\n    )\r\n    setStock(product.stock);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(\"aaaaa  aaaaaaaaaa\"+category)\r\n    console.log(\"aaaaa \"+JSON.stringify(categories))\r\n\r\n    var myCategory = \"\"\r\n\r\n    if(create){\r\n      categories.map((cat) => {\r\n        if(cat.name==category){\r\n          setCategory(cat._id)\r\n          myCategory = cat._id\r\n          console.log(\"aaaaa \"+cat._id)\r\n  \r\n  \r\n        }}\r\n      )\r\n    }else{\r\n      myCategory = category\r\n    }\r\n\r\n   \r\n    console.log(\"aaaaa \"+category + \" \"+myCategory)\r\n    dispatch(\r\n      saveProduct({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        imageUrl,\r\n        myCategory,\r\n        stock,\r\n        description,\r\n        slug,\r\n        create\r\n      }, userInfo.token)\r\n    )\r\n    dispatch(listCategories())\r\n    dispatch(listProducts('', 1))\r\n    setList()\r\n    console.log(\"aaaaa \"+category + \" \"+myCategory)\r\n  }\r\n\r\n\r\n\r\n\r\n    const setList = () => {\r\n\r\n      var listOfProd = [] \r\n      var catListName = []\r\n      var catListID = []\r\n\r\n      products.map((produit) => {\r\n        console.log(\"insde \"+produit)\r\n    \r\n    \r\n          categories.map((cat) => {\r\n            if (cat._id == produit.category){\r\n              produit[\"category\"] = cat.name\r\n              listOfProd.push(produit)\r\n              \r\n              if(!catListName.includes(cat.name) && !catListID.includes(cat._id)){\r\n                \r\n              catListName.push(cat.name)\r\n              catListID.push(cat._id)\r\n              }\r\n    \r\n            }\r\n          })\r\n        })\r\n        console.log(\"insde 2\"+JSON.stringify(listOfProd))\r\n      setCatListName(catListName)\r\n      setCatListID(catListID)\r\n\r\n      setListOfProducts(listOfProd)\r\n    }\r\n\r\n\r\n\r\nconst columns = [\r\n  {headerName:\"Statut\" , field:\"status\", editable: false, \r\n        cellRendererFramework: (params) => (params.value==\"UPDATED\"?<CachedIcon fontSize=\"medium\" />\r\n        :(params.value==\"EXISTING\"?\"\":<FiberNewIcon fontSize=\"medium\" />)) },\r\n\r\n        {headerName:\"\" , field:\"\", checkboxSelection: true, headerCheckboxSelection:true, headerCheckboxSelectionFilteredOnly:true},\r\n        {headerName:\"ID\" , field:\"_id\", editable: false, cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n        \r\n        {headerName:\"Couverture\", field:\"imageUrl\", cellRenderer: ImageRenderer}, \r\n        {headerName:\"Nom\" , field:\"name\",cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n        {headerName:\"Prix\" , field:\"price\", cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n      \r\n        {headerName:\"Categorie\" , field:\"category\",  \r\n        cellEditor:\"agRichSelectCellEditor\",\r\n        cellEditorParams:{\r\n          values: catListName,\r\n          cellRenderer:  (params)=>(params.value),\r\n        },\r\n        filter:\"agSetColumnFilter\",\r\n        filterParams:{\r\n          values: catListName,\r\n          cellRenderer: (params)=>(params.value),\r\n        }\r\n      },\r\n        {headerName:\"En stock\" , field:\"stock\", cellRenderer: 'agAnimateShowChangeCellRenderer'},\r\n        {headerName:\"Ajouté le\", field:\"createdAt\",cellEditor:\"datePicker\",  cellRenderer: 'agAnimateShowChangeCellRenderer', filter: \"agDateColumnFilter\"}\r\n      ,\r\n      \r\n        {headerName:\"Description\", field:\"description\", cellRenderer: 'agAnimateShowChangeCellRenderer'}\r\n  \r\n];\r\n//columns for one user orders:\r\n\r\nconst defaultColDef = { \r\n    sortable: true,\r\n    editable: true, \r\n    filter: true,\r\n    resizable: true,\r\n    minWidth: 100,\r\n    flex: 1,\r\n    floatingFilter: true,\r\n    icons: {\r\n        sortAscending: '<i class=\"fa fa-sort-alpha-up\"/>',\r\n        sortDescending: '<i class=\"fa fa-sort-alpha-down\"/>',\r\n    }\r\n    }\r\nconst [gridApi, setGridApi] = useState(null);\r\nconst [gridColumnApi, setGridColumnApi] = useState(null);\r\n\r\n\r\n   \r\nconst onGridReady = (params) => {\r\n  setGridApi(params.api);\r\n  setGridColumnApi(params.columnApi);\r\n  console.log(\"Grid is ready load orders \"+params.api);\r\n  \r\n};\r\n\r\n\r\nconst onQuickFilterChanged = () => {\r\ngridApi.setQuickFilter(document.getElementById('quickFilter').value);\r\n};\r\nconst getRowData = () => {\r\n  var rowData = [];\r\n  listOfProducts.forEachNode(function (node) {\r\n    rowData.push(node.data);\r\n  });\r\n  console.log('Row Data:');\r\n  console.log(rowData);\r\n};\r\n\r\nconst clearData = () => {\r\n  listOfProducts.setRowData([]);\r\n};\r\n\r\nconst updateItems = () => {\r\n    var itemsToUpdate = [];\r\n    gridApi.forEachNodeAfterFilterAndSort(function (rowNode, index) {\r\n      if (index >= 2) {\r\n      return;\r\n      }\r\n      var data = rowNode.data;\r\n      itemsToUpdate.push(data);\r\n    });\r\n    var res = gridApi.applyTransaction({ update: itemsToUpdate });\r\n    printResult(res);\r\n};\r\n\r\nconst onRemoveSelected = () => {\r\n  var selectedData = gridApi.getSelectedRows();\r\n  var res = gridApi.applyTransaction({ remove: selectedData });\r\n  printResult(res);\r\n\r\n};\r\n\r\nconst deleteOrder =  async (orderId) => {\r\n  console.log(\"admin get orders\")\r\n\r\n}\r\n\r\n\r\nconst saveDataOnDb = () =>  {\r\n\r\n}\r\n\r\nconst printResult = (res) => {\r\nconsole.log('---------------------------------------');\r\n  if (res.add) {\r\n    res.add.forEach(function (rowNode) {\r\n    console.log('Added Row Node', rowNode);\r\n    });\r\n  }\r\n  if (res.remove) {\r\n    res.remove.forEach(function (rowNode) {\r\n    console.log('Removed Row Node', rowNode);\r\n    });\r\n  }\r\n}\r\n\r\nconst addItems = (addIndex) => {\r\n  var newItems = [createNewRowData()];\r\n  var res = gridApi.applyTransaction({\r\n      add: newItems,\r\n      addIndex: addIndex,\r\n  });\r\n  printResult(res);\r\n  };\r\n  const createNewRowData = () => {\r\n    var newData = {\"status\":\"NEW\",\"_id\":\"\",\"name\":\"\",\r\n\r\n    \"slug\":\"\",\r\n    \r\n    \"price\":0,\"stock\":0,\r\n    \r\n    \"description\":\"\",\r\n    \r\n    \"category\":\"\",\r\n    \r\n    \"imageUrl\":\" \",\r\n    \r\n    \"createdAt\":\" \"}\r\n    return newData;\r\n    }\r\n\r\nconst onUpdateSomeValues = (rowIndex) => {\r\n  var rowCount = gridApi.getDisplayedRowCount();\r\n\r\n    var rowNode = gridApi.getDisplayedRowAtIndex(rowIndex);\r\n\r\n    console.log(\"rownode::::: \"+rowNode)\r\n    if(rowNode.data.status!=\"NEW\"){\r\n      rowNode.setDataValue('status', \"UPDATED\")\r\n    }\r\n\r\n};\r\n\r\nconst onCellValueChanged = (event) => {\r\n\r\nconsole.log('Data after change is', event);\r\nonUpdateSomeValues(event.rowIndex)\r\n\r\n\r\n};\r\n  \r\n  return (\r\n    <div className=\"Content\">\r\n    <div className=\"Card\">\r\n    <p className=\"CardText\">Liste des produits</p>\r\n\r\n    \r\n       <div className=\"ag-theme-alpine\" style={{height: 560, width: 1251}}>\r\n         <div style={{flex:1}}>\r\n       <MdpButton outline mdpXL  onClick={() => {\r\n         addItems(0)\r\n          } }\r\n          >Ajouter\r\n          </MdpButton>\r\n       <MdpButton outline mdpXL onClick={() => {\r\n\r\n            onRemoveSelected()\r\n            } }\r\n            >\r\n              Supprimer\r\n            </MdpButton>\r\n            <MdpButton style={{marginLeft: '0px'}} outline mdpXL onClick={() => {\r\n\r\n              setList()\r\n              } }\r\n              >\r\n              Charger\r\n              </MdpButton>\r\n            <MdpButton style={{float: 'right'}}  outline mdpXL onClick={() => {\r\n\r\n            } }\r\n            >\r\n                Enregistrer\r\n          </MdpButton>\r\n      </div>\r\n           <AgGridReact \r\n                rowData={listOfProducts} \r\n                columnDefs={columns} \r\n                defaultColDef={defaultColDef} \r\n                sideBar={{ toolPanels: ['columns'] }}\r\n                rowGroupPanelShow={'always'}\r\n                pivotPanelShow={'always'}\r\n                debug={true}\r\n                animateRows={true}\r\n                rowSelection={'multiple'}\r\n                enableBrowserTooltips={true}\r\n                tooltipShowDelay={{tooltipShowDelay: 2}}\r\n                pagination={true}\r\n                suppressRowClickSelection={true}\r\n                groupSelectsChildren={true}\r\n                onGridReady={onGridReady}\r\n                components={{ datePicker: getDatePicker() }}\r\n                //frameworkComponents={frameworkComponents}                    \r\n                onCellValueChanged={onCellValueChanged}\r\n                />          \r\n       </div>\r\n    </div>\r\n  \r\n</div>)\r\n\r\n\r\nfunction extractValues(mappings) {\r\n  return Object.keys(mappings);\r\n}\r\nfunction lookupValue(mappings, key) {\r\n  console.log(\"key \"+key)\r\n  console.log(\"key \"+JSON.stringify(mappings))\r\n  return mappings[key];\r\n}\r\nfunction lookupKey(mappings, name) {\r\n  var keys = Object.keys(mappings);\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i];\r\n    if (mappings[key] === name) {\r\n      return key;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction ImageRenderer(params) {\r\n  if (params.value === '(Select All)') {\r\n    return params.value;\r\n  }\r\n  console.log(\"value \"+params.value)\r\n  return (\r\n    '<span> <img style={{ boxShadow: \"2px 1px rgba(0, 0, 255, .2)\"}} alt=\"\" height=\"50\" width=\"40\" src= \"'+params.value+'\"/> </span>'\r\n  );\r\n}\r\n//PregnantWomanIcon params.value + `<img src={${imageSource}}/></span>`\r\nfunction removeSpaces(str) {\r\n  return str ? str.replace(/\\s/g, '') : str;\r\n}\r\n\r\n    function getDatePicker() {\r\n      function Datepicker() {}\r\n      Datepicker.prototype.init = function (params) {\r\n        this.eInput = document.createElement('input');\r\n        this.eInput.value = params.value;\r\n        this.eInput.classList.add('ag-input');\r\n        this.eInput.style.height = '100%';\r\n        \r\n        this.eInput.setAttribute(\"type\", \"date\");\r\n      this.cell = params.eGridCell;\r\n      this.oldWidth = this.cell.style.width;\r\n      this.cell.style.width = \"162px\";\r\n      this.eInput.value = params.value;\r\n      //$(this.eInput).datepicker({ dateFormat: 'dd/mm/yy' });\r\n      };\r\n      Datepicker.prototype.getGui = function () {\r\n        return this.eInput;\r\n      };\r\n      Datepicker.prototype.afterGuiAttached = function () {\r\n        this.eInput.focus();\r\n        this.eInput.select();\r\n      };\r\n      Datepicker.prototype.getValue = function () {\r\n        return this.eInput.value;\r\n      };\r\n      Datepicker.prototype.destroy = function () {};\r\n      Datepicker.prototype.isPopup = function () {\r\n        return false;\r\n      };\r\n      return Datepicker;\r\n    }\r\n\r\n\r\n            \r\n\r\n  }\r\n\r\n\r\nexport default ProductManagement\r\n",{"ruleId":"547","severity":1,"message":"548","line":3,"column":23,"nodeType":"549","messageId":"550","endLine":3,"endColumn":34},{"ruleId":"551","replacedBy":"552"},{"ruleId":"553","replacedBy":"554"},{"ruleId":"547","severity":1,"message":"555","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"556","line":8,"column":10,"nodeType":"549","messageId":"550","endLine":8,"endColumn":19},{"ruleId":"547","severity":1,"message":"557","line":10,"column":10,"nodeType":"549","messageId":"550","endLine":10,"endColumn":15},{"ruleId":"547","severity":1,"message":"558","line":10,"column":18,"nodeType":"549","messageId":"550","endLine":10,"endColumn":28},{"ruleId":"547","severity":1,"message":"559","line":18,"column":21,"nodeType":"549","messageId":"550","endLine":18,"endColumn":32},{"ruleId":"547","severity":1,"message":"560","line":18,"column":34,"nodeType":"549","messageId":"550","endLine":18,"endColumn":43},{"ruleId":"547","severity":1,"message":"561","line":21,"column":11,"nodeType":"549","messageId":"550","endLine":21,"endColumn":18},{"ruleId":"547","severity":1,"message":"562","line":21,"column":30,"nodeType":"549","messageId":"550","endLine":21,"endColumn":35},{"ruleId":"563","severity":1,"message":"564","line":36,"column":6,"nodeType":"565","endLine":36,"endColumn":11,"suggestions":"566"},{"ruleId":"551","replacedBy":"567"},{"ruleId":"553","replacedBy":"568"},{"ruleId":"547","severity":1,"message":"556","line":7,"column":10,"nodeType":"549","messageId":"550","endLine":7,"endColumn":19},{"ruleId":"547","severity":1,"message":"569","line":7,"column":21,"nodeType":"549","messageId":"550","endLine":7,"endColumn":31},{"ruleId":"547","severity":1,"message":"570","line":10,"column":18,"nodeType":"549","messageId":"550","endLine":10,"endColumn":24},{"ruleId":"547","severity":1,"message":"561","line":15,"column":11,"nodeType":"549","messageId":"550","endLine":15,"endColumn":18},{"ruleId":"547","severity":1,"message":"562","line":15,"column":30,"nodeType":"549","messageId":"550","endLine":15,"endColumn":35},{"ruleId":"547","severity":1,"message":"571","line":17,"column":11,"nodeType":"549","messageId":"550","endLine":17,"endColumn":19},{"ruleId":"547","severity":1,"message":"559","line":17,"column":21,"nodeType":"549","messageId":"550","endLine":17,"endColumn":32},{"ruleId":"563","severity":1,"message":"564","line":24,"column":6,"nodeType":"565","endLine":24,"endColumn":8,"suggestions":"572"},{"ruleId":"551","replacedBy":"573"},{"ruleId":"553","replacedBy":"574"},{"ruleId":"547","severity":1,"message":"575","line":3,"column":54,"nodeType":"549","messageId":"550","endLine":3,"endColumn":64},{"ruleId":"547","severity":1,"message":"576","line":3,"column":66,"nodeType":"549","messageId":"550","endLine":3,"endColumn":79},{"ruleId":"547","severity":1,"message":"577","line":10,"column":17,"nodeType":"549","messageId":"550","endLine":10,"endColumn":21},{"ruleId":"547","severity":1,"message":"571","line":44,"column":29,"nodeType":"549","messageId":"550","endLine":44,"endColumn":37},{"ruleId":"547","severity":1,"message":"577","line":64,"column":17,"nodeType":"549","messageId":"550","endLine":64,"endColumn":21},{"ruleId":"547","severity":1,"message":"577","line":93,"column":18,"nodeType":"549","messageId":"550","endLine":93,"endColumn":22},{"ruleId":"578","severity":1,"message":"579","line":12,"column":13,"nodeType":"580","endLine":21,"endColumn":45},{"ruleId":"551","replacedBy":"581"},{"ruleId":"553","replacedBy":"582"},{"ruleId":"551","replacedBy":"583"},{"ruleId":"553","replacedBy":"584"},{"ruleId":"585","severity":1,"message":"586","line":16,"column":43,"nodeType":"587","messageId":"588","endLine":16,"endColumn":45},{"ruleId":"551","replacedBy":"589"},{"ruleId":"553","replacedBy":"590"},{"ruleId":"547","severity":1,"message":"591","line":3,"column":11,"nodeType":"549","messageId":"550","endLine":3,"endColumn":19},{"ruleId":"547","severity":1,"message":"556","line":4,"column":10,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"569","line":4,"column":21,"nodeType":"549","messageId":"550","endLine":4,"endColumn":31},{"ruleId":"547","severity":1,"message":"571","line":15,"column":11,"nodeType":"549","messageId":"550","endLine":15,"endColumn":19},{"ruleId":"547","severity":1,"message":"561","line":18,"column":11,"nodeType":"549","messageId":"550","endLine":18,"endColumn":18},{"ruleId":"547","severity":1,"message":"562","line":18,"column":30,"nodeType":"549","messageId":"550","endLine":18,"endColumn":35},{"ruleId":"547","severity":1,"message":"592","line":20,"column":10,"nodeType":"549","messageId":"550","endLine":20,"endColumn":13},{"ruleId":"547","severity":1,"message":"593","line":20,"column":15,"nodeType":"549","messageId":"550","endLine":20,"endColumn":21},{"ruleId":"563","severity":1,"message":"594","line":28,"column":6,"nodeType":"565","endLine":28,"endColumn":8,"suggestions":"595"},{"ruleId":"547","severity":1,"message":"555","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"596","line":4,"column":28,"nodeType":"549","messageId":"550","endLine":4,"endColumn":36},{"ruleId":"547","severity":1,"message":"597","line":6,"column":20,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"598","line":9,"column":9,"nodeType":"549","messageId":"550","endLine":9,"endColumn":16},{"ruleId":"547","severity":1,"message":"569","line":12,"column":21,"nodeType":"549","messageId":"550","endLine":12,"endColumn":31},{"ruleId":"547","severity":1,"message":"561","line":20,"column":20,"nodeType":"549","messageId":"550","endLine":20,"endColumn":27},{"ruleId":"547","severity":1,"message":"562","line":20,"column":29,"nodeType":"549","messageId":"550","endLine":20,"endColumn":34},{"ruleId":"547","severity":1,"message":"599","line":24,"column":11,"nodeType":"549","messageId":"550","endLine":24,"endColumn":20},{"ruleId":"547","severity":1,"message":"559","line":24,"column":22,"nodeType":"549","messageId":"550","endLine":24,"endColumn":33},{"ruleId":"547","severity":1,"message":"560","line":24,"column":35,"nodeType":"549","messageId":"550","endLine":24,"endColumn":44},{"ruleId":"563","severity":1,"message":"564","line":39,"column":6,"nodeType":"565","endLine":39,"endColumn":22,"suggestions":"600"},{"ruleId":"547","severity":1,"message":"596","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"601","line":3,"column":9,"nodeType":"549","messageId":"550","endLine":3,"endColumn":23},{"ruleId":"547","severity":1,"message":"602","line":3,"column":25,"nodeType":"549","messageId":"550","endLine":3,"endColumn":42},{"ruleId":"547","severity":1,"message":"603","line":3,"column":44,"nodeType":"549","messageId":"550","endLine":3,"endColumn":59},{"ruleId":"547","severity":1,"message":"604","line":4,"column":5,"nodeType":"549","messageId":"550","endLine":4,"endColumn":22},{"ruleId":"547","severity":1,"message":"605","line":4,"column":24,"nodeType":"549","messageId":"550","endLine":4,"endColumn":38},{"ruleId":"547","severity":1,"message":"606","line":4,"column":40,"nodeType":"549","messageId":"550","endLine":4,"endColumn":53},{"ruleId":"547","severity":1,"message":"607","line":4,"column":55,"nodeType":"549","messageId":"550","endLine":4,"endColumn":75},{"ruleId":"547","severity":1,"message":"608","line":4,"column":77,"nodeType":"549","messageId":"550","endLine":4,"endColumn":86},{"ruleId":"609","severity":1,"message":"610","line":14,"column":9,"nodeType":"580","endLine":14,"endColumn":162},{"ruleId":"547","severity":1,"message":"611","line":5,"column":16,"nodeType":"549","messageId":"550","endLine":5,"endColumn":25},{"ruleId":"547","severity":1,"message":"612","line":12,"column":8,"nodeType":"549","messageId":"550","endLine":12,"endColumn":26},{"ruleId":"547","severity":1,"message":"561","line":22,"column":12,"nodeType":"549","messageId":"550","endLine":22,"endColumn":19},{"ruleId":"563","severity":1,"message":"594","line":37,"column":10,"nodeType":"565","endLine":37,"endColumn":29,"suggestions":"613"},{"ruleId":"547","severity":1,"message":"555","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"548","line":4,"column":23,"nodeType":"549","messageId":"550","endLine":4,"endColumn":34},{"ruleId":"547","severity":1,"message":"561","line":16,"column":11,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"562","line":16,"column":30,"nodeType":"549","messageId":"550","endLine":16,"endColumn":35},{"ruleId":"547","severity":1,"message":"614","line":19,"column":10,"nodeType":"549","messageId":"550","endLine":19,"endColumn":17},{"ruleId":"547","severity":1,"message":"615","line":19,"column":19,"nodeType":"549","messageId":"550","endLine":19,"endColumn":29},{"ruleId":"563","severity":1,"message":"616","line":42,"column":6,"nodeType":"565","endLine":42,"endColumn":8,"suggestions":"617"},{"ruleId":"618","severity":1,"message":"619","line":145,"column":41,"nodeType":"580","endLine":145,"endColumn":53},{"ruleId":"618","severity":1,"message":"620","line":154,"column":45,"nodeType":"580","endLine":154,"endColumn":89},{"ruleId":"618","severity":1,"message":"620","line":158,"column":45,"nodeType":"580","endLine":158,"endColumn":89},{"ruleId":"618","severity":1,"message":"620","line":162,"column":45,"nodeType":"580","endLine":162,"endColumn":89},{"ruleId":"609","severity":1,"message":"610","line":170,"column":53,"nodeType":"580","endLine":170,"endColumn":199},{"ruleId":"621","severity":1,"message":"622","line":192,"column":79,"nodeType":"623","messageId":"624","endLine":192,"endColumn":81},{"ruleId":"618","severity":1,"message":"619","line":198,"column":46,"nodeType":"580","endLine":198,"endColumn":58},{"ruleId":"618","severity":1,"message":"620","line":203,"column":45,"nodeType":"580","endLine":203,"endColumn":89},{"ruleId":"618","severity":1,"message":"620","line":208,"column":45,"nodeType":"580","endLine":208,"endColumn":89},{"ruleId":"618","severity":1,"message":"620","line":212,"column":45,"nodeType":"580","endLine":212,"endColumn":89},{"ruleId":"618","severity":1,"message":"619","line":246,"column":57,"nodeType":"580","endLine":246,"endColumn":99},{"ruleId":"618","severity":1,"message":"620","line":248,"column":50,"nodeType":"580","endLine":248,"endColumn":95},{"ruleId":"618","severity":1,"message":"620","line":267,"column":45,"nodeType":"580","endLine":267,"endColumn":89},{"ruleId":"618","severity":1,"message":"620","line":271,"column":45,"nodeType":"580","endLine":271,"endColumn":89},{"ruleId":"618","severity":1,"message":"620","line":275,"column":45,"nodeType":"580","endLine":275,"endColumn":89},{"ruleId":"609","severity":1,"message":"610","line":283,"column":53,"nodeType":"580","endLine":283,"endColumn":199},{"ruleId":"547","severity":1,"message":"625","line":1,"column":24,"nodeType":"549","messageId":"550","endLine":1,"endColumn":33},{"ruleId":"547","severity":1,"message":"626","line":4,"column":10,"nodeType":"549","messageId":"550","endLine":4,"endColumn":16},{"ruleId":"547","severity":1,"message":"570","line":4,"column":18,"nodeType":"549","messageId":"550","endLine":4,"endColumn":24},{"ruleId":"547","severity":1,"message":"561","line":13,"column":13,"nodeType":"549","messageId":"550","endLine":13,"endColumn":20},{"ruleId":"547","severity":1,"message":"627","line":13,"column":22,"nodeType":"549","messageId":"550","endLine":13,"endColumn":30},{"ruleId":"547","severity":1,"message":"562","line":13,"column":32,"nodeType":"549","messageId":"550","endLine":13,"endColumn":37},{"ruleId":"547","severity":1,"message":"628","line":14,"column":11,"nodeType":"549","messageId":"550","endLine":14,"endColumn":19},{"ruleId":"547","severity":1,"message":"629","line":18,"column":19,"nodeType":"549","messageId":"550","endLine":18,"endColumn":27},{"ruleId":"630","severity":1,"message":"631","line":10,"column":1,"nodeType":"632","messageId":"633","endLine":21,"endColumn":5},{"ruleId":"547","severity":1,"message":"634","line":17,"column":10,"nodeType":"549","messageId":"550","endLine":17,"endColumn":17},{"ruleId":"563","severity":1,"message":"635","line":29,"column":6,"nodeType":"565","endLine":29,"endColumn":16,"suggestions":"636"},{"ruleId":"551","replacedBy":"637"},{"ruleId":"553","replacedBy":"638"},{"ruleId":"551","replacedBy":"639"},{"ruleId":"553","replacedBy":"640"},{"ruleId":"547","severity":1,"message":"641","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":26},{"ruleId":"547","severity":1,"message":"555","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"642","severity":1,"message":"643","line":94,"column":9,"nodeType":"644","messageId":"645","endLine":95,"endColumn":19},{"ruleId":"551","replacedBy":"646"},{"ruleId":"553","replacedBy":"647"},{"ruleId":"585","severity":1,"message":"586","line":31,"column":25,"nodeType":"587","messageId":"588","endLine":31,"endColumn":27},{"ruleId":null,"fatal":true,"severity":2,"message":"648","line":18,"column":8},{"ruleId":"547","severity":1,"message":"649","line":3,"column":9,"nodeType":"549","messageId":"550","endLine":3,"endColumn":21},{"ruleId":"547","severity":1,"message":"555","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":14},{"ruleId":"547","severity":1,"message":"548","line":5,"column":23,"nodeType":"549","messageId":"550","endLine":5,"endColumn":34},{"ruleId":"547","severity":1,"message":"650","line":14,"column":9,"nodeType":"549","messageId":"550","endLine":14,"endColumn":20},{"ruleId":"547","severity":1,"message":"651","line":14,"column":22,"nodeType":"549","messageId":"550","endLine":14,"endColumn":36},{"ruleId":"547","severity":1,"message":"652","line":14,"column":38,"nodeType":"549","messageId":"550","endLine":14,"endColumn":51},{"ruleId":"547","severity":1,"message":"653","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":25},{"ruleId":"547","severity":1,"message":"561","line":23,"column":13,"nodeType":"549","messageId":"550","endLine":23,"endColumn":20},{"ruleId":"547","severity":1,"message":"562","line":23,"column":32,"nodeType":"549","messageId":"550","endLine":23,"endColumn":37},{"ruleId":"547","severity":1,"message":"654","line":25,"column":12,"nodeType":"549","messageId":"550","endLine":25,"endColumn":18},{"ruleId":"547","severity":1,"message":"655","line":25,"column":20,"nodeType":"549","messageId":"550","endLine":25,"endColumn":29},{"ruleId":"547","severity":1,"message":"656","line":26,"column":22,"nodeType":"549","messageId":"550","endLine":26,"endColumn":33},{"ruleId":"585","severity":1,"message":"586","line":35,"column":57,"nodeType":"587","messageId":"588","endLine":35,"endColumn":59},{"ruleId":"585","severity":1,"message":"586","line":36,"column":23,"nodeType":"587","messageId":"588","endLine":36,"endColumn":25},{"ruleId":"547","severity":1,"message":"657","line":103,"column":11,"nodeType":"549","messageId":"550","endLine":103,"endColumn":19},{"ruleId":"547","severity":1,"message":"658","line":105,"column":12,"nodeType":"549","messageId":"550","endLine":105,"endColumn":25},{"ruleId":"563","severity":1,"message":"659","line":123,"column":10,"nodeType":"565","endLine":123,"endColumn":12,"suggestions":"660"},{"ruleId":"547","severity":1,"message":"661","line":132,"column":11,"nodeType":"549","messageId":"550","endLine":132,"endColumn":31},{"ruleId":"547","severity":1,"message":"662","line":135,"column":11,"nodeType":"549","messageId":"550","endLine":135,"endColumn":21},{"ruleId":"547","severity":1,"message":"663","line":144,"column":11,"nodeType":"549","messageId":"550","endLine":144,"endColumn":20},{"ruleId":"547","severity":1,"message":"664","line":157,"column":11,"nodeType":"549","messageId":"550","endLine":157,"endColumn":22},{"ruleId":"547","severity":1,"message":"665","line":190,"column":11,"nodeType":"549","messageId":"550","endLine":190,"endColumn":23},{"ruleId":"547","severity":1,"message":"666","line":232,"column":11,"nodeType":"549","messageId":"550","endLine":232,"endColumn":19},{"ruleId":"585","severity":1,"message":"667","line":237,"column":31,"nodeType":"587","messageId":"588","endLine":237,"endColumn":33},{"ruleId":"547","severity":1,"message":"668","line":314,"column":12,"nodeType":"549","messageId":"550","endLine":314,"endColumn":25},{"ruleId":"547","severity":1,"message":"669","line":337,"column":13,"nodeType":"549","messageId":"550","endLine":337,"endColumn":24},{"ruleId":"585","severity":1,"message":"586","line":342,"column":27,"nodeType":"587","messageId":"588","endLine":342,"endColumn":29},{"ruleId":"547","severity":1,"message":"670","line":1,"column":22,"nodeType":"549","messageId":"550","endLine":1,"endColumn":35},{"ruleId":"551","replacedBy":"671"},{"ruleId":"553","replacedBy":"672"},{"ruleId":"547","severity":1,"message":"673","line":7,"column":57,"nodeType":"549","messageId":"550","endLine":7,"endColumn":64},{"ruleId":"547","severity":1,"message":"599","line":30,"column":7,"nodeType":"549","messageId":"550","endLine":30,"endColumn":16},{"ruleId":"547","severity":1,"message":"555","line":1,"column":8,"nodeType":"549","messageId":"550","endLine":1,"endColumn":14},{"ruleId":"547","severity":1,"message":"674","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":19},{"ruleId":"547","severity":1,"message":"597","line":10,"column":10,"nodeType":"549","messageId":"550","endLine":10,"endColumn":14},{"ruleId":"547","severity":1,"message":"556","line":13,"column":10,"nodeType":"549","messageId":"550","endLine":13,"endColumn":19},{"ruleId":"547","severity":1,"message":"569","line":13,"column":21,"nodeType":"549","messageId":"550","endLine":13,"endColumn":31},{"ruleId":"547","severity":1,"message":"559","line":21,"column":23,"nodeType":"549","messageId":"550","endLine":21,"endColumn":34},{"ruleId":"547","severity":1,"message":"560","line":21,"column":36,"nodeType":"549","messageId":"550","endLine":21,"endColumn":45},{"ruleId":"547","severity":1,"message":"561","line":26,"column":13,"nodeType":"549","messageId":"550","endLine":26,"endColumn":20},{"ruleId":"547","severity":1,"message":"562","line":26,"column":32,"nodeType":"549","messageId":"550","endLine":26,"endColumn":37},{"ruleId":"547","severity":1,"message":"675","line":37,"column":12,"nodeType":"549","messageId":"550","endLine":37,"endColumn":17},{"ruleId":"547","severity":1,"message":"676","line":37,"column":19,"nodeType":"549","messageId":"550","endLine":37,"endColumn":27},{"ruleId":"547","severity":1,"message":"677","line":44,"column":26,"nodeType":"549","messageId":"550","endLine":44,"endColumn":41},{"ruleId":"563","severity":1,"message":"678","line":63,"column":8,"nodeType":"565","endLine":63,"endColumn":10,"suggestions":"679"},{"ruleId":"585","severity":1,"message":"586","line":72,"column":32,"nodeType":"587","messageId":"588","endLine":72,"endColumn":34},{"ruleId":"585","severity":1,"message":"586","line":332,"column":65,"nodeType":"587","messageId":"588","endLine":332,"endColumn":67},{"ruleId":"547","severity":1,"message":"596","line":1,"column":17,"nodeType":"549","messageId":"550","endLine":1,"endColumn":25},{"ruleId":"547","severity":1,"message":"555","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"556","line":4,"column":10,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"569","line":4,"column":21,"nodeType":"549","messageId":"550","endLine":4,"endColumn":31},{"ruleId":"547","severity":1,"message":"571","line":15,"column":17,"nodeType":"549","messageId":"550","endLine":15,"endColumn":25},{"ruleId":"547","severity":1,"message":"559","line":15,"column":27,"nodeType":"549","messageId":"550","endLine":15,"endColumn":38},{"ruleId":"547","severity":1,"message":"560","line":15,"column":40,"nodeType":"549","messageId":"550","endLine":15,"endColumn":49},{"ruleId":"547","severity":1,"message":"561","line":18,"column":17,"nodeType":"549","messageId":"550","endLine":18,"endColumn":24},{"ruleId":"547","severity":1,"message":"562","line":18,"column":36,"nodeType":"549","messageId":"550","endLine":18,"endColumn":41},{"ruleId":"563","severity":1,"message":"564","line":26,"column":12,"nodeType":"565","endLine":26,"endColumn":14,"suggestions":"680"},{"ruleId":"551","replacedBy":"681"},{"ruleId":"553","replacedBy":"682"},{"ruleId":"547","severity":1,"message":"634","line":19,"column":10,"nodeType":"549","messageId":"550","endLine":19,"endColumn":17},{"ruleId":"563","severity":1,"message":"683","line":37,"column":6,"nodeType":"565","endLine":37,"endColumn":16,"suggestions":"684"},{"ruleId":"547","severity":1,"message":"548","line":5,"column":10,"nodeType":"549","messageId":"550","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"571","line":11,"column":13,"nodeType":"549","messageId":"550","endLine":11,"endColumn":21},{"ruleId":"547","severity":1,"message":"559","line":11,"column":23,"nodeType":"549","messageId":"550","endLine":11,"endColumn":34},{"ruleId":"547","severity":1,"message":"649","line":3,"column":9,"nodeType":"549","messageId":"550","endLine":3,"endColumn":21},{"ruleId":"547","severity":1,"message":"555","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":14},{"ruleId":"547","severity":1,"message":"548","line":5,"column":23,"nodeType":"549","messageId":"550","endLine":5,"endColumn":34},{"ruleId":"547","severity":1,"message":"650","line":13,"column":9,"nodeType":"549","messageId":"550","endLine":13,"endColumn":20},{"ruleId":"547","severity":1,"message":"651","line":13,"column":22,"nodeType":"549","messageId":"550","endLine":13,"endColumn":36},{"ruleId":"547","severity":1,"message":"652","line":13,"column":38,"nodeType":"549","messageId":"550","endLine":13,"endColumn":51},{"ruleId":"547","severity":1,"message":"685","line":15,"column":8,"nodeType":"549","messageId":"550","endLine":15,"endColumn":24},{"ruleId":"547","severity":1,"message":"561","line":20,"column":13,"nodeType":"549","messageId":"550","endLine":20,"endColumn":20},{"ruleId":"547","severity":1,"message":"562","line":20,"column":32,"nodeType":"549","messageId":"550","endLine":20,"endColumn":37},{"ruleId":"547","severity":1,"message":"655","line":23,"column":20,"nodeType":"549","messageId":"550","endLine":23,"endColumn":29},{"ruleId":"547","severity":1,"message":"656","line":24,"column":22,"nodeType":"549","messageId":"550","endLine":24,"endColumn":33},{"ruleId":"547","severity":1,"message":"686","line":28,"column":21,"nodeType":"549","messageId":"550","endLine":28,"endColumn":32},{"ruleId":"547","severity":1,"message":"687","line":62,"column":11,"nodeType":"549","messageId":"550","endLine":62,"endColumn":19},{"ruleId":"547","severity":1,"message":"658","line":100,"column":12,"nodeType":"549","messageId":"550","endLine":100,"endColumn":25},{"ruleId":"563","severity":1,"message":"659","line":120,"column":10,"nodeType":"565","endLine":120,"endColumn":12,"suggestions":"688"},{"ruleId":"547","severity":1,"message":"661","line":131,"column":11,"nodeType":"549","messageId":"550","endLine":131,"endColumn":31},{"ruleId":"547","severity":1,"message":"662","line":134,"column":11,"nodeType":"549","messageId":"550","endLine":134,"endColumn":21},{"ruleId":"547","severity":1,"message":"663","line":143,"column":11,"nodeType":"549","messageId":"550","endLine":143,"endColumn":20},{"ruleId":"547","severity":1,"message":"664","line":147,"column":11,"nodeType":"549","messageId":"550","endLine":147,"endColumn":22},{"ruleId":"547","severity":1,"message":"689","line":160,"column":11,"nodeType":"549","messageId":"550","endLine":160,"endColumn":27},{"ruleId":"547","severity":1,"message":"665","line":188,"column":11,"nodeType":"549","messageId":"550","endLine":188,"endColumn":23},{"ruleId":"547","severity":1,"message":"666","line":266,"column":11,"nodeType":"549","messageId":"550","endLine":266,"endColumn":19},{"ruleId":"585","severity":1,"message":"667","line":271,"column":31,"nodeType":"587","messageId":"588","endLine":271,"endColumn":33},{"ruleId":"547","severity":1,"message":"690","line":285,"column":9,"nodeType":"549","messageId":"550","endLine":285,"endColumn":17},{"ruleId":"618","severity":1,"message":"620","line":334,"column":45,"nodeType":"580","endLine":334,"endColumn":79},{"ruleId":"618","severity":1,"message":"620","line":336,"column":38,"nodeType":"580","endLine":336,"endColumn":83},{"ruleId":"609","severity":1,"message":"610","line":396,"column":53,"nodeType":"580","endLine":396,"endColumn":199},{"ruleId":"547","severity":1,"message":"668","line":441,"column":12,"nodeType":"549","messageId":"550","endLine":441,"endColumn":25},{"ruleId":"547","severity":1,"message":"691","line":444,"column":12,"nodeType":"549","messageId":"550","endLine":444,"endColumn":23},{"ruleId":"547","severity":1,"message":"692","line":449,"column":12,"nodeType":"549","messageId":"550","endLine":449,"endColumn":21},{"ruleId":"547","severity":1,"message":"693","line":459,"column":12,"nodeType":"549","messageId":"550","endLine":459,"endColumn":30},{"ruleId":"547","severity":1,"message":"669","line":464,"column":13,"nodeType":"549","messageId":"550","endLine":464,"endColumn":24},{"ruleId":"585","severity":1,"message":"586","line":469,"column":27,"nodeType":"587","messageId":"588","endLine":469,"endColumn":29},{"ruleId":"630","severity":1,"message":"631","line":512,"column":1,"nodeType":"632","messageId":"633","endLine":588,"endColumn":11},{"ruleId":"547","severity":1,"message":"625","line":3,"column":17,"nodeType":"549","messageId":"550","endLine":3,"endColumn":26},{"ruleId":"547","severity":1,"message":"570","line":4,"column":18,"nodeType":"549","messageId":"550","endLine":4,"endColumn":24},{"ruleId":"585","severity":1,"message":"586","line":28,"column":28,"nodeType":"587","messageId":"588","endLine":28,"endColumn":30},{"ruleId":"547","severity":1,"message":"596","line":1,"column":28,"nodeType":"549","messageId":"550","endLine":1,"endColumn":36},{"ruleId":"547","severity":1,"message":"556","line":9,"column":10,"nodeType":"549","messageId":"550","endLine":9,"endColumn":19},{"ruleId":"547","severity":1,"message":"569","line":9,"column":21,"nodeType":"549","messageId":"550","endLine":9,"endColumn":31},{"ruleId":"547","severity":1,"message":"561","line":17,"column":13,"nodeType":"549","messageId":"550","endLine":17,"endColumn":20},{"ruleId":"547","severity":1,"message":"562","line":17,"column":32,"nodeType":"549","messageId":"550","endLine":17,"endColumn":37},{"ruleId":"547","severity":1,"message":"571","line":20,"column":12,"nodeType":"549","messageId":"550","endLine":20,"endColumn":20},{"ruleId":"547","severity":1,"message":"559","line":20,"column":22,"nodeType":"549","messageId":"550","endLine":20,"endColumn":33},{"ruleId":"547","severity":1,"message":"560","line":20,"column":35,"nodeType":"549","messageId":"550","endLine":20,"endColumn":44},{"ruleId":"563","severity":1,"message":"564","line":28,"column":10,"nodeType":"565","endLine":28,"endColumn":17,"suggestions":"694"},{"ruleId":"547","severity":1,"message":"649","line":3,"column":9,"nodeType":"549","messageId":"550","endLine":3,"endColumn":21},{"ruleId":"547","severity":1,"message":"555","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":14},{"ruleId":"547","severity":1,"message":"548","line":5,"column":23,"nodeType":"549","messageId":"550","endLine":5,"endColumn":34},{"ruleId":"547","severity":1,"message":"650","line":13,"column":9,"nodeType":"549","messageId":"550","endLine":13,"endColumn":20},{"ruleId":"547","severity":1,"message":"651","line":13,"column":22,"nodeType":"549","messageId":"550","endLine":13,"endColumn":36},{"ruleId":"547","severity":1,"message":"652","line":13,"column":38,"nodeType":"549","messageId":"550","endLine":13,"endColumn":51},{"ruleId":"547","severity":1,"message":"695","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":22},{"ruleId":"547","severity":1,"message":"561","line":19,"column":13,"nodeType":"549","messageId":"550","endLine":19,"endColumn":20},{"ruleId":"547","severity":1,"message":"562","line":19,"column":32,"nodeType":"549","messageId":"550","endLine":19,"endColumn":37},{"ruleId":"547","severity":1,"message":"696","line":20,"column":12,"nodeType":"549","messageId":"550","endLine":20,"endColumn":22},{"ruleId":"547","severity":1,"message":"697","line":20,"column":24,"nodeType":"549","messageId":"550","endLine":20,"endColumn":37},{"ruleId":"547","severity":1,"message":"656","line":21,"column":22,"nodeType":"549","messageId":"550","endLine":21,"endColumn":33},{"ruleId":"547","severity":1,"message":"698","line":22,"column":22,"nodeType":"549","messageId":"550","endLine":22,"endColumn":33},{"ruleId":"547","severity":1,"message":"658","line":61,"column":12,"nodeType":"549","messageId":"550","endLine":61,"endColumn":25},{"ruleId":"563","severity":1,"message":"699","line":78,"column":10,"nodeType":"565","endLine":78,"endColumn":12,"suggestions":"700"},{"ruleId":"547","severity":1,"message":"661","line":89,"column":11,"nodeType":"549","messageId":"550","endLine":89,"endColumn":31},{"ruleId":"547","severity":1,"message":"662","line":92,"column":11,"nodeType":"549","messageId":"550","endLine":92,"endColumn":21},{"ruleId":"547","severity":1,"message":"663","line":101,"column":11,"nodeType":"549","messageId":"550","endLine":101,"endColumn":20},{"ruleId":"547","severity":1,"message":"664","line":105,"column":11,"nodeType":"549","messageId":"550","endLine":105,"endColumn":22},{"ruleId":"547","severity":1,"message":"701","line":129,"column":11,"nodeType":"549","messageId":"550","endLine":129,"endColumn":22},{"ruleId":"547","severity":1,"message":"665","line":147,"column":11,"nodeType":"549","messageId":"550","endLine":147,"endColumn":23},{"ruleId":"547","severity":1,"message":"702","line":223,"column":11,"nodeType":"549","messageId":"550","endLine":223,"endColumn":21},{"ruleId":"547","severity":1,"message":"703","line":228,"column":9,"nodeType":"549","messageId":"550","endLine":228,"endColumn":22},{"ruleId":"547","severity":1,"message":"666","line":241,"column":11,"nodeType":"549","messageId":"550","endLine":241,"endColumn":19},{"ruleId":"547","severity":1,"message":"690","line":260,"column":9,"nodeType":"549","messageId":"550","endLine":260,"endColumn":17},{"ruleId":"547","severity":1,"message":"668","line":336,"column":12,"nodeType":"549","messageId":"550","endLine":336,"endColumn":25},{"ruleId":"547","severity":1,"message":"691","line":339,"column":12,"nodeType":"549","messageId":"550","endLine":339,"endColumn":23},{"ruleId":"547","severity":1,"message":"692","line":344,"column":12,"nodeType":"549","messageId":"550","endLine":344,"endColumn":21},{"ruleId":"547","severity":1,"message":"693","line":356,"column":12,"nodeType":"549","messageId":"550","endLine":356,"endColumn":30},{"ruleId":"547","severity":1,"message":"669","line":361,"column":13,"nodeType":"549","messageId":"550","endLine":361,"endColumn":24},{"ruleId":"585","severity":1,"message":"586","line":366,"column":27,"nodeType":"587","messageId":"588","endLine":366,"endColumn":29},{"ruleId":"547","severity":1,"message":"704","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":13},{"ruleId":"547","severity":1,"message":"705","line":27,"column":10,"nodeType":"549","messageId":"550","endLine":27,"endColumn":19},{"ruleId":"547","severity":1,"message":"706","line":27,"column":21,"nodeType":"549","messageId":"550","endLine":27,"endColumn":33},{"ruleId":"547","severity":1,"message":"707","line":29,"column":10,"nodeType":"549","messageId":"550","endLine":29,"endColumn":20},{"ruleId":"547","severity":1,"message":"708","line":29,"column":22,"nodeType":"549","messageId":"550","endLine":29,"endColumn":35},{"ruleId":"547","severity":1,"message":"562","line":36,"column":20,"nodeType":"549","messageId":"550","endLine":36,"endColumn":25},{"ruleId":"547","severity":1,"message":"561","line":39,"column":10,"nodeType":"549","messageId":"550","endLine":39,"endColumn":17},{"ruleId":"563","severity":1,"message":"709","line":68,"column":6,"nodeType":"565","endLine":68,"endColumn":34,"suggestions":"710"},{"ruleId":"621","severity":1,"message":"711","line":79,"column":26,"nodeType":"623","messageId":"712","endLine":79,"endColumn":28},{"ruleId":"585","severity":1,"message":"586","line":80,"column":18,"nodeType":"587","messageId":"588","endLine":80,"endColumn":20},{"ruleId":"621","severity":1,"message":"711","line":97,"column":28,"nodeType":"623","messageId":"712","endLine":97,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":98,"column":20,"nodeType":"587","messageId":"588","endLine":98,"endColumn":22},{"ruleId":"547","severity":1,"message":"713","line":132,"column":9,"nodeType":"549","messageId":"550","endLine":132,"endColumn":19},{"ruleId":"621","severity":1,"message":"711","line":152,"column":30,"nodeType":"623","messageId":"712","endLine":152,"endColumn":32},{"ruleId":"621","severity":1,"message":"711","line":156,"column":32,"nodeType":"623","messageId":"712","endLine":156,"endColumn":34},{"ruleId":"585","severity":1,"message":"586","line":157,"column":25,"nodeType":"587","messageId":"588","endLine":157,"endColumn":27},{"ruleId":"547","severity":1,"message":"714","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":14},{"ruleId":"547","severity":1,"message":"715","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":14},{"ruleId":"547","severity":1,"message":"716","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"717","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":21},{"ruleId":"547","severity":1,"message":"718","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":25},{"ruleId":"547","severity":1,"message":"719","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":19},{"ruleId":"547","severity":1,"message":"720","line":9,"column":8,"nodeType":"549","messageId":"550","endLine":9,"endColumn":13},{"ruleId":"547","severity":1,"message":"704","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":13},{"ruleId":"547","severity":1,"message":"649","line":11,"column":9,"nodeType":"549","messageId":"550","endLine":11,"endColumn":21},{"ruleId":"547","severity":1,"message":"721","line":12,"column":8,"nodeType":"549","messageId":"550","endLine":12,"endColumn":28},{"ruleId":"547","severity":1,"message":"722","line":13,"column":8,"nodeType":"549","messageId":"550","endLine":13,"endColumn":31},{"ruleId":"547","severity":1,"message":"723","line":24,"column":3,"nodeType":"549","messageId":"550","endLine":24,"endColumn":16},{"ruleId":"547","severity":1,"message":"724","line":33,"column":10,"nodeType":"549","messageId":"550","endLine":33,"endColumn":22},{"ruleId":"547","severity":1,"message":"725","line":42,"column":18,"nodeType":"549","messageId":"550","endLine":42,"endColumn":27},{"ruleId":"547","severity":1,"message":"705","line":43,"column":10,"nodeType":"549","messageId":"550","endLine":43,"endColumn":19},{"ruleId":"547","severity":1,"message":"706","line":43,"column":21,"nodeType":"549","messageId":"550","endLine":43,"endColumn":33},{"ruleId":"547","severity":1,"message":"726","line":44,"column":10,"nodeType":"549","messageId":"550","endLine":44,"endColumn":20},{"ruleId":"547","severity":1,"message":"727","line":44,"column":22,"nodeType":"549","messageId":"550","endLine":44,"endColumn":35},{"ruleId":"547","severity":1,"message":"707","line":45,"column":10,"nodeType":"549","messageId":"550","endLine":45,"endColumn":20},{"ruleId":"547","severity":1,"message":"708","line":45,"column":22,"nodeType":"549","messageId":"550","endLine":45,"endColumn":35},{"ruleId":"547","severity":1,"message":"728","line":46,"column":10,"nodeType":"549","messageId":"550","endLine":46,"endColumn":20},{"ruleId":"547","severity":1,"message":"729","line":46,"column":23,"nodeType":"549","messageId":"550","endLine":46,"endColumn":36},{"ruleId":"547","severity":1,"message":"730","line":49,"column":10,"nodeType":"549","messageId":"550","endLine":49,"endColumn":19},{"ruleId":"547","severity":1,"message":"562","line":54,"column":20,"nodeType":"549","messageId":"550","endLine":54,"endColumn":25},{"ruleId":"547","severity":1,"message":"561","line":57,"column":10,"nodeType":"549","messageId":"550","endLine":57,"endColumn":17},{"ruleId":"547","severity":1,"message":"731","line":64,"column":14,"nodeType":"549","messageId":"550","endLine":64,"endColumn":25},{"ruleId":"547","severity":1,"message":"732","line":66,"column":12,"nodeType":"549","messageId":"550","endLine":66,"endColumn":21},{"ruleId":"547","severity":1,"message":"733","line":71,"column":14,"nodeType":"549","messageId":"550","endLine":71,"endColumn":27},{"ruleId":"547","severity":1,"message":"734","line":73,"column":12,"nodeType":"549","messageId":"550","endLine":73,"endColumn":23},{"ruleId":"563","severity":1,"message":"709","line":86,"column":6,"nodeType":"565","endLine":86,"endColumn":34,"suggestions":"735"},{"ruleId":"547","severity":1,"message":"736","line":88,"column":9,"nodeType":"549","messageId":"550","endLine":88,"endColumn":18},{"ruleId":"621","severity":1,"message":"711","line":97,"column":26,"nodeType":"623","messageId":"712","endLine":97,"endColumn":28},{"ruleId":"585","severity":1,"message":"586","line":98,"column":18,"nodeType":"587","messageId":"588","endLine":98,"endColumn":20},{"ruleId":"547","severity":1,"message":"737","line":106,"column":9,"nodeType":"549","messageId":"550","endLine":106,"endColumn":22},{"ruleId":"621","severity":1,"message":"711","line":115,"column":28,"nodeType":"623","messageId":"712","endLine":115,"endColumn":30},{"ruleId":"585","severity":1,"message":"586","line":116,"column":20,"nodeType":"587","messageId":"588","endLine":116,"endColumn":22},{"ruleId":"621","severity":1,"message":"711","line":158,"column":30,"nodeType":"623","messageId":"712","endLine":158,"endColumn":32},{"ruleId":"621","severity":1,"message":"711","line":162,"column":32,"nodeType":"623","messageId":"712","endLine":162,"endColumn":34},{"ruleId":"585","severity":1,"message":"586","line":163,"column":25,"nodeType":"587","messageId":"588","endLine":163,"endColumn":27},{"ruleId":"585","severity":1,"message":"586","line":187,"column":57,"nodeType":"587","messageId":"588","endLine":187,"endColumn":59},{"ruleId":"585","severity":1,"message":"586","line":188,"column":23,"nodeType":"587","messageId":"588","endLine":188,"endColumn":25},{"ruleId":"547","severity":1,"message":"658","line":232,"column":8,"nodeType":"549","messageId":"550","endLine":232,"endColumn":21},{"ruleId":"547","severity":1,"message":"661","line":244,"column":7,"nodeType":"549","messageId":"550","endLine":244,"endColumn":27},{"ruleId":"547","severity":1,"message":"662","line":247,"column":7,"nodeType":"549","messageId":"550","endLine":247,"endColumn":17},{"ruleId":"547","severity":1,"message":"663","line":256,"column":7,"nodeType":"549","messageId":"550","endLine":256,"endColumn":16},{"ruleId":"547","severity":1,"message":"664","line":260,"column":7,"nodeType":"549","messageId":"550","endLine":260,"endColumn":18},{"ruleId":"547","severity":1,"message":"701","line":280,"column":7,"nodeType":"549","messageId":"550","endLine":280,"endColumn":18},{"ruleId":"547","severity":1,"message":"665","line":286,"column":7,"nodeType":"549","messageId":"550","endLine":286,"endColumn":19},{"ruleId":"547","severity":1,"message":"666","line":330,"column":7,"nodeType":"549","messageId":"550","endLine":330,"endColumn":15},{"ruleId":"585","severity":1,"message":"667","line":335,"column":27,"nodeType":"587","messageId":"588","endLine":335,"endColumn":29},{"ruleId":"547","severity":1,"message":"668","line":409,"column":10,"nodeType":"549","messageId":"550","endLine":409,"endColumn":23},{"ruleId":"547","severity":1,"message":"691","line":412,"column":10,"nodeType":"549","messageId":"550","endLine":412,"endColumn":21},{"ruleId":"547","severity":1,"message":"692","line":417,"column":10,"nodeType":"549","messageId":"550","endLine":417,"endColumn":19},{"ruleId":"547","severity":1,"message":"738","line":439,"column":10,"nodeType":"549","messageId":"550","endLine":439,"endColumn":22},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["739"],"no-negated-in-lhs",["740"],"'Header' is defined but never used.","'addToCart' is defined but never used.","'Route' is defined but never used.","'withRouter' is defined but never used.","'totalAmount' is assigned a value but never used.","'cartCount' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["741"],["739"],["740"],"'updateCart' is defined but never used.","'update' is defined but never used.","'cartItem' is assigned a value but never used.",["742"],["739"],["740"],"'CLEAR_CART' is defined but never used.","'CART_ADD_ITEM' is defined but never used.","'data' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement",["739"],["740"],["739"],["740"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["739"],["740"],"'Redirect' is defined but never used.","'qty' is assigned a value but never used.","'setQty' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["743"],"'useState' is defined but never used.","'Link' is defined but never used.","'usePath' is defined but never used.","'cartItems' is assigned a value but never used.",["744"],"'MdpStyledError' is defined but never used.","'MdpStyledFieldset' is defined but never used.","'MdpStyledButton' is defined but never used.","'MdpStyledTextArea' is defined but never used.","'MdpStyledInput' is defined but never used.","'MdpStyledForm' is defined but never used.","'MdpStyledFormWrapper' is defined but never used.","'MdpButton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useParams' is defined but never used.","'IdleTimerContainer' is defined but never used.",["745"],"'userIds' is assigned a value but never used.","'setUserIds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminGetAllUsers', 'getOrders', 'props.history', and 'userInfo'. Either include them or remove the dependency array.",["746"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'logout' is defined but never used.","'userInfo' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setTimer' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'isError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["747"],["739"],["740"],["739"],["740"],"'Component' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default",["739"],["740"],"Parsing error: Identifier 'Orders' has already been declared\n\n  16 | import ThankYou from '../../containers/ThankYou';\n  17 | import Orders from '../../containers/Orders';\n> 18 | import Orders from '../../containers/OrderManagement';\n     |        ^\n  19 | \n  20 | \n  21 | const ShopStore = () => {","'AgGridColumn' is defined but never used.","'AccessAlarm' is defined but never used.","'ThreeDRotation' is defined but never used.","'AutorenewIcon' is defined but never used.","'PregnantWomanIcon' is defined but never used.","'status' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'setDeleteDb' is assigned a value but never used.","'rowStyle' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminGetAllUsers', 'props.history', and 'userInfo'. Either include them or remove the dependency array.",["748"],"'onQuickFilterChanged' is assigned a value but never used.","'getRowData' is assigned a value but never used.","'clearData' is assigned a value but never used.","'updateItems' is assigned a value but never used.","'saveDataOnDb' is assigned a value but never used.","'rowCount' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'extractValues' is defined but never used.","'imageSource' is assigned a value but never used.","'ThemeProvider' is defined but never used.",["739"],["740"],"'compose' is defined but never used.","'NormalInput' is defined but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setPaymentTypes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getAddresses', 'props.history', and 'userInfo'. Either include them or remove the dependency array.",["749"],["750"],["739"],["740"],"React Hook useEffect has missing dependencies: 'error' and 'props.history'. Either include them or remove the dependency array.",["751"],"'OrderManagement2' is defined but never used.","'setMyOrders' is assigned a value but never used.","'columns1' is assigned a value but never used.",["752"],"'onRemoveSelected' is assigned a value but never used.","'sendData' is assigned a value but never used.","'lookupValue' is defined but never used.","'lookupKey' is defined but never used.","'colourCellRenderer' is defined but never used.",["753"],"'VisibilityIcon' is defined but never used.","'ordersList' is assigned a value but never used.","'setOrdersList' is assigned a value but never used.","'setIsOpened' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getOrdersAdmin', 'props', and 'userInfo'. Either include them or remove the dependency array.",["754"],"'deleteOrder' is assigned a value but never used.","'formatDate' is assigned a value but never used.","'getOrderTotal' is assigned a value but never used.","'axios' is defined but never used.","'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","'deleteItem' is assigned a value but never used.","'setDeleteItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'setList'. Either include them or remove the dependency array.",["755"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'Transition' is assigned a value but never used.","'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Slide' is defined but never used.","'AddCircleOutlineIcon' is defined but never used.","'RemoveCircleOutlineIcon' is defined but never used.","'deleteProduct' is defined but never used.","'modalVisible' is assigned a value but never used.","'setCreate' is assigned a value but never used.","'openDialog' is assigned a value but never used.","'setOpenDialog' is assigned a value but never used.","'delProduct' is assigned a value but never used.","'setDelProduct' is assigned a value but never used.","'catListID' is assigned a value but never used.","'loadingSave' is assigned a value but never used.","'errorSave' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["756"],"'openModal' is assigned a value but never used.","'submitHandler' is assigned a value but never used.","'removeSpaces' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"767","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"773","fix":"774"},{"desc":"759","fix":"775"},{"desc":"776","fix":"777"},{"desc":"771","fix":"778"},{"desc":"779","fix":"780"},{"desc":"781","fix":"782"},{"desc":"783","fix":"784"},{"desc":"783","fix":"785"},"Update the dependencies array to be: [dispatch, qty, userInfo]",{"range":"786","text":"787"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"788","text":"789"},"Update the dependencies array to be: [dispatch]",{"range":"790","text":"791"},"Update the dependencies array to be: [slug, category, dispatch, userInfo]",{"range":"792","text":"793"},"Update the dependencies array to be: [slug, filter, url, dispatch]",{"range":"794","text":"795"},"Update the dependencies array to be: [adminGetAllUsers, getOrders, props.history, userInfo]",{"range":"796","text":"797"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"798","text":"799"},"Update the dependencies array to be: [adminGetAllUsers, props.history, userInfo]",{"range":"800","text":"801"},"Update the dependencies array to be: [dispatch, getAddresses, props.history, userInfo]",{"range":"802","text":"803"},{"range":"804","text":"789"},"Update the dependencies array to be: [error, props.history, userInfo]",{"range":"805","text":"806"},{"range":"807","text":"801"},"Update the dependencies array to be: [dispatch, props, userInfo]",{"range":"808","text":"809"},"Update the dependencies array to be: [getOrdersAdmin, props, userInfo]",{"range":"810","text":"811"},"Update the dependencies array to be: [successSave, successDelete, dispatch, setList]",{"range":"812","text":"813"},{"range":"814","text":"813"},[997,1002],"[dispatch, qty, userInfo]",[795,797],"[dispatch, userInfo]",[733,735],"[dispatch]",[1261,1277],"[slug, category, dispatch, userInfo]",[1196,1215],"[slug, filter, url, dispatch]",[1095,1097],"[adminGetAllUsers, getOrders, props.history, userInfo]",[968,978],"[props.history, userInfo]",[5062,5064],"[adminGetAllUsers, props.history, userInfo]",[2525,2527],"[dispatch, getAddresses, props.history, userInfo]",[838,840],[1328,1338],"[error, props.history, userInfo]",[4838,4840],[850,857],"[dispatch, props, userInfo]",[3014,3016],"[getOrdersAdmin, props, userInfo]",[2102,2130],"[successSave, successDelete, dispatch, setList]",[3083,3111]]