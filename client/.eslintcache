[{"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/index.js":"1","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/App.js":"2","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/PrivateRoute.js":"3","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/ShopStore.js":"4","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/reducers/cartReducers.js":"5","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/reducers/userReducers.js":"6","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/reducers/productReducers.js":"7","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ProductDetails/index.js":"8","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/PlaceOrder/index.js":"9","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Home/index.js":"10","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Login/index.js":"11","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ControlPanel/index.js":"12","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Cart/index.js":"13","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Orders/index.js":"14","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ThankYou/index.js":"15","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Signup/index.js":"16","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ForgetPassword/index.js":"17","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/Header.js":"18","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/Products/Products.js":"19","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Products/ProductsScreen.js":"20","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/productConstants.js":"21","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/userConstants.js":"22","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/cartConstants.js":"23","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/index.js":"24","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/actions/cartActions.js":"25","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/actions/productActions.js":"26","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/actions/userActions.js":"27","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/MainHeader/MainHeader.js":"28","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/TopHeader/TopHeader.js":"29","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/BottomHeader/BottomHeader.js":"30","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/PlaceOrder/AddressForm/index.js":"31","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/PlaceOrder/DeliveryAddress/index.js":"32","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/CartPrice/index.js":"33","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Error/index.js":"34","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Cart/CartItem/index.js":"35","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/NormalInput/index.js":"36","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/RadioButton/index.js":"37","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/MobileTypeInput/index.js":"38","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/SubmitGradientButton/index.js":"39","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/Products/Product/index.js":"40","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Logo/index.js":"41","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/QuantityControl/index.js":"42","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/MdpStyledComponents.js":"43","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/global.js":"44","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/Contact/Contact.js":"45","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Footer/Footer.js":"46","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Footer/FooterContainer.js":"47","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Icon/index.js":"48","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Footer/styles/footer.js":"49","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Widgets/Widget.js":"50","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/IdleTimerContainer/IdleTimerContainer.js":"51","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/About/About.js":"52"},{"size":495,"mtime":1611276010000,"results":"53","hashOfConfig":"54"},{"size":3190,"mtime":1611958453000,"results":"55","hashOfConfig":"54"},{"size":615,"mtime":1611276010000,"results":"56","hashOfConfig":"54"},{"size":1278,"mtime":1622397538000,"results":"57","hashOfConfig":"54"},{"size":3436,"mtime":1611276010000,"results":"58","hashOfConfig":"54"},{"size":1391,"mtime":1611276010000,"results":"59","hashOfConfig":"54"},{"size":3660,"mtime":1611276010000,"results":"60","hashOfConfig":"54"},{"size":5542,"mtime":1618653528000,"results":"61","hashOfConfig":"54"},{"size":14299,"mtime":1618827902000,"results":"62","hashOfConfig":"54"},{"size":326,"mtime":1611276010000,"results":"63","hashOfConfig":"54"},{"size":2830,"mtime":1622887173000,"results":"64","hashOfConfig":"54"},{"size":259,"mtime":1611276010000,"results":"65","hashOfConfig":"54"},{"size":4335,"mtime":1611956458000,"results":"66","hashOfConfig":"54"},{"size":15531,"mtime":1620578368000,"results":"67","hashOfConfig":"54"},{"size":1362,"mtime":1611604786000,"results":"68","hashOfConfig":"54"},{"size":5406,"mtime":1611276010000,"results":"69","hashOfConfig":"54"},{"size":1812,"mtime":1611276010000,"results":"70","hashOfConfig":"54"},{"size":1165,"mtime":1611958859000,"results":"71","hashOfConfig":"54"},{"size":3988,"mtime":1618651574000,"results":"72","hashOfConfig":"54"},{"size":13735,"mtime":1618849498000,"results":"73","hashOfConfig":"54"},{"size":1194,"mtime":1611276010000,"results":"74","hashOfConfig":"54"},{"size":560,"mtime":1611276010000,"results":"75","hashOfConfig":"54"},{"size":385,"mtime":1611276010000,"results":"76","hashOfConfig":"54"},{"size":109,"mtime":1620578906000,"results":"77","hashOfConfig":"54"},{"size":2706,"mtime":1611602109000,"results":"78","hashOfConfig":"54"},{"size":6512,"mtime":1618849133000,"results":"79","hashOfConfig":"54"},{"size":2299,"mtime":1611276010000,"results":"80","hashOfConfig":"54"},{"size":1163,"mtime":1618650522000,"results":"81","hashOfConfig":"54"},{"size":2952,"mtime":1612727797000,"results":"82","hashOfConfig":"54"},{"size":2293,"mtime":1622885999000,"results":"83","hashOfConfig":"54"},{"size":4007,"mtime":1611957626000,"results":"84","hashOfConfig":"54"},{"size":1028,"mtime":1618826966000,"results":"85","hashOfConfig":"54"},{"size":2021,"mtime":1618652939000,"results":"86","hashOfConfig":"54"},{"size":141,"mtime":1611276010000,"results":"87","hashOfConfig":"54"},{"size":2432,"mtime":1611961708000,"results":"88","hashOfConfig":"54"},{"size":1232,"mtime":1611276010000,"results":"89","hashOfConfig":"54"},{"size":394,"mtime":1611276010000,"results":"90","hashOfConfig":"54"},{"size":425,"mtime":1611276010000,"results":"91","hashOfConfig":"54"},{"size":356,"mtime":1611276010000,"results":"92","hashOfConfig":"54"},{"size":913,"mtime":1618651757000,"results":"93","hashOfConfig":"54"},{"size":355,"mtime":1611276010000,"results":"94","hashOfConfig":"54"},{"size":793,"mtime":1618823822000,"results":"95","hashOfConfig":"54"},{"size":7487,"mtime":1611956537000,"results":"96","hashOfConfig":"54"},{"size":170,"mtime":1611763823000,"results":"97","hashOfConfig":"54"},{"size":3119,"mtime":1622888688000,"results":"98","hashOfConfig":"54"},{"size":833,"mtime":1611836137000,"results":"99","hashOfConfig":"54"},{"size":1986,"mtime":1622885071000,"results":"100","hashOfConfig":"54"},{"size":169,"mtime":1611836290000,"results":"101","hashOfConfig":"54"},{"size":1077,"mtime":1611836576000,"results":"102","hashOfConfig":"54"},{"size":775,"mtime":1611928401000,"results":"103","hashOfConfig":"54"},{"size":2307,"mtime":1612729678000,"results":"104","hashOfConfig":"54"},{"size":2454,"mtime":1622884922000,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},"p0vj4z",{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"109"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"109"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"109"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"109"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"109"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"109"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"109"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"109"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"109"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"109"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"109"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"109"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"109"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"109"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"160"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"109"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"243"},"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/index.js",["244"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n{/**import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport store from './containers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'));\n */}",["245","246"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/App.js",["247","248","249","250","251","252"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from '../PrivateRoute';\nimport './style.css';\nimport Login from './Login';\nimport Signup from './Signup';\nimport ForgetPassword from './ForgetPassword';\nimport ControlPanel from './ControlPanel';\nimport ProductDetails from './ProductDetails';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport Cookie from 'js-cookie';\nimport Home from './Home';\nimport Cart from './Cart';\nimport PlaceOrder from './PlaceOrder';\nimport ThankYou from './ThankYou';\nimport Orders from './Orders';\nimport ShopeStore from '../components/ShopStore/ShopStore'\n\n//Product reducer for admin\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productSaveReducer,\n  productDeleteReducer,\n  productReviewSaveReducer,\n  categoryListReducer,\n  productListFilteredReducer\n} from '../store/reducers/productReducers';\n\n//User reducer \nimport { userSigninReducer, userRegisterReducer, userUpdateReducer} from '../store/reducers/userReducers'\n\n//Cart reducers\nimport cartReducers from '../store/reducers/cartReducers';\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nconst cartItems = Cookie.getJSON('cartItem') || [];\nconst userInfo = Cookie.getJSON('userInfo') || null;\n\n\n\nconst initialState = {\n  userSignin: { userInfo }\n}\n\nconst reducer = combineReducers({\n  userSignin: userSigninReducer,\n  userRegister: userRegisterReducer,\n  userUpdate: userUpdateReducer,\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productSave: productSaveReducer,\n  productDelete: productDeleteReducer,\n  categoryList: categoryListReducer,\n  productReviewSave: productReviewSaveReducer,\n  productsFiltered: productListFilteredReducer,\n  cart: cartReducers\n});\n\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\n\nwindow.store = store;\n\nfunction App(props) {\n\n  return (\n\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n\n            <Switch>\n               \n              \n              <Route path=\"/login\" component={Login} />  \n              <Route path=\"/signup\" component={Signup} />\n               <PrivateRoute path=\"/cart\" component={Cart} />\n               <PrivateRoute path=\"/place-order\" component={PlaceOrder} />\n               <PrivateRoute path=\"/thank-you\" component={ThankYou} />\n              <PrivateRoute path=\"/orders\" component={Orders} />\n\n\n              <Route path=\"/\"  component={ShopeStore} />\n             \n                  {/**\n\n\n              <Route path=\"/forget-password\" component={ForgetPassword} />\n              <Route path=\"/cpanel\" component={ControlPanel} />\n              <PrivateRoute path=\"/place-order\" component={PlaceOrder} />\n              <PrivateRoute path=\"/thank-you\" component={ThankYou} />\n              <PrivateRoute path=\"/orders\" component={Orders} />*/}\n               \n                 \n                         \n            </Switch>\n\n        </div>\n      </Router>\n    </Provider>\n\n    \n    \n  );\n}\n\nexport default App;\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/PrivateRoute.js",["253"],"import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin\n\n    console.log(\"prrrrrrrrrrrrrr\")\n    \n    return <Route {...rest} render={(props) => {\n        \n\n        if(userInfo){\n          \n                return <Component {...props} />\n        }else{\n                return <Redirect to=\"/login\" />\n            \n        }\n        \n\n    }} />\n}\n\nexport default PrivateRoute;","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/ShopStore.js",["254","255","256"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/reducers/cartReducers.js",["257"],"import { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../../constants/cartConstants\"\n\nconst initState = {\n    cartItem: [],\n    totalAmount: 0,\n    cartCount: 0\n}\n\nconst cartReducers = (state = initState, actions) => {\n    switch(actions.type){\n        case ADD_TO_CART:\n            const cartItem = state.cartItem;\n            let updatedCartItem = [];\n            let totalAmount;\n\n            const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\n\n            if(itemCount.length === 0){\n                updatedCartItem = [\n                    ...cartItem,\n                    {\n                        product: actions.cartItem.product,\n                        name: actions.cartItem.name,\n                        imageUrl: actions.cartItem.imageUrl,\n                        price: actions.cartItem.price,\n                        quantity: actions.cartItem.quantity,\n                        total: actions.cartItem.quantity * actions.cartItem.price\n                    }\n                ];\n            }else{\n                updatedCartItem = cartItem.map(item => \n                    item.product === actions.cartItem.product ?\n                    {\n                        ...item,\n                        quantity: item.quantity + actions.cartItem.quantity,\n                        total: item.total + actions.cartItem.price\n                    } : item\n                    )\n            }\n            totalAmount = state.totalAmount + actions.cartItem.price\n            state = {\n                cartItem: updatedCartItem,\n                totalAmount: totalAmount,\n                cartCount: state.cartCount + 1\n            }\n            break;\n        case GET_CART_DETAILS:\n\n            const cItem = actions.cartItems.cart;\n            let totalAmt = 0;\n            let quantityCount = 0;\n            const updateCartItem = cItem.map(item => {\n                totalAmt += item.total;\n                quantityCount += item.quantity;\n                \n                return {\n                    product: item.product._id,\n                    name: item.product.name,\n                    imageUrl: item.product.imageUrl,\n                    price: item.price,\n                    quantity: item.quantity,\n                    total: item.total\n                }\n\n            })\n            state = {\n                cartItem: updateCartItem,\n                totalAmount: totalAmt,\n                cartCount: quantityCount\n            }\n            break;\n        case UPDATE_CART:\n            const updateItem = actions.item;\n            const cartItems = state.cartItem.map(item => {\n                return item.product === updateItem.productId ? \n                {\n                    ...item,\n                    quantity: updateItem.quantity,\n                    total: updateItem.total\n                } : item\n            });\n            state = {\n                cartItem: cartItems,\n                totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\n                cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\n            }\n            break;\n        case CLEAR_CART:\n            state = {\n                cartItem: [],\n                totalAmount: 0,\n                cartCount: 0\n            }\n        default:\n            break;\n    }\n\n    return state;\n}\n\nexport default cartReducers;","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/reducers/userReducers.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/reducers/productReducers.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ProductDetails/index.js",["258","259","260","261","262","263","264","265","266","267","268"],"\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport React, {useEffect,  useState } from 'react';\nimport { useSelector, useDispatch} from 'react-redux'\nimport {useParams, Link } from 'react-router-dom'\n\nimport { detailsProduct } from '../../store/actions/productActions'\nimport {usePath} from 'hookrouter';\n//import Rating from '../components/Rating';\n//import { PRODUCT_REVIEW_SAVE_RESET } from '../constants/productConstants';\nimport { addToCart, updateCart, getCartItems } from '../../store/actions/cartActions'\n\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\nconst ProductDetails = (props) => {\n  const userSignin = useSelector((state) => state.userSignin)\n  const { userInfo } = userSignin\n  const productDetails = useSelector((state) => state.productDetails)\n  const { product, loading, error } = productDetails\n  const dispatch = useDispatch()\n  const { category, slug } = useParams()\n  const cart = useSelector(state => state.cart);\n  const { cartItems, totalAmount, cartCount} = cart\n\n\n  useEffect(() => {\n    \n    dispatch(detailsProduct(category, slug))\n\n    if(userInfo){\n        dispatch(getCartItems(userInfo))\n    }\n\n\n    return () => {\n      //\n    };\n  }, [slug, category]);\n\n\n  const addItemToCart = (product) => {\n\n    if(!userInfo){\n        props.history.push('/login');\n        return;\n    }else {\n        if(!userInfo.isAdmin){\n            const cartItem = {\n                user: userInfo.userId,\n                product: product._id,\n                name: product.name,\n                imageUrl: product.imageUrl,\n                quantity: 1,\n                price: product.price\n            }\n        \n           dispatch(addToCart(userInfo, cartItem))\n        }\n    } \n   \n}\n\nconst acheterNow  = (product) => {\n\n    if(!userInfo){\n        props.history.push('/login');\n        return;\n    }else {\n        if(!userInfo.isAdmin){\n            const cartItem = {\n                user: userInfo.userId,\n                product: product._id,\n                name: product.name,\n                imageUrl: product.imageUrl,\n                quantity: 1,\n                price: product.price\n            }\n        \n           dispatch(addToCart(userInfo, cartItem))\n        }\n    } \n}\n\n\n    let productDescription\n\n    if(product){\n        productDescription = \n            <div style={{marginBottom: \"12px\"}} className=\"Content\">\n                <div style={{marginTop: \"12px\"}} className=\"ProductDetailsWrapper\">\n                    <div className=\"ProductDetailsImage\">\n                        <div className=\"ProductDetailsImageWrapper\">\n                            <img  src={product.imageUrl} alt=\"\" />\n                        </div>\n                        <div className=\"mdpBtn\">\n                             <MdpButton outline mdpXLContact  onClick={() => {\n                                 addItemToCart(product)\n                                props.history.push('/cart')\n                             } }>\n                                <i className=\"fas fa-shopping-cart\" style={{marginRight: \"3px\"}}></i>\n                                &nbsp;\n                                Ajouter au panier\n                             </MdpButton>        \n                        </div>\n                        \n                    </div>\n                    <div className=\"ProductDetails\">\n                        <p className=\"ProductTitle\">{product.name}</p>\n                        <p className=\"ProductPrice\">{product.price}€</p>\n                        <div className=\"BreadCrumb\">\n                            <small>Auteur: Nene DOGBA | Date de parition: 12 mars 2020</small>\n                            <small>{ product.stock > 0 ? \"  \"+ product.stock  + \" exemplaire en stock\" : \"Rupture de stock\"  } | Expédition sous 24 heures</small>\n                            \n                        </div>\n                        <div className=\"ProductDescription\">\n                            <h3 style={{marginTop: \"17px\"}}>Description</h3>\n                            <div className=\"BreadCrumb\">\n                            <small>{product.description}</small>\n                            </div>\n\n                            <h4 style={{marginTop: \"18px\"}}>A propos de l'auteur</h4>\n                            <div className=\"BreadCrumb\">\n                            <small>      \n                            <p>laceholder text commonly used to demonstrate the visual form of a document or a typeface without relying on meaningful content. Lorem ipsum may be used as a placeholder before final copy is available</p>\n                            </small>\n                            </div>\n                         \n                        </div>\n                        <div className=\"mdpBtn\" style={{marginTop: \"51px\"}}>\n                        <MdpButton outline mdpXLContact onClick={() => { if(userInfo){\n                                    acheterNow(product)\n                                    props.history.push('/place-order')\n                                  }\n                                  }} style={{marginRight: \"6px\"}}><i className=\"fas fa-heart\" style={{marginRight: \"3px\", color:\"red\"}}></i>&nbsp;Acheter maintenant</MdpButton>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n    }else{\n        productDescription = <div>Product is loading...!</div>\n    }\n    \n    \n\n    return (\n        <div>\n            {productDescription}\n        </div>\n    );\n    \n\n}\n\n\n\nexport default ProductDetails","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/PlaceOrder/index.js",["269","270","271","272","273","274","275","276","277","278","279","280","281","282"],"import Header from '../../components/Header/Header';\nimport './style.css';\nimport NormalInput from '../../components/UI/NormalInput'\nimport AddressForm from './AddressForm';\nimport CartPrice from '../../components/CartPrice';\nimport DeliveryAddress from './DeliveryAddress';\nimport RadioButton from '../../components/UI/RadioButton';\nimport { base_url } from '../../constants/index';\nimport React, { useState , useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Axios from 'axios'\nimport { addToCart, updateCart, getCartItems } from '../../store/actions/cartActions'\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\n\nconst PlaceOrder = (props) => {\n\n\n    const cart = useSelector(state => state.cart);\n    const { cartItem, totalAmount, cartCount} = cart\n    const dispatch = useDispatch()\n\n\n    const userSignin = useSelector(state => state.userSignin);\n    const { loading, userInfo, error } = userSignin;\n    const [addresses, setAddresses] = useState([])\n    const [address, setAddress] = useState({fullName: \"\",\n                            mobileNumber: \"\",\n                            pinCode: \"\",\n                            locality: \"\",\n                            address: \"\",\n                            cityDistrictTown: \"\",\n                            state: \"\",\n                            landmark: \"\",\n                            alternatePhoneNumber: \"\"})\n    const [order, setOrder] = useState([])\n    const [selectedAddress, setSelectedAddress] = useState('')\n    const [existingAddress, setExistingAddress] = useState(false)\n    const [newAddress, setNewAddress] = useState(false)\n    const [isAddressConfirm, setIsAddressConfirm] = useState(false)\n    const [isOrderConfirm, setIsOrderConfirm] = useState(false)\n    const [selectedPaymentType, setSelectedPaymentType] = useState('COD')\n    const [paymentTypes, setPaymentTypes] = useState([\n        {id: 1, value: 'card', label: 'Carte de Credit', isActive: false},\n        {id: 2, value: 'netBanking', label: 'Western Union', isActive: false},\n        {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\n        {id: 4, value: 'cod', label: 'Cash après livraison', isActive: true},\n    ])\n\n    useEffect(() => {\n\n          if(!userInfo){\n\n                    props.history.push('/login')\n          \n        }\n\n        dispatch(getCartItems(userInfo))\n        getAddresses()\n    \n\n    }, [])\n\n    const getAddresses = () => {\n        fetch(`${base_url}/user/get-addresses/`+userInfo.userId, {\n            headers: {\n                  Authorization: ' Bearer ' + userInfo.token\n            }\n        })\n        .then(response => {\n            if(response.status == 200){\n                return response.json();\n            }else{\n                throw new Error('Something went wrong');\n            }\n        })\n        .then(jsonResponse => {\n            console.log(\"response adress \"+JSON.stringify(jsonResponse.message.address))\n            setAddresses(jsonResponse.message.address)\n        })\n        .catch(error => {\n            console.log(error);\n            console.log(\"response adress error \"+JSON.stringify(error))\n\n        });\n\n    }\n\n    const inputHandler = (e) => {\n        const updatedAddress = {\n            ...address,\n            [e.target.name] :  e.target.value\n        }\n\n        setAddress(updatedAddress)\n    }\n\n    const  addressSelector = (e) => {\n        setSelectedAddress(e.target.value)\n        setExistingAddress(true)\n        setNewAddress(false)\n    }\n\n    const newAddressSelection = (e) => {\n        setSelectedAddress('newAddressId')\n        setExistingAddress(false)\n        setNewAddress(true)\n    }\n\n\n\n    const addressSubmitHandler = async (e) => {\n        e.preventDefault()\n\n        try {\n\n        const myaddress = {\n            userId: userInfo.userId,\n            address: address\n        }\n        console.log(userInfo.token)\n\n        const data = await Axios.post(`${base_url}/user/new-address`, myaddress, {\n                headers: {\n                  Authorization: ' Bearer ' + userInfo.token\n                }\n              }\n               )\n\n\n            console.log(\"retour *****\"+ JSON.stringify(data.data.message.address))\n            const updatedAddressList = data.data.message.address\n\n            setIsAddressConfirm(true)\n            setAddress({\n                ...address,\n                ...address.address\n            })\n            setAddresses(updatedAddressList)\n            setSelectedAddress(updatedAddressList[updatedAddressList.length - 1]._id)\n\n\n        }catch(err){\n            console.log(err)\n        }\n\n    }\n\n    const confirmDeliveryAddress = () => {\n        setIsAddressConfirm(true)\n    }\n\n    const  confirmOrder = () => {\n        setIsOrderConfirm(true)\n    }\n\n    const selectPaymentOption = (e) => {\n        setSelectedPaymentType(e.target.value)\n    }\n\n    const submitOrder = async () => {\n\n        try{\n\n            const order = cartItem.map(item => {\n                return {\n                    product: item.product,\n                    price: item.price,\n                    quantity: item.quantity\n                }\n            });\n\n            const data = {\n                    user: userInfo.userId,\n                    address: selectedAddress,\n                    order: order,\n                    paymentType: 'COD',\n                    paymentStatus: 'pending'\n                }\n            const response = await Axios.post(`${base_url}/order/create`,  data, {\n                headers: {\n                  Authorization: ' Bearer ' + userInfo.token\n                }\n              }\n               )\n\n            const jsonResponse = response.data.message\n\n\n            console.log(\"after crete order succeed *****\"+ JSON.stringify(response.data))\n                 props.history.push({\n                    pathname: '/thank-you',\n                    search: '?orderid='+jsonResponse._id,\n                    state: jsonResponse\n                });\n    \n\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n        let getaddress;\n        if(isAddressConfirm && !newAddress){\n            getaddress = addresses.find(address => address._id === selectedAddress);\n        }else{\n            getaddress = address\n        }\n        //console.log(\"ahahahaha \"+JSON.stringify(getaddress))\n\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"PlaceOrderWrapper\">\n\n                        \n                        <div className=\"DeliveryAddress\">\n\n                            <div className=\"Card\">\n                                <p className=\"CardText\">Login {userInfo ? <i style={{color: \"green\"}} className=\"fas fa-check\"></i> : null}</p>\n                                <p className=\"CardText\">Email: {userInfo.email}</p>\n                            </div>\n\n                            {\n                                isAddressConfirm ? \n                                 <div className=\"Card\">\n                                     <p className=\"CardText\">Adresse de livraison {isAddressConfirm ? <i className=\"fas fa-check\"></i> : null}</p>\n                                     <p>\n                                        <span>{`${getaddress.fullName} - ${getaddress.mobileNumber} - `}</span>\n                                        <span>{ `${getaddress.address}, ${getaddress.cityDistrictTown}, ${getaddress.state} - ${getaddress.pinCode}`}</span>\n                                        </p>\n                                 </div> :\n                                 <React.Fragment>\n                                <div className=\"Card\">\n                                    <h4>Adresse de livraison</h4>\n                                    {\n                                        addresses.length && addresses.map(address => \n                                            <DeliveryAddress \n                                                key={address._id} \n                                                onAddressSelection={addressSelector} \n                                                value={selectedAddress}\n                                                address={address} />\n\n                                        )\n                                    }\n                                    {\n                                        existingAddress ?\n                                        <div className=\"DeliveryButtonContainer\" >\n                                            <MdpButton outline mdpXLContact onClick={confirmDeliveryAddress} className=\"DeliveryAddressButton\">Livrer ici</MdpButton>\n                                        </div> : null\n                                    }\n                                    \n                                </div>\n                                <div className=\"Card\">\n                                    <div>\n                                        <RadioButton \n                                            name=\"address\"\n                                            label=\"Ajouter une adresse\"\n                                            value={selectedAddress}\n                                            onChange={newAddressSelection}\n                                        />\n                                    </div>\n                                    {\n                                        newAddress ? \n                                            <AddressForm\n                                                address={address}\n                                                inputHandler={inputHandler}\n                                                addressSubmitHandler={addressSubmitHandler}\n                                            /> : null\n                                    }\n                                    \n                                    \n                                </div>\n                                </React.Fragment>\n                            }\n                            \n                               \n\n                                {\n                                    isOrderConfirm ? \n                                    <div className=\"Card\">\n                                        <p className=\"CardText\">Résumé de la commande<i className=\"fas fa-check\"></i> </p>\n                                    </div> : \n                                     isAddressConfirm ? \n                                    <div className=\"Card\">\n                                        <h4 className=\"CardText\">Résumé de la commande</h4>\n                                        {\n                                             cartItem.map(item => (\n                                                <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\n                                                    <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.imageUrl} alt=\"\" />\n                                                    </div>\n                                                    <div>\n                                                        <h5>{item.name}</h5>\n                                                        <h6>Quantité : {item.quantity}</h6>\n                                                        <h6>{item.total}€</h6>\n                                                    </div>\n                                                </div>\n                                            ))\n                                        }\n                                        <button onClick={confirmOrder} className=\"ContinueButton\">Continue</button>\n                                    </div>\n                                 : null\n                                }\n                                \n                                {\n                                    isOrderConfirm ? \n                                    <div className=\"Card\">\n                                    <h4 className=\"CardText\">Option de paiement</h4>\n                                    <ul>\n                                        {\n                                            paymentTypes.map(payment => \n                                            <li className=\"paymentType\" key={payment.id}>\n                                                <RadioButton\n                                                    key={payment.id} \n                                                    name=\"paymentType\"\n                                                    label={payment.label}\n                                                    value={payment.value}\n                                                    onChange={selectPaymentOption}\n                                                />\n                                            </li>)\n                                        }\n                                    </ul>\n                                    {\n                                        selectedPaymentType !== 'cod' ? \n                                        <p className=\"ErrorMessage\">Désolé, seul le paiment en espèce à la livraison est disponible</p> : null\n                                    }\n                                    <button className=\"PaymentConfirm\" onClick={\n                                        () => { \n                                             if( isOrderConfirm == true ){\n\n                                                submitOrder()\n                                             }\n                                            }\n                                        }>Confirmer la commande</button>\n\n                                </div> : null\n                                }\n                              \n                        \n                            </div>\n\n                    <CartPrice />\n                            \n                    </div>\n\n      \n                </div>\n                \n            </React.Fragment>\n        );\n    }\n\nexport default PlaceOrder","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Home/index.js",["283","284"],"import React, { Component } from 'react';\nimport Header from '../../components/Header/Header';\n\nconst Home = (props) => {\n   \n        return (\n            <React.Fragment>\n                <div>\n                    <h1>Home Page</h1>\n                </div>\n            </React.Fragment>\n        );\n    \n}\n\nexport default Home;\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Login/index.js",["285","286"],"import './style.css';\nimport Logo from './MEND.png';\nimport MobileTypeInput from '../../components/UI/MobileTypeInput';\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton';\nimport Error from '../../components/Error';\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../../store/actions/userActions'\n\nconst SigninScreen = (props) => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('')\n  const [isError, setIsError] = useState(false)\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin;\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push('/');\n    }\n    return () => {\n      //\n    };\n  }, [userInfo]);\n\n\n  const loginHandler = (e) => {\n    e.preventDefault();\n\n    if(email === ''){\n        setIsError(true)\n        setErrorMessage('Enter Email'); return;\n    }\n\n    const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\n    if(!emailPattern.test(email)){\n        setIsError(true)\n        setErrorMessage('Invalid Email Address'); return;\n    }\n\n    if(password === '' && password < 6){\n        setIsError(true)\n        setErrorMessage('Enter Password'); return;\n    }\n\n    dispatch(signin(email, password))\n    }\n\n\n\n  return ( \n  \n  <div className=\"LoginContainer\">\n  <div className=\"WelcomeText\">\n      <h3>Connexion</h3>\n  </div>\n  {loading && <div>Loading...</div>}\n  {error && <div>{error}</div>}\n  <img src={Logo} alt=\"logo\" height=\"80\" width=\"300\"/> \n  <div className=\"LoginWrapper\">\n      <form onSubmit={loginHandler} autoComplete=\"off\">\n  \n          <MobileTypeInput \n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              textChange={(e) => setEmail(e.target.value)}\n              name=\"email\"\n          />\n          <MobileTypeInput \n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              textChange={(e) => setPassword(e.target.value)}\n              name=\"password\"\n          />\n  \n          <Error>\n              {errorMessage}\n          </Error>\n          \n          <SubmitGradientButton \n              label=\"Login\"\n              style={{marginTop: '30px'}}\n          />\n      </form>\n  \n      \n  \n  </div>\n  <div style={{display: 'flex', justifyContent: 'space-between'}}>\n      <Link to=\"/signup\">Créer un compte</Link>\n      <Link to=\"/forget-password\">Mot de passe oublié ?</Link>\n  </div>\n  \n  \n  </div>)\n}\nexport default SigninScreen;",["287","288"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ControlPanel/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Cart/index.js",["289","290","291","292","293","294","295","296"],"import React, { useEffect, useState } from 'react';\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport CartItem from './CartItem'\nimport CartPrice from '../../components/CartPrice';\n\n\nimport { addToCart, updateCart, getCartItems} from '../../store/actions/cartActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route , withRouter} from 'react-router-dom'\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\n\n\nconst Cart = (props) => {\n\n  const cart = useSelector(state => state.cart);\n  const { cartItem, totalAmount, cartCount} = cart\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin;\n\n  const [qty, setQty] = useState(0)\n\n  const dispatch = useDispatch();\n\n \n \n  useEffect(() => {\n    /*if (userInfo) {\n      dispatch(addToCart(userInfo, cartItems));\n    }*/\n    if(userInfo){\n        dispatch(getCartItems(userInfo))\n    }\n  }, [qty])\n\n\n  const decreaseQuantity = (e, productId) => {\n        updateThisCart(productId, -1)\n        setQty(-1)\n    }\n\n  const increaseQuantity = (e, productId) => {\n        updateThisCart(productId, 1);\n        setQty(1)\n    }\n\n  const  updateThisCart =  (productId, quantity) => {\n\n        try{\n            \n            let product = cartItem.find(item => item.product === productId);\n            const myproduct = {\n                productId: product.product,\n                quantity: parseInt(product.quantity) + parseInt(quantity),\n                newQuantity: quantity,\n                price: product.price,\n                total: parseFloat(product.total) + parseFloat( product.price * quantity )\n            }\n\n            if(product.quantity <= 0){\n                return;\n            }\n            dispatch(updateCart(userInfo.token, userInfo.userId, myproduct))\n\n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n  const changeQuantity = (e, productId) => {\n\n         console.log(e.target.value);\n\n         if(isNaN(e.target.value)){\n         return;\n         }\n\n        const firstDigit = parseInt(e.target.value.split(\"\")[0]);\n        if(firstDigit === 0){\n            return;\n        }\n\n        // //alert(e.target.value);\n\n        updateThisCart(productId, parseInt(e.target.value));\n    }\n\n    return (\n        <React.Fragment>\n            <Header />\n            <div className=\"Content\">\n                <div className=\"CartWrapper\">\n                    <div className=\"CartDetails\">\n                        {/* List cart items */}\n                        <div className=\"CardTitle\">\n                            <h3>Mon panier</h3>\n                        </div>\n                        <div className=\"CardBody\">\n\n                            {cartItem.length === 0 ?\n                                <div>\n                                Vous n'avez aucun article dans votre panier\n                                </div>\n                                     :\n                                     cartItem.map(product => \n                                    <CartItem\n                                        key={product.product}\n                                        productId={product.product}\n                                        name={product.name}\n                                        imageUrl={product.imageUrl}\n                                        price={product.price}\n                                        quantity={product.quantity}\n                                        total={product.total}\n                                        //name=\"quantity\" \n                                        changeQuantity={changeQuantity}\n                                        increaseQuantity={increaseQuantity}\n                                        decreaseQuantity={decreaseQuantity}\n                                />)\n                            }\n\n                            <div className=\"PlaceOrder\">\n                                <MdpButton outline mdpXLContact onClick={() => props.history.push('/')}>Poursuivre mes achats</MdpButton>\n                            </div>\n\n                        </div>\n                    </div>\n                    \n                    <CartPrice red={props}/>\n\n                </div>\n            </div>\n        </React.Fragment>\n    );\n\n}\n\n\nexport default Cart","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Orders/index.js",["297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"import './style.css';\nimport Header from '../../components/Header/Header'\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {base_url} from '../../constants/index'\nimport Axios from 'axios'\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\n\n\n\n\nconst Orders = (props) => {\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin\n  const [ordersList, setOrderList] = useState([])\n  const [userList, setUserList] = useState([])\n  const [userIds, setUserIds] = useState([])\n  const [isOrderOpened, setIsOrderOpened] = useState(false)\n  const [firstName, setFirstName] = useState(\"\")\n  const [lastName, setLastName] = useState(\"\")\n\n\n\n\n\n\n  useEffect(() => {\n    \n    if(!userInfo){\n\n        props.history.push('/login');\n                 \n    }else{\n        if(userInfo.isAdmin){\n            //getUsers()\n            adminGetAllOrders()\n         }else{\n            getOrders()\n      }\n    \n    }\n    return () => {\n    };\n  }, []);\n\n     const getOrders = async () => {\n        console.log(userInfo)\n        try{\n\n        const { data } = await Axios.get(`${base_url}/order/getorders/${userInfo.userId}`, {\n            headers: {\n                  Authorization: ' Bearer ' + userInfo.token\n            }\n        })\n        console.log(\"responseorder: \"+JSON.stringify(data.message));\n        setOrderList(data.message)\n\n    }catch(error){\n            console.log(error);\n        }\n    }\n\n    const getOrdersAdmin = async (uid) => {\n        try{\n\n        const { data } = await Axios.get(`${base_url}/order/getorders/${uid}`, {\n            headers: {\n                  Authorization: ' Bearer ' + userInfo.token\n            }\n        })\n        console.log(\"responseorder: \"+JSON.stringify(data.message));\n        setOrderList(data.message)\n\n    }catch(error){\n            console.log(error);\n        }\n    }\n\n    const getUsers = async () => {\n        console.log(userInfo)\n        try{\n\n            const { data } = await Axios.get(`${base_url}/order/getusers`, {\n                headers: {\n                      Authorization: ' Bearer ' + userInfo.token\n                }\n            })\n            console.log(\"responseuser: \"+JSON.stringify(data.message));\n           /* var usersID = {}\n            var i = 0\n    \n            userList.map((user) => {\n\n                console.log(\"all user id: \"+JSON.stringify(user))\n                usersID['_id'+i] = user._id\n                i += 1\n            })*/\n            setUserList(data.message)\n\n\n    \n        }catch(error){\n                console.log(error);\n            }\n\n    }\n\n    /****get all orders for administration back office */\n    const adminGetAllOrders = async () => {\n       // getUsers()\n        console.log(\"admin get orders\")\n        try{\n\n            const { data } = await Axios.get(`${base_url}/order/getorders`, {\n                headers: {\n                      Authorization: ' Bearer ' + userInfo.token\n                }\n            })\n            console.log(\"response All orders: \"+JSON.stringify(data.message));\n            setUserList(data.message)\n\n        }catch(error){\n            console.log(error + \"error front\");\n        }\n        \n    }\n    \n\n    const formatDate = (date) => {\n        let d = new Date(date);\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n    }\n\n    const getOrderTotal = (id) => {\n        const singleOrder = ordersList.find(order => order._id === id);\n        let orderTotal = 0;\n        singleOrder.order.forEach(order => {\n            orderTotal = orderTotal + (order.price * order.quantity)\n        });\n\n        return orderTotal;\n    }\n\n\n    return (\n        <React.Fragment>\n            <Header />\n            <div className=\"Content\">\n                <div className=\"Card\">\n                   { userInfo.isAdmin ? <p className=\"CardText\">Liste des commandes</p> : <p className=\"CardText\">Mes Commandes</p>} \n\n                    {\n                      !userInfo.isAdmin && ordersList.map(order => {\n                            return (\n                                <div key={order._id} className=\"Order\">\n                                    <div className=\"OrderHeader\">\n                                        <a href=\"#\">{order._id}</a>\n                                    </div>\n                                    <div className=\"OrderDescription\">\n                                        <div className=\"od1\">\n                                            <p className=\"odtitle\">Adresse de livraison</p>\n                                            <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\n                                        </div>\n                                        <div className=\"od2\">\n                                            <p className=\"odtitle\">Type de paiement</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\n                                        </div>\n                                        <div className=\"od3\">\n                                            <p className=\"odtitle\" >Statut du paiement</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\n                                        </div>\n                                        <div className=\"od3\">\n                                            <p className=\"odtitle\" >Statut de la livraison</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{ order.isOrderCompleted ? \"livré le 12/01/2021\" : order.paymentStatus }</a>\n                                        </div>\n                                    \n                                    </div>\n                                    <div>\n                                        {order.order.map(item => (\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\n                                                </div>\n                                                <div>\n                                                    <p className=\"odtitle\">{item.product.name}</p>\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\n                                                    <p>Quantité: {item.quantity}</p>\n                                                    <p>{item.price * item.quantity}€</p>\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className=\"OrderFooter\">\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                    {\n                      userInfo.isAdmin && !isOrderOpened && userList.map(user => {\n                        if(!user.isAdmin){\n                            return (                               \n\n                                <div key={user._id} className=\"Order\">\n                                    <div className=\"OrderHeader\">\n                                        UID: <a href=\"#\">{user._id}</a>\n                                    </div>\n                                    <div className=\"OrderDescription\">\n                                    <div className=\"od1\">\n                                            <p className=\"odtitle\">Prenom</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{user.firstName}</a>\n\n                                    </div>\n                                    <div className=\"od1\">\n                                            <p className=\"odtitle\">Nom</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{user.lastName}</a>\n                                    </div>\n                                    <div className=\"od1\" style={{marginRight: \"5px\"}}>\n                                            <p className=\"odtitle\" >Email</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{user.email}</a>\n                                    </div>\n                                    <div className=\"od1\">\n                                            <p className=\"odtitle\" style={{marginRight: \"20px\"}}>Voir les commandes</p>\n                                                <MdpButton style={{float: \"right\"}} outline mdpXL onClick={() => {\n                                                           // setCreate(true)\n                                                           getOrdersAdmin(user._id)\n                                                           setFirstName(user.firstName)\n                                                           setLastName(user.lastName)\n                                                            setIsOrderOpened(true)\n                                                        } }\n                                                        >\n                                                        Consulter\n                                                </MdpButton>\n\n                                    </div>\n                                    \n                                    </div>\n                                    <div>\n                                    </div>\n                                    <div className=\"OrderFooter\">\n                                        <p>Commande passée le </p>\n                                        <p>Total de la commande€</p>\n                                    </div>\n                                </div>\n                                 )\n                                }\n                        })\n                    }\n                    {\n                      userInfo.isAdmin && isOrderOpened && ordersList.map(order => {\n                            return (\n                                <div key={order._id} className=\"Order\">\n                                    <div className=\"OrderHeader\">\n                                    N° de la commande:  <a style={{marginRight: \"10px\"}} href=\"#\">{order._id}</a>\n\n                                    Utilisateur: <a  className=\"odp\" style={{color: \"white\"}}>{firstName} {lastName}</a>\n\n                                    <MdpButton style={{float: \"right\"}} outline mdpXL onClick={() => {\n                                                           setFirstName(\" \")\n                                                           setLastName(\" \")\n                                                            setIsOrderOpened(false) \n                                                            adminGetAllOrders()                                                           \n                                                        } }\n                                                        >\n                                            Retour\n                                    </MdpButton>\n                                    </div>\n                                    <div className=\"OrderDescription\">\n                                        <div className=\"od1\">\n                                            <p className=\"odtitle\">Adresse de livraison</p>\n                                            <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\n                                        </div>\n                                        <div className=\"od2\">\n                                            <p className=\"odtitle\">Type de paiement</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentType}</a>\n                                        </div>\n                                        <div className=\"od3\">\n                                            <p className=\"odtitle\" >Statut du paiement</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{order.paymentStatus}</a>\n                                        </div>\n                                        <div className=\"od3\">\n                                            <p className=\"odtitle\" >Statut de la livraison</p>\n                                            <a className=\"odp\" style={{color: \"white\"}}>{ order.isOrderCompleted ? \"livré le 12/01/2021\" : order.paymentStatus }</a>\n                                        </div>\n                                    \n                                    </div>\n                                    <div>\n                                        {order.order.map(item => (\n                                            <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\n                                                <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\n                                                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.imageUrl}/>\n                                                </div>\n                                                <div>\n                                                    <p className=\"odtitle\">{item.product.name}</p>\n                                                    <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\n                                                    <p>Quantité: {item.quantity}</p>\n                                                    <p>{item.price * item.quantity}€</p>\n                                                    </div>\n                                                    \n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <div className=\"OrderFooter\">\n                                        <p>Commande passée le <span>{formatDate(order.orderDate)}</span></p>\n                                        <p>Total de la commande <span>{getOrderTotal(order._id)}€</span></p>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n\n                </div>\n            </div>\n        </React.Fragment>\n    );\n    \n}\n\n\nexport default Orders","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ThankYou/index.js",["320","321","322","323","324","325","326","327","328"],"import React, { useState , useEffect} from 'react';\nimport Header from '../../components/Header/Header';\nimport './style.css';\nimport { addToCart, updateCart, getCartItems } from '../../store/actions/cartActions'\nimport { useSelector, useDispatch } from 'react-redux';\n\n\n\nconst ThankYou  = (props) => {\n\n        const queryParams = props.location.search.split(\"?\")[1];\n        const orderId = queryParams.split(\"=\")[1];\n\n        const cart = useSelector(state => state.cart);\n        const { cartItem, totalAmount, cartCount} = cart\n\n        const userSignin = useSelector(state => state.userSignin);\n        const { loading, userInfo, error } = userSignin;\n        const dispatch = useDispatch()\n\n        useEffect(() => {\n\n            if(userInfo){\n            dispatch(getCartItems())\n            }\n        }, [])\n\n        return (\n            <div>\n                <Header />\n                <div className=\"Content\">\n                    <div className=\"ThankyouPage\">\n                       <h1>Merci pour votre commande</h1>\n                       <p className=\"OrderId\">L'identifiant de votre commande est: {orderId.toLocaleUpperCase()}</p>\n                       <p className=\"SmallText\"> Vous recevrez bientôt un mail de confirmation </p>\n                    </div>\n                </div>\n            </div>\n        );\n    \n\n}\n\nexport default ThankYou;","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Signup/index.js",["329","330"],"import './style.css';\nimport Logo from './MEND.png';\nimport MobileTypeInput from '../../components/UI/MobileTypeInput'\nimport SubmitGradientButton from '../../components/UI/SubmitGradientButton'\nimport React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { register } from '../../store/actions/userActions'\nimport Error from '../../components/Error';\n\nconst Signup = (props) => {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repassword, setRepassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('')\n  const [isError, setIsError]  = useState(false)\n  const userRegister = useSelector(state => state.userRegister);\n  const { loading, userInfo, error } = userRegister;\n \n  //const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n  const dispatch = useDispatch();\n\n \n\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push('/login');\n    }\n    console.log(\"user data: \"+JSON.stringify(userInfo))\n    console.log(\"error: \"+JSON.stringify(error))\n    return () => {\n      //\n    };\n  }, [userInfo])\n  \n\n   const signupHandler = (e) => {\n        e.preventDefault()\n\n        if(firstName === ''){\n            setIsError(true)\n            setErrorMessage('Enter First Name')\n            return\n        }\n        if(lastName === ''){\n            setIsError(true)\n            setErrorMessage('Enter Last Name')\n            return\n        }\n\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\n        if(!emailPattern.test(email)){\n            setIsError(true)\n            setErrorMessage('Invalid Email Address')\n            return\n        }\n\n        if(email === ''){\n            setIsError(true)\n            setErrorMessage('Enter email')\n            return\n        }\n        if(password === ''){\n            setIsError(true)\n            setErrorMessage('Enter password')\n            return\n        }\n        if(repassword === ''){\n            setIsError(true)\n            setErrorMessage('Confirm password')\n            return\n        }\n        if(password !== repassword){\n            setIsError(true)\n            setErrorMessage('Password dosent match')\n            return\n        }\n        dispatch(register(firstName, lastName, email, password))\n        \n        if(!error){\n            props.history.push('/login');\n        }\n    }\n\n  return (\n    <div className=\"LoginContainer\" style={{marginBottom: \"33px\"}}>\n        <div className=\"WelcomeText\">\n            <h3>Créer un compte</h3>\n        </div>\n          {loading && <div>Loading...</div>}\n          {error && <div>{error}</div>}\n        <img src={Logo} alt=\"logo\" height=\"80\" width=\"300\"/> \n        <div className=\"LoginWrapper\">\n            <form onSubmit={signupHandler} autoComplete=\"off\">\n\n                <div style={{display: 'flex', justifyContent: 'space-between'}}>\n                    <div style={{width: '49%'}}>\n                        <MobileTypeInput \n                            type=\"text\"\n                            placeholder=\"Nom\"\n                            value={firstName}\n                            textChange={(e) => setFirstName(e.target.value)}\n                            name=\"firstName\"\n                        />\n                    </div>\n                    <div style={{width: '49%'}}>\n                        <MobileTypeInput \n                            type=\"text\"\n                            placeholder=\"Prenom\"\n                            value={lastName}\n                            textChange={(e) => setLastName(e.target.value)}\n                            name=\"lastName\"\n                        />\n                    </div>\n                </div>\n                \n                \n                <MobileTypeInput \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    value={email}\n                    textChange={(e) => setEmail(e.target.value)}\n                    name=\"email\"\n                />\n                <MobileTypeInput \n                    type=\"password\"\n                    placeholder=\"Mot de passe\"\n                    value={password}\n                    textChange={(e) => setPassword(e.target.value)}\n                    name=\"password\"\n                />\n                <MobileTypeInput \n                    type=\"password\"\n                    placeholder=\"Confirmation de mot de passe\"\n                    value={repassword}\n                    textChange={(e) => setRepassword(e.target.value)}\n                    name=\"repassword\"\n                />\n                \n                <Error>\n                    {errorMessage}\n                </Error>\n\n                <SubmitGradientButton \n                    label=\"S'inscrire\"\n                    style={{marginTop: '30px'}}\n                />\n            </form>\n        </div>\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\n            <Link to=\"/login\">Se connecter</Link>\n            <Link to=\"/forget-password\">Mot de passe oublié ?</Link>\n        </div>\n        \n        \n    </div>\n)\n\n}\n\n\nexport default Signup\n\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/ForgetPassword/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/Header.js",["331","332","333","334","335","336","337","338"],"\nimport './style.css';\nimport TopHeader from './TopHeader/TopHeader';\nimport MainHeader from './MainHeader/MainHeader';\nimport BottomHeader from './BottomHeader/BottomHeader'\n\nimport { addToCart, updateCart, getCartItems} from '../../store/actions/cartActions'\nimport React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout, update } from '../../store/actions/userActions';\n\nconst  Header = (props) =>  {\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin;\n  const cart = useSelector(state => state.cart);\n  const { cartItem, totalAmount, cartCount} = cart\n  const dispatch = useDispatch();\n \n\n  useEffect(() => {\n    dispatch(getCartItems(userInfo))\n    \n  }, [])\n \n  const handleLogout = () => {\n        dispatch(logout());\n        props.history.push(\"/\");\n    }\n\n    const cartCounter = userInfo ? cartCount : '';\n\n    return (\n        <header className=\"Header\">\n            <TopHeader logout={handleLogout} />\n            <MainHeader cartCount={cartCounter} />\n            <BottomHeader />\n        </header>\n    );\n    \n    \n}\n\nexport default Header","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/Products/Products.js",["339","340","341","342"],"\nimport './style.css';\nimport Product from './Product';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux'\nimport {usePath} from 'hookrouter'\n\nimport {listCategories, listProducts} from '../../../store/actions/productActions'\nimport {MdpButton} from '../../UI/MdpStyledComponents'\nimport Widget from '../../Widgets/Widget'\nimport IdleTimerContainer from '../../../containers/IdleTimerContainer/IdleTimerContainer'\n\n\n\nconst Products = (props) => {\n\n    const [title, setTitle] = useState('Les produits')\n    const [slug, setSlug] = useState('')\n    const [filter, setFilter] = useState(1)\n    const productList = useSelector((state) => state.productList)\n    const {loading, products} = productList\n\n    const categoryList = useSelector((state) => state.categoryList)\n    const {categories} = categoryList\n    const url = usePath()\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n              \n        dispatch(listProducts(slug, filter))\n        dispatch(listCategories())\n        \n        return () => {\n          //\n        }\n      }, [slug, filter, url])\n\n  \n    return (\n\n        <div className=\"Content\">\n                <div className=\"ContentTitle\">\n                     <h2 className=\"CategoryTitle\">{title}</h2>\n                </div>\n                <div className=\"ContentBody\">\n                    <div className=\"SideMenu\">\n                        <h3 className=\"SideMenuTitle\">Filtres</h3>\n                        <div className=\"Filter\">\n                            <p className=\"FilterTitle\">Categories</p>\n                            <ul>\n                                {categories &&\n                                    categories.map((value) => ( \n                                    <li key={value._id}>\n                                    <Link to={`/products/${value.slug}`} onClick={() => {\n                                             \n                                            setSlug(value.slug)\n                                            setTitle(value.name)\n            \n                                    } }>{value.name}\n                                    </Link>\n                                   \n                                    </li>))\n                                    \n                                }\n                            </ul>\n                        </div>\n                        \n                        <div className=\"Filter\" style={{marginBottom: \"6px\"}}>\n       \n                            <p className=\"FilterTitle\">Prix</p>\n                            <div>\n                                <MdpButton outline mdpXLTRI onClick={() => setFilter(1)} >Tri croissant</MdpButton>\n                            </div>\n                            <div>\n                                <MdpButton outline mdpXLTRI onClick={() => setFilter(-1)}>Tri décroissant</MdpButton>\n                            </div>\n                            \n                        </div>\n                        <Widget/>\n                    \n                    </div>\n                    \n                    <div className=\"MainContent\">\n\n                    <div className=\"ProductArea\">\n                        {\n                            products.map(product => <Product\n                                key={product._id}\n                                id={product._id}\n                                name={product.name}\n                                price={product.price}\n                                description={product.description}\n                                imageUrl={product.imageUrl}\n                                slug={product.slug}\n                            />)\n                        }\n                        \n                    </div>\n\n                        \n                    </div>\n\n                </div>\n               \n        </div>\n\n        \n    )\n    \n}\n\n\nexport default Products",["343","344"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Products/ProductsScreen.js",["345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport axios from 'axios';\nimport {\n  saveProduct,\n  listProducts,\n  deleteProduct,\n  listCategories\n} from '../../store/actions/productActions'\n\nimport './style.css';\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\n\nconst ProductsScreen = (props) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [imageUrl, setImageUrl] = useState(null);\n  const [category, setCategory] = useState('ebooks');\n  const [stock, setStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [slug, setSlug] = useState('');\n  const [create, setCreate] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [deleteItem, setDeleteItem] = useState(false);\n  const [delProduct,  setDelProduct] = useState(null)\n  const [listOfProducts,  setListOfProducts] = useState(null)\n\n  \n\n  const userSignin = useSelector(state => state.userSignin);\n  const {userInfo, error } = userSignin\n  \n  const productList = useSelector((state) => state.productList)\n  const {loading, products} = productList\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const {categories} = categoryList\n\n  const productSave = useSelector((state) => state.productSave)\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave,\n  } = productSave;\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = productDelete;\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n    dispatch(listProducts('', 1))\n    dispatch(listCategories())\n    setList()\n\n  }, [successSave, successDelete])\n\n  const openModal = (product) => {\n    setModalVisible(true);\n    setId(product._id);\n    setName(product.name);\n    setPrice(product.price);\n    setDescription(product.description);\n    setSlug(product.slug)\n    setImageUrl(product.imageUrl);\n\n    categories.map((cat) => {\n      if(cat.name==product.category){\n        setCategory(cat._id)\n\n      }}\n    )\n    setStock(product.stock);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    console.log(\"aaaaa  aaaaaaaaaa\"+category)\n    console.log(\"aaaaa \"+JSON.stringify(categories))\n\n    var myCategory = \"\"\n\n    if(create){\n      categories.map((cat) => {\n        if(cat.name==category){\n          setCategory(cat._id)\n          myCategory = cat._id\n          console.log(\"aaaaa \"+cat._id)\n  \n  \n        }}\n      )\n    }else{\n      myCategory = category\n    }\n\n   \n    console.log(\"aaaaa \"+category + \" \"+myCategory)\n    dispatch(\n      saveProduct({\n        _id: id,\n        name,\n        price,\n        imageUrl,\n        myCategory,\n        stock,\n        description,\n        slug,\n        create\n      }, userInfo.token)\n    )\n    dispatch(listCategories())\n    dispatch(listProducts('', 1))\n    setList()\n    console.log(\"aaaaa \"+category + \" \"+myCategory)\n  }\n\n  //Dialog box for delete confirmation\n  const Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  })\n\n  const deleteHandler = () => {\n\n    console.log(JSON.stringify(delProduct))\n    dispatch(deleteProduct(delProduct))\n    setDelProduct(null)\n    dispatch(listCategories())\n    dispatch(listProducts('', 1))\n    setList()\n  \n  }\n\n\n\n    const setList = () => {\n\n      var listOfProd = []\n      products.map((produit) => {\n        console.log(\"insde \"+produit)\n    \n    \n          categories.map((cat) => {\n            if (cat._id == produit.category){\n              produit[\"category\"] = cat.name\n              listOfProd.push(produit)\n              console.log(\"insde 2\"+listOfProd)\n    \n            }\n          })\n        })\n\n      setListOfProducts(listOfProd)\n    }\n\n\n  \n  return (\n    <div className=\"Content\">\n    <div className=\"Card\">\n      <div className=\"product-header\">\n        <h4>Liste des produits</h4>\n        <MdpButton outline mdpXL onClick={() => {\n            setCreate(true)\n            openModal({})\n        } }\n        >\n         Ajouter\n        </MdpButton>\n      </div>\n\n      {modalVisible && (\n        <div className=\"form\">\n          <form  onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n              <li>\n                <h2>Créer un produit</h2>\n              </li>\n              <li>\n                { loadingSave && <div style={{color: \"green\"}}>Loading...</div> }\n                { errorSave && <div style={{color: \"red\"}}>{errorSave}</div> }\n              </li>\n\n              <li>\n                <label htmlFor=\"name\">Nom</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  id=\"name\"\n                  onChange={(e) => setName(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"price\">Prix</label>\n                <input\n                  type=\"number\"\n                  name=\"price\"\n                  value={price}\n                  id=\"price\"\n                  onChange={(e) => setPrice(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"imageUrl\">Image</label>\n                <input\n                  type=\"file\"\n                  name=\"imageUrl\"\n                  id=\"imageUrl\"\n                  onChange={(e) => setImageUrl(e.target.files[0])}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"category\">Catégorie</label>\n                <select name=\"categories\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                    {categories.map((cat) => {\n                        return <option key={cat._id} value={cat._id}>{cat.name}</option>\n                    })}\n                </select>\n              </li>\n              <li>\n                <label htmlFor=\"stock\">Quantité</label>\n                <input\n                  type=\"number\"\n                  name=\"stock\"\n                  value={stock}\n                  id=\"stock\"\n                  onChange={(e) => setStock(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"description\">Description</label>\n                <textarea style={{height: \"100px\"}}\n                  name=\"description\"\n                  value={description}\n                  id=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </li>\n              <li style={{flexDirection: \"row\"}}>\n              <MdpButton outline mdpXL style={{marginRight: \"72px\" }}\n                  onClick={(e) => {\n                    e.preventDefault()\n                    setModalVisible(false)\n                    dispatch(listCategories())\n                    dispatch(listProducts('', 1))\n                  }}\n                >\n                  Annuler\n                </MdpButton>\n                <MdpButton type=\"submit\" outline mdpXL style={{marginLeft: \"82px\" }}>\n                  {create ? 'Enregistrer' : 'Sauvegarder'}\n                </MdpButton>\n              </li>\n            </ul>\n          </form>\n        </div>\n      )} \n\n       {openDialog && (\n       <div style={{marginBottom: \"8px\"}} className=\"form\">\n       <div className=\"dial\">\n         <ul className=\"form-container\">\n           <li style={{textAlign: \"center\"}}>\n             <h2>Information du produit</h2>\n           </li>\n           <li>\n             { loadingDelete && <div style={{color: \"green\"}}>Loading...</div> }\n             { errorDelete && <div style={{color: \"red\"}}>{errorDelete}</div> }\n           </li>\n\n           <li>\n\n          <div style={{display: \"flex\"}}>\n\n            <img style={{ boxShadow: \"2px 1px rgba(0, 0, 255, .2)\"}} src={delProduct.imageUrl} alt=\"\" height=\"110\" width=\"100\"/>          \n            \n            <div className=\"ProductDetails\">\n                  <p className=\"ProductTitle\">{delProduct.name}</p>\n                  <p className=\"ProductPrice\">{delProduct.price}€</p>\n            </div>\n\n          </div>\n\n          <div className=\"ProductDescription\">\n              <h3 style={{marginTop: \"17px\"}}>Description</h3>\n              <div className=\"BreadCrumb\">\n              <small>{delProduct.description}</small>\n              </div>\n\n              <h4 style={{marginTop: \"18px\"}}>Catégorie</h4>\n              <div className=\"BreadCrumb\">\n              <small>      \n                <p>{delProduct.category}</p>\n              </small>\n              </div>\n              <h4 style={{marginTop: \"18px\"}}>NB</h4>\n              <div className=\"BreadCrumb\">\n              <p style={{color: \"red\", fontSize: \"12px\"}}> Attention, la suppression est une action irreversible</p>\n              </div>\n            \n          </div>\n              \n           </li>\n           <li style={{flexDirection: \"row\"}}>\n           <MdpButton outline mdpXLContact style={{marginRight: \"72px\" }}\n               onClick={(e) => {\n                 e.preventDefault()\n                 setOpenDialog(false)\n                 dispatch(listCategories())\n                 dispatch(listProducts('', 1))\n               }}\n             >\n               Annuler\n             </MdpButton>\n             <MdpButton \n              onClick={() => {\n                deleteHandler()\n                setOpenDialog(false)\n              }}\n             \n             outline mdpXLContact style={{marginLeft: \"82px\" }}>\n             <i className=\"fas fa-trash\" style={{marginRight: \"3px\"}}></i>&nbsp;\n                supprimer\n             </MdpButton>\n           </li>\n         </ul>\n       </div>\n     </div>\n        )}\n\n      <div className=\"product-list\">\n        <table className=\"table\">\n          <thead className=\"thead\">\n            <tr>\n              <th>Titre</th>\n              <th>Item</th>\n              <th>Description</th>\n              <th>Prix</th> \n              <th>En stock</th> \n              <th>Catégorie</th>\n              <th>Date</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {listOfProducts && listOfProducts.map((product) => (\n              <tr key={product._id}>\n                <td>{product.name}</td>\n                <td><img style={{ boxShadow: \"2px 1px rgba(0, 0, 255, .2)\"}} src={product.imageUrl} alt=\"\" height=\"50\" width=\"40\"/> </td>\n                <td>{product.description.length > 20 ? product.description.substring(0, 20) + \"...\" : product.description}</td>\n                <td>{product.price}€ </td>\n                <td>{product.stock} </td>\n                <td>{product.category}</td>\n                <td>{product.createdAt.split(\"T\")[0]}</td>\n                <td>\n                  <MdpButton outline mdpS mdpEdit\n                  onClick={() => {\n                    setCreate(false)\n                    openModal(product)\n                    window.scrollTo(0, 0);\n                  }}\n                  >\n                    Editer\n                  </MdpButton>{' '}\n                  <MdpButton\n                    outline\n                    mdpS\n                    mdpDelete\n                    onClick={() => { \n                      setDelProduct(product)\n                      setOpenDialog(true)\n                      window.scrollTo(0, 0);\n                    }}\n                  >\n                    Consulter  / Supprimer \n                  </MdpButton>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  \n</div>)\n            }\n\n\n\n\nexport default ProductsScreen\n\n/** <Dialog\n        open={openDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={() => {\n         setOpenDialog(false)\n        }}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Suppression d'un produit\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Cette action est irreversible. Êtes-vous sur de vouloir de supprimer ce produit ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <MdpButton outline mdpXL onClick={\n            (e) => { \n              e.preventDefault()\n              setDeleteItem(false)\n              setDelProduct(null)\n              dispatch(listProducts('', 1))\n              dispatch(listCategories())\n              setList()\n\n              }} color=\"primary\">\n            Non\n          </MdpButton>\n          <MdpButton outline mdpXL onClick={\n            (e) => {\n              e.preventDefault()\n              setDeleteItem(true)\n              deleteHandler()\n              dispatch(listProducts('', 1))\n              dispatch(listCategories())\n              setList()\n               }} color=\"primary\">\n            Oui\n          </MdpButton>\n        </DialogActions>\n      </Dialog> */\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/productConstants.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/userConstants.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/cartConstants.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/constants/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/actions/cartActions.js",["367","368","369","370","371","372"],"import Axios from \"axios\";\nimport Cookie from \"js-cookie\";\nimport { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART, CART_ADD_ITEM } \nfrom \"../../constants/cartConstants\"\nimport { base_url } from '../../constants/index'\n\n\nexport const addToCart = (userInfo, cartItems) => async (dispatch, getState) => {\n    try {\n        const { data } = await Axios.post(`${base_url}/cart/add`, cartItems, {\n        headers: {\n          Authorization: ' Bearer ' + userInfo.token\n        }\n      })\n      dispatch({\n        type: ADD_TO_CART,\n        cartItem: cartItems\n       })\n     \n      const { cart: { cartItem } } = getState();\n      Cookie.set(\"cartItem\", JSON.stringify(cartItem));\n  \n    } catch (error) {\n        console.log(error);\n    }\n  }\n\nexport const getCartItems = (userInfo) => async (dispatch, getState) => {\n\n        try{\n\n            const data = await Axios.post(`${base_url}/cart/user/${userInfo.userId}`, userInfo, {\n                headers: {\n                  Authorization: ' Bearer ' + userInfo.token\n                }\n              })\n\n              console.log(\"get cart items from cartActions \"+JSON.stringify(data.data.message[0]))\n           \n            dispatch({\n                type: GET_CART_DETAILS,\n                cartItems: data.data.message[0]\n            })\n            const { cart: { cartItem } } = getState()\n            Cookie.set(\"cartItem\", JSON.stringify(data.data.message[0]))\n      \n        }catch(error){\n            console.log(error);\n        }\n        \n    }\n\n\nexport const updateCart = (token, userId, product) => async (dispatch, getState) => {\n\n   const product1 = {\n        userId: userId,\n        productId: product.productId,\n        quantity: product.quantity,\n        total: product.total\n    }\n\n    try {\n        const { data } = await Axios.put(`${base_url}/cart/update/quantity`, product1, {\n        headers: {\n          Authorization: ' Bearer ' + token\n        }\n      })\n      \n        dispatch({\n            type: UPDATE_CART,\n            item: product\n        });\n     \n      const { cart: { cartItem } } = getState();\n      Cookie.set(\"cartItem\", JSON.stringify(cartItem));\n  \n    } catch (error) {\n        console.log(error);\n    }\n   \n}\nexport const clearCart = (userInfo, product) => async (dispatch, getState) => {\n\n    const product1 = {\n         userId: userInfo.userId,\n         productId: product.productId\n     }\n\n     console.log(userInfo.token)\n \n     try {\n         const { data } = await Axios.put(`${base_url}/cart/delete/${userInfo.userId}`, product1, {\n         headers: {\n           Authorization: ' Bearer ' + userInfo.token\n         }\n       })\n\n   \n     } catch (error) {\n         console.log(error);\n     }\n    \n    }","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/actions/productActions.js",["373"],"\nimport {\n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_SAVE_REQUEST,\n    PRODUCT_SAVE_SUCCESS,\n    PRODUCT_SAVE_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_REVIEW_SAVE_REQUEST,\n    PRODUCT_REVIEW_SAVE_FAIL,\n    PRODUCT_REVIEW_SAVE_SUCCESS,\n  } from '../../constants/productConstants'\n  \n  import axios from 'axios'\n  import Axios from 'axios'\n  import { base_url } from '../../constants/index'\n\n\n  //retrieve product for admin dashboard\n  const listProducts = (categorySlug = '', filter) => async (dispatch) => {\n     \n        if(categorySlug == ''){\n          try{\n            dispatch({ type: PRODUCT_LIST_REQUEST });\n            const { data } = await axios.get(`${base_url}/products/${filter}`)\n            console.log(`${base_url}/products/${filter}`)\n      \n            dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data.message })\n            console.log(\"\\n\\n\")\n            console.log(\"get products from ProductActions: \" + JSON.stringify(data.message))\n            console.log(\"\\n\\n\")\n\n\n          }\n          catch (error) {\n            dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message })\n            console.log(\"problème de récupération des catégories \"+error)\n          }\n        }\n        else{\n          try{\n\n\n          dispatch({ type: PRODUCT_LIST_REQUEST });\n          const { data } = await axios.get(`${base_url}/products/${categorySlug}/${filter}`)\n          console.log(`${base_url}/products/${categorySlug}/${filter}`)\n      \n          dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data.message })\n          console.log(\"\\n\\n\")\n          console.log(\"get products from ProductActions: \" + JSON.stringify(data.message))\n          console.log(\"\\n\\n\")\n          }catch (error) {\n            dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message })\n            console.log(\"problème de récupération des catégories \"+error)\n          }\n        }\n\n\n  \n  }\n  \n  //retrieve category\n  const listCategories = () => async (dispatch) => {  \n    try {\n      dispatch({ type: CATEGORY_LIST_REQUEST })\n      const { data } = await axios.get(`${base_url}/category`)\n      console.log(\"\\n\\n\")\n      console.log(\"get categories from ProductActions: \" + JSON.stringify(data.message))\n      console.log(\"\\n\\n\")\n\n      dispatch({ type: CATEGORY_LIST_SUCCESS, payload: data.message })\n    } catch (error) {\n      dispatch({ type: CATEGORY_LIST_FAIL, payload: error.message })\n      console.log(\"problème de récupération des catégories \"+error.message)\n    }\n  }\n\n  //Create product or update product\n  const saveProduct = (product) => async (dispatch, getState) => {\n    \n    try {\n        const {\n            userSignin: { userInfo },\n          } = getState();\n        \n        if(userInfo.isAdmin){\n        dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product })\n        \n        console.log(\"ia sadmin &&&&&&& \"+JSON.stringify(userInfo))\n\n        const products = new FormData()\n        products.append(\"id\", product._id)\n        products.append(\"name\", product.name)\n        products.append(\"price\", product.price)\n        products.append(\"description\", product.description)\n        products.append(\"imageUrl\", product.imageUrl)\n        products.append(\"stock\", product.stock)\n        products.append(\"category\", product.myCategory)\n\n        console.log(\"bbbbbbbb \"+product.myCategory)\n\n        if (product.create) {\n            const { data } = await Axios.post(`${base_url}/products/create`, products, {\n            headers: {\n              Authorization: 'Bearer ' + userInfo.token\n            },\n            })\n\n            dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data.message });\n\n        } else {\n          console.log(\"token: \"+userInfo.token)\n            const { data } = await Axios.put(`${base_url}/products/update/${product._id}`,  products, {\n                headers: {\n                  Authorization: 'Bearer ' + userInfo.token\n                },\n            }\n            )\n\n            dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data.message })\n\n        }\n        }\n    } catch (error) {\n        dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message })\n        console.log(\"not admin \"+error)\n        }\n  };\n\n\n\n  //get prodcut detail\n  const detailsProduct = (categorySlug, productSlug) => async (dispatch) => {\n    try {\n      \n      dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productSlug })\n      const { data } = await axios.get(`${base_url}/products/detail/${categorySlug}/${productSlug}`);\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data.message })\n      console.log(\"detail prod*********\"+JSON.stringify(data.message))\n      \n    } catch (error) {\n      dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\n    }\n  }\n \n  const deleteProduct = (product) => async (dispatch, getState) => {\n    try {\n      console.log('start deleteig **********')\n      const {\n        userSignin: { userInfo },\n      } = getState();\n    \n    if(userInfo.isAdmin){\n      dispatch({ type: PRODUCT_DELETE_REQUEST, payload: product._id })\n      const { data } = await axios.delete(`${base_url}/products/delete/${product._id}`, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        },\n      })\n      console.log('success deleted')\n      dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true })\n    }} catch (error) {\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message })\n    }\n  }\n  \n  const saveProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n      const {\n        userSignin: {\n          userInfo: { token },\n        },\n      } = getState();\n      dispatch({ type: PRODUCT_REVIEW_SAVE_REQUEST, payload: review });\n      const { data } = await axios.post(\n        `/api/products/${productId}/reviews`,\n        review,\n        {\n          headers: {\n            Authorization: 'Bearer ' + token,\n          },\n        }\n      );\n      dispatch({ type: PRODUCT_REVIEW_SAVE_SUCCESS, payload: data });\n    } catch (error) {\n      // report error\n      dispatch({ type: PRODUCT_REVIEW_SAVE_FAIL, payload: error.message });\n    }\n  }\n\n\n  export {\n    listProducts,\n    detailsProduct,\n    saveProduct,\n    deleteProduct,\n    saveProductReview,\n    listCategories\n      }\n  \n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/store/actions/userActions.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/MainHeader/MainHeader.js",["374","375","376"],"import { Link } from 'react-router-dom'\nimport './style.css';\nimport Logo from '../../Logo';\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\nconst MainHeader = (props) => {\n  \n    const cart = useSelector(state => state.cart);\n    const { cartItem, totalAmount, cartCount} = cart\n    const userSignin = useSelector((state) => state.userSignin)\n    const { userInfo } = userSignin\n\n    return (\n        <div className=\"MainHeader\">\n            <Logo />\n            <div>\n                <div className=\"SearchOption\">\n                    <select>\n                        <option>Catégories</option>\n                        <option></option>\n\n                    </select>\n                    <input type=\"text\" />\n                    <button>\n                        <i className=\"fas fa-search\"></i>\n                    </button>\n                </div>\n            </div>\n            <div>\n                <Link to=\"/cart\"><i className=\"fas fa-shopping-cart\"></i>(<span style={{color: \"green\"}}>{ userInfo ? cartCount : 0 }</span>)</Link>\n                \n            </div>\n        </div>\n    );\n}\n\n\n\nexport default MainHeader","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/TopHeader/TopHeader.js",["377","378","379"],"import { Link } from 'react-router-dom';\nimport './style.css';\nimport React, { useEffect } from 'react'\nimport { logout, update } from '../../../store/actions/userActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport IdleTimerContainer from '../../../containers/IdleTimerContainer/IdleTimerContainer'\n\n\n\nconst TopHeader = (props) => {\n\n    const dispatch = useDispatch()\n    const userSignin = useSelector(state => state.userSignin);\n    const { userInfo } = userSignin\n\n    const handleLogout = () => {\n      dispatch(logout());\n    }\n\n \n    let guestAccount = <ul className=\"Dropdown Account\">\n                            <li><Link to=\"/signup\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>S'inscrire</span></Link></li>\n                            <li><Link to=\"/login\"><i className=\"fas fa-user\"></i>&nbsp;&nbsp;<span>Se connecter</span></Link></li>\n                        </ul>;  \n    \n    if(userInfo){\n\n        if(userInfo.isAdmin==true){\n            guestAccount = <ul className=\"Dropdown Account\">\n            <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\n            <li><Link to=\"/manageusers\"><i className=\"fas fa-users\"></i>&nbsp;&nbsp;<span>Utilisateurs</span></Link></li>\n            <li><Link to=\"/manageproducts\"><i className=\"fas fa-book\"></i>&nbsp;&nbsp;<span>Produits</span></Link></li>\n            <li><Link to=\"\" onClick={() => handleLogout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\n        </ul>;\n        }else{\n            guestAccount = <ul className=\"Dropdown Account\">\n            <li><Link to=\"/orders\"><i className=\"far fa-clipboard\"></i>&nbsp;&nbsp;<span>Commandes</span></Link></li>\n            <li><Link to=\"\" onClick={() => handleLogout()}><i className=\"fas fa-sign-out-alt\"></i>&nbsp;&nbsp;<span>Se déconnecter</span></Link></li>\n        </ul>;\n        }\n        \n        }\n\n        return (\n            <div className=\"TopHeader\">\n                <div className=\"SocialMediaIcons\">\n                <ul className=\"TopMenu\">\n                    <i className=\"fab fa-facebook-f\"></i>\n                    <i className=\"fab fa-google-plus-g\"></i>\n                    <i className=\"fab fa-instagram\"></i>\n                    <i className=\"fab fa-youtube\"></i>\n                </ul>\n                </div>\n                <IdleTimerContainer  idle={props} >\n                </IdleTimerContainer> \n                <div>\n                    <ul className=\"TopMenu\">\n                        <li className=\"MenuItem\">\n                            <i className=\"fas fa-user-circle\" ></i>&nbsp;&nbsp;\n                            <Link to=\"/account\">{userInfo ? userInfo.firstName: 'Mon compte'}</Link>\n        \n                            {guestAccount}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        )\n    \n}\n\n\nexport default TopHeader;","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Header/BottomHeader/BottomHeader.js",["380","381","382","383"],"import { NavLink, Link } from 'react-router-dom';\nimport './style.css';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {listCategories, listProducts} from '../../../store/actions/productActions'\n\n\nconst BottomHeader = (props) => {\n\n    const categoryList = useSelector((state) => state.categoryList)\n    const {categories} = categoryList\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(listCategories())\n\n    }, [])\n   \n    \n\n\n    const categoryTree = (cate) => {\n\n        var categoriesAr = [];\n\n            if(cate){\n\n\n        cate.map((value) => {\n            categoriesAr.push(\n                    <li key={value.slug} className=\"Column\">\n                        <NavLink to={`/products/${value.slug}`} onClick={() => {\n                                             \n                                            // setSlug(value.slug)\n                                             //setTitle(value.name)\n             \n                                     } }><span className=\"cat\">{value.name}</span>\n                                     </NavLink>\n                    </li>\n            )\n        })\n        }\n\n        return categoriesAr;\n    }\n\n        const cat = categoryTree(categories);\n    \nconsole.log(\"ajahahahaha: \"+ cat)\n        return (\n            <div className=\"BottomHeader\">\n                <ul className=\"Menu\">\n                    <li className=\"MenuItem\"><Link to=\"/\"><i className=\"fas fa-home\"></i></Link></li>\n                    <li className=\"MenuItem\">\n                        <Link to=\"/products\" className=\"MenuItemElement\">Boutique&nbsp;<i className=\"fas fa-caret-down\"></i></Link>\n                        \n                       {/**<ul className=\"Dropdown\">\n                        {cat}\n                        \n                        </ul> \n                                            <li className=\"MenuItem\"><Link to=\"/products\">Produits</Link></li>\n*/} \n                    </li>\n                    <li className=\"MenuItem\"><Link to=\"/about\">A propos</Link></li>\n                    <li className=\"MenuItem\"><Link to=\"/contact\">Contact</Link></li>\n                    \n                </ul>\n    \n            </div>\n        );\n}\n\n\n\nexport default BottomHeader;",["384","385"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/PlaceOrder/AddressForm/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/PlaceOrder/DeliveryAddress/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/CartPrice/index.js",["386","387","388","389","390","391","392","393","394"],"import React, { useEffect, useState } from 'react';\nimport './style.css';\nimport  { Redirect } from 'react-router-dom'\nimport { addToCart, updateCart, getCartItems} from '../../store/actions/cartActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\n\n\n\nconst CartPrice = (props) => {\n\n\n  const cart = useSelector(state => state.cart);\n  const { cartItem, totalAmount, cartCount} = cart\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin;\n\n  const [qty, setQty] = useState(0)\n\n  const dispatch = useDispatch();\n\n\n  useEffect(() => {\n      dispatch(getCartItems())\n\n  }, [])\n\n  const placeOrderNow  = () => {\n    if(!userInfo){\n        props.history.push('/login');\n        return;\n    }else{\n        props.red.history.push('/place-order')\n    }\n    } \n\n\n    return (\n        <div className=\"PriceWrapper\">\n            {/* show price */}\n            <div className=\"CardTitle\">\n                <h3>Détails de la commande</h3>\n            </div>\n            <div className=\"CardBody\">\n                <div className=\"FinalBilling\">\n                    <div className=\"Row\">\n                        <p>Prix ({cartCount})</p>\n                        <p>{totalAmount}€</p>\n                    </div>\n                    <div className=\"Row\">\n                        <p>Livraison</p>\n                        <p>0€</p>\n                    </div>\n                    <hr />\n                    <div className=\"Row\">\n                        <h4>Total à Payer</h4>\n                        <h4>{totalAmount}€</h4>\n                    </div>\n                    <div className=\"Row\" style={{marginLeft: \"48px\", marginTop: \"63px\"}}>\n                        <MdpButton outline mdpXLContact onClick={() => placeOrderNow()}>Passer la commande</MdpButton>\n                    </div>\n                </div>\n                \n            </div>\n        </div>\n    );\n\n\n}\n\n\nexport default CartPrice","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Error/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/Cart/CartItem/index.js",["395","396","397","398","399","400","401","402","403"],"import React, { useEffect, useState } from 'react';\nimport QuantityControl from '../../../components/QuantityControl';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport './style.css';\nimport {\n    clearCart } from '../../../store/actions/cartActions'\nimport {MdpButton} from '../../../components/UI/MdpStyledComponents'\nimport { addToCart, updateCart, getCartItems} from '../../../store/actions/cartActions'\n\n\n\nconst CartItem = (props) => {\n\n    const dispatch = useDispatch();\n    const userSignin = useSelector(state => state.userSignin);\n    const { loading, userInfo, error } = userSignin;\n\n    const cart = useSelector(state => state.cart);\n   const { cartItem, totalAmount, cartCount} = cart\n\n\n    useEffect(() => {\n\n        if(userInfo){\n            dispatch(getCartItems(userInfo))\n        }\n      }, [props])\n\n    const removeFromCartHandler = () => {\n        const product = {\n                    productId: props.productId,\n                    quantity: props.quantity,\n                    total: props.total\n\n                    }\n        dispatch(clearCart(userInfo, product));\n        dispatch(getCartItems(userInfo))\n\n      }\n\n\n    return (\n        <div className=\"SingleItem\">\n            <div className=\"ItemWrapper\">\n                <div className=\"ItemImage\" style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}}>\n                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={props.imageUrl} alt=\"\" />\n                </div>\n                <div className=\"ItemDetails\">\n                    <p className=\"ItemName\">{props.name}</p>\n                    <p className=\"ItemPrice\">{props.total}€</p>\n                </div>\n            </div>\n            <div className=\"CartActionButtons\">\n                <QuantityControl\n                    productId={props.productId}\n                    name={props.name} \n                    quantity={props.quantity}\n                    changeQuantity={props.changeQuantity}\n                    increaseQuantity={props.increaseQuantity}\n                    decreaseQuantity={props.decreaseQuantity}\n                />\n                <MdpButton style={{marginTop: \"15px\"}} outline mdpXL  onClick={() => removeFromCartHandler()} >\n                 Supprimer\n                 </MdpButton>\n            </div>\n        </div>\n    )\n}\n\nexport default CartItem;","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/NormalInput/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/RadioButton/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/MobileTypeInput/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/SubmitGradientButton/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/Products/Product/index.js",["404","405","406"],"import React from 'react';\nimport { Link, withRouter, useHistory } from 'react-router-dom'\nimport {usePath} from 'hookrouter';\nimport './styles.css'\n\nconst Product = props => {\n\n    const path = usePath()\n    //const url = path === '/' ? '/products/all' : path\n    const url = '/products/all'\n  \n    \n    return (\n        <Link to={`${url}/${props.slug}`}>         \n            <div className=\"Product\">\n                <div className=\"ProductImage\">\n                    <img  src={props.imageUrl} alt=\"\" />\n                </div>\n                <div className=\"ProductDetails\">\n                    <p className=\"nameP\">{props.name}</p>\n                    <p className=\"priceP\">{props.price}<span>€</span></p>\n                    <button className=\"btnP\">\n                      Consulter\n                    </button>\n                </div>\n            </div>\n        </Link>\n    );\n}\n\nexport default Product\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Logo/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/QuantityControl/index.js",["407"],"import React from 'react';\nimport './style.css';\n\nconst QuantityControl = props => {\n    return (\n        <div className=\"QunantityControl\">\n            <button onClick={(e) => {\n                if(props.quantity > 1 ){\n                    props.decreaseQuantity(e, props.productId)\n                }\n            } }>-</button>\n                <input \n                    type=\"text\" \n                    onChange={(e) => props.changeQuantity(e, props.productId)} \n                    name={props.name}\n                    value={props.quantity == 0 ? 1 : props.quantity}\n                    disabled = {true}\n                />\n            <button onClick={(e) => props.increaseQuantity(e, props.productId)\n                }>+</button>\n        </div>\n    );\n}\n\nexport default QuantityControl;","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/MdpStyledComponents.js",["408"],"import styled, {css, ThemeProvider} from 'styled-components'\nimport { colors } from './global.js'\n \n\n\nexport const MdpButton = styled.button`\n\nfont-family: 'Avenir';\ncursor: pointer;\n\n${props => props.outline && css`\n    background: none;\n  `};\n${props => props.primary && css`\n    background: ${colors.primary};\n    color: ${colors.white};\n`};\n${props => props.secondary && css`\n    background: ${colors.secondary}; \n    color: ${colors.white};\n`};\n\n${props => props.mdpXL && css`\n    width: 90px;\n    height: 28px;\n    margin-bottom: 16px;\n    padding: 0 6px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n    border: 1px solid ${colors.primary};\n    color: ${colors.primary};\n\n`};\n\n${props => props.mdpXL && css`\n    &:hover {\n        background: ${colors.primary}; \n        color: ${colors.white};\n    }\n  `}\n\n  ${props => props.mdpXLContact && css`\n    width: 190px;\n    height: 58px;\n    margin-bottom: 16px;\n    padding: 0 6px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n    border: 1px solid ${colors.primary};\n    color: ${colors.primary};\n    font-size: 12px;\n\n`};\n\n${props => props.mdpXLContact && css`\n    &:hover {\n        background: ${colors.primary}; \n        color: ${colors.white};\n    }\n  `}\n\n  ${props => props.mdpXLTRI && css`\n    width: 95%;\n    margin: 2px 5px;\n    padding: 5px 0;\n    height: 33px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n    border: 1px solid ${colors.primary};\n    color: ${colors.primary};\n\n`};\n\n${props => props.mdpXLTRI && css`\n    &:hover {\n        background: ${colors.primary}; \n        color: ${colors.white};\n    }\n  `}\n\n${props => props.mdpM && css`\n    width: 90px;\n    height: 28px;\n    margin-bottom: 16px;\n    padding: 0 6px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n`};\n${props => props.mdpM && css`\n    &:hover {\n        background: ${colors.secondary}; \n        color: ${colors.white};\n    }\n  `}\n\n${props => props.mdpS && css`\n    width: 80px;\n    height: 20px;\n    padding: 0 6px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n`};\n${props => props.mdpEdit && css`\n    width: 80px;\n    height: 20px;\n    padding: 0 6px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n    border: 1px solid ${colors.primary};\n    color: ${colors.primary};\n`};\n\n${props => props.mdpEdit && css`\n    &:hover {\n        background: ${colors.primary}; \n        color: ${colors.white};\n    }\n  `}\n\n  ${props => props.mdpDelete && css`\n    width: 80px;\n    height: 20px;\n    padding: 0 6px;\n    border-radius: 5px;\n    box-shadow: 2px 1px rgba(0, 0, 255, .2);\n    border: 1px solid ${colors.red};\n    color: ${colors.red};\n`};\n\n${props => props.mdpDelete && css`\n    &:hover {\n        background: ${colors.red}; \n        color: ${colors.white};\n    }\n  `}\n   \n`\n\n\n//Icons\nexport const MdpIcon = styled.i`\nfont-size: 18px;\nmargin-right: 16px;\n`\n\n//Form \n\nexport const MdpSharedStyles = css`\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin: 10px 0 20px 0;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nexport const MdpStyledFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  padding: 0 20px;\n`;\n\nexport const MdpStyledForm = styled.form`\n  width: 100%;\n  max-width: 400px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\n`;\n\nexport const MdpStyledInput = styled.input`\n  display: block;\n  width: 100%;\n  ${MdpSharedStyles}\n`;\n\nexport const MdpStyledTextArea = styled.textarea`\n  background-color: #eee;\n  width: 100%;\n  min-height: 100px;\n  resize: none;\n  ${MdpSharedStyles}\n`;\nexport const MdpStyledButton = styled.button`\n  display: block;\n  background-color: #f7797d;\n  color: #fff;\n  font-size: 0.9rem;\n  border: 0;\n  border-radius: 5px;\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  box-sizing: border-box;\n`;\n\nexport const MdpStyledFieldset = styled.fieldset`\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 20px 0;\n\n  legend {\n    padding: 0 10px;\n  }\n\n  label {\n    padding-right: 20px;\n  }\n\n  input {\n    margin-right: 10px;\n  }\n`;\n\nexport const MdpStyledError = styled.div`\n  color: red;\n  font-weight: 800;\n  margin: 0 0 40px 0;\n`;\n\n\n/*\n\n\nprops.theme.primary.baseColor};\n\nconst theme = {\n    primary: {\n        baseColor: \"#888\"\n    }\n}\n\n\n.Content{\n    width: 85%;\n    border-top: 3px solid #000;\n    margin: 0 auto;\n    border-left: 1px solid #eee;\n    border-right: 1px solid #eee;\n    border-bottom: 1px solid #eee;\n}\n.ContentTitle{\n    text-align: center;\n    margin: 20px 0;\n}\n.CategoryTitle{\n    letter-spacing: 2px;\n    font-size: 30px;\n    font-weight: 300;\n    text-transform: capitalize;\n}\n\n\n.ProductArea{\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.Product{\n    width: 280px;\n    border: 1px solid #cecece;\n    border-radius: 5px;\n    text-align: center;\n    margin: 0 1px 10px 0; /*changer le 1px à 10px pour pc windows mini\n    -webkit-transform: scale(0.8);\n          transform: scale(0.8);\n  -webkit-transition: all .3s ease-in-out;\n  transition: all .3s ease-in-out;  \n}\n\n.Product:hover {\n    background-color: #2b3039;\n  -webkit-transform: scale(1);\n          transform: scale(1);\n  cursor: pointer;\n}\n.Product > .ProductImage{\n    width: 80%;\n    height: 300px;\n    overflow: hidden;\n    margin: 0 auto;\n}\n.Product > .ProductImage > img{\n    width: 200px;\n    height: 300px;\n}\n\n.priceP span {\n    font-size: 12px;\n    display: inline-block;\n    vertical-align: top;\n  }\n\n.priceP {\nfont-size: 16px;\ncolor: #fe8033;\n} \n\n.btnP {\n    width: 130px;\n    height: 35px;\n    font-size: 12px;\n    border-radius: 35px;\n    background-color: #2d343e;\n    color: rgba(255, 255, 255, 0.5);\n    cursor: pointer;\n    -webkit-transition: background-color .3s ease;\n    transition: background-color .3s ease;\n  \n    margin-left: 55px;\n\n    display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-pack: center;\n      -ms-flex-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n      -ms-flex-align: center;\n          align-items: center;\n  }\n\n\n  .Product:hover .ProductDetails .btnP{\n    background-color: #fe8033;\n    font-size: 18px;\n    font-weight: 200;\n    color: #fff;\n  }\n  .Product:hover .ProductDetails .priceP{\n    font-size: 17px;\n  }\n  .Product:hover .ProductDetails .nameP{\n    font-size: 18px;\n    font-weight: 200;\n    color: #fff;\n  }\n  \n\n.ProductDetails{\n    margin: 20px 0;\n}\n\n.ContentBody{\n    display: flex;\n}\n.ContentBody .SideMenu{\n    flex: 2;\n}\n.ContentBody .MainContent{\n    flex: 8;\n}\n.SideMenu{\n    border: 1px solid #cecece;\n    margin-right: 10px;\n    box-sizing: border-box;\n}\n.SideMenu .SideMenuTitle{\n    font-size: 18px;\n    border-bottom: 1px solid #cecece;\n    padding: 5px 10px;\n}\n.Filter .FilterTitle{\n    font-size: 16px;\n    font-weight: bold;\n    padding: 5px 10px;\n}\n.SideMenu ul{\n    position: relative;\n}\n.SideMenu ul li{\n    margin-left: 10px;\n    font-size: 14px;\n}\n.SideMenu > ul > li > a:nth-of-type(1){\n    font-weight: bold;\n}\n.FilterButton{\n    width: 95%;\n    margin: 2px 5px;\n    padding: 5px 0;\n    border-radius: 3px;\n    cursor: pointer;\n    font-weight: bold;\n    font-family: 'Lato', sans-serif;\n    font-size: 12px;\n    background-color: #22402b;\n    color: white;\n}\n.FilterButton:hover{\n    background-color: black;\n    color: white;\n}\n*/\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/UI/global.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/Contact/Contact.js",["409","410","411","412","413"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Footer/Footer.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Footer/FooterContainer.js",[],["414","415"],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Icon/index.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Footer/styles/footer.js",[],"/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/Widgets/Widget.js",["416"],"import React from 'react'\nimport './style.css'\n\n\n\n\nconst Widget = (props) => {\n\n    return ( <div className=\"widgets\">\n\n\n            <iframe src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FAxel4591&\n                        tabs=timeline&width=240&height=1500&small_header=false&\n                        adapt_container_width=true&show_facepile=true&appId=480627086662809\"\n                    width=\"240\" \n                    height=\"100%\"\n                    style={{border:\"none\", overflow: \"hidden\"}} \n                    frameBorder=\"0\"\n                    allowtransparency=\"true\"\n                    scrolling=\"no\"\n                    allow=\"encrypted-media\"></iframe>\n\n            </div>\n        \n        )\n}\n\n\nexport default Widget","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/containers/IdleTimerContainer/IdleTimerContainer.js",["417","418","419","420","421","422","423","424"],"import React, {useRef, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport IdleTimer from 'react-idle-timer'\nimport { logout, update } from '../../store/actions/userActions';\nimport {MdpButton} from '../../components/UI/MdpStyledComponents'\n\n\n\n\nconst IdleTimerContainer = (props) => {\n    const idleTimerRef = useRef(null)\n    const userSignin = useSelector(state => state.userSignin);\n    const { loading, userInfo, error } = userSignin\n    const dispatch = useDispatch();\n\n    const [isIdle, setIsIdle] = useState(false)\n    const [seconds, setSeconds ] =  useState(20);\n    const [timer, setTimer] = useState(null)\n    \n    /*\n    useEffect(()=>{\n    let myInterval = setInterval(() => {\n            if (seconds > 0) {\n                setSeconds(seconds - 1);\n            }\n            if (seconds === 0) {\n                clearInterval(myInterval)\n       \n            } \n        }, 1000)\n\n        return () => clearInterval(myInterval);\n        \n    }, [])\n      */\n\n \n    const onIdle =  () => {\n\n/*\n      if(userInfo){\n\n        setIsIdle(true)\n        let myInterval = setInterval(() => {\n          if (seconds > 0) {\n              setSeconds(seconds - 1);\n\n          }\n          if (seconds === 0) {\n              clearInterval(myInterval)\n              dispatch(logout());\n              props.idle.history.push(\"/\");\n     \n          }\n      }, 1000)\n\n      setTimer(myInterval)\n\n                     \n        }else{\n       \n            console.log(\"************ User not connected ************\")\n      \n      }*/\n    \n    }\n  \n\n    return (\n      <div>\n          <IdleTimer ref={idleTimerRef} timeout = {5 * 1000} onIdle={onIdle}>\n               {isIdle && <div style={{display:\"flex\"}}>\n               <p style={{color: \"red\", fontSize: \"17px\", marginRight:\"6px\"}} >Vous serez déconnecter dans 00:{seconds}s..  </p>\n               <MdpButton \n                onClick={() => {\n                  clearInterval(timer)\n                  setIsIdle(false)\n                  setSeconds(20)             \n                }}\n             \n             outline mdpXL >\n                Annuler\n             </MdpButton>\n               </div>\n               \n\n               }\n          </IdleTimer>\n      </div>\n      \n    )\n}\n\nexport default IdleTimerContainer\n","/Users/axelmouele/NodeJS/mdp/mdpApp/client/src/components/ShopStore/About/About.js",["425","426","427","428","429","430","431","432","433","434"],"import React, { useState } from 'react';\nimport './style.css'\nimport {MdpStyledError, MdpStyledFieldset, MdpStyledButton, \n    MdpStyledTextArea, MdpStyledInput, MdpStyledForm, MdpStyledFormWrapper, MdpButton}\n    from '../../UI/MdpStyledComponents'\n\nconst About = (props) => {\n\n\n  return (\n    <div className=\"Content\">\n\n<div className=\"about\">\n    <img className=\"im\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRvnepXY_pXSetZzx76oYZqMAPlQA7OVcBRmQ&usqp=CAU\" width=\"300\" height=\"300\" />\n\n            <div>\n            \"MEND Press\" est une société d'édition de livres édifiants et inspirants.\n\n            Ses sujets d'édition portent sur la Foi Chrétienne, le Développement Personnel, le Sport, le Bien être, la Santé, les Sciences, l'Education, la Musique, les Arts, \n            la Culture, le Développement économique, l'Entrepreneuriat et les Nouvelles Technologies.<br/> <br/>\n\n            Vous êtes sur le site Internet de l'entité qui édite et publie de la littérature chrétienne \n            conforme à l'évangile du salut à travers Jésus-Christ et dont voici la mission: \n            <ul>\n            <li>édifier les membres du Corps du Christ;</li>\n            <li>encourager à faire confiance à Dieu et le servir;</li>\n            <li>partager avec le plus grand nombre ce que Dieu fait dans les vies aujourd'hui;</li>\n            <li>promouvoir les auteurs et transformer les manuscrits non édités en ouvrages.</li>\n            </ul> <br/>\n\n            Elle propose les services suivants:\n            <ul>\n            <li>porter à la connaissance des lecteurs des textes qui répondent à sa ligne éditoriale et qui l’auront convaincue;</li>\n            <li>accompagner un auteur depuis le manuscrit jusqu’à ses lecteurs;</li>\n            <li>contracter avec toute personne ou structure nécessaire à l’épanouissement des livres;</li>\n            <li>avoir des activités économiques, qu’il s’agisse de vendre ses livres sans but lucratif\n            ou de rémunérer l’auteur ainsi que toute personne ou structure avec laquelle un contrat marchand est\n            passé;</li>\n            <li>organiser ou participer à toute sorte d’action ou événement culturel (par exemple\n            lecture publique, dédicaces, conférences, salon ou festival…) favorisant la diffusion du livre.</li>\n            </ul> \n            </div>\n</div>\n\n</div>\n  );\n}\n\nexport default About;\n",["435","436"],{"ruleId":"437","severity":1,"message":"438","line":10,"column":1,"nodeType":"439","messageId":"440","endLine":21,"endColumn":5},{"ruleId":"441","replacedBy":"442"},{"ruleId":"443","replacedBy":"444"},{"ruleId":"445","severity":1,"message":"446","line":7,"column":8,"nodeType":"447","messageId":"448","endLine":7,"endColumn":22},{"ruleId":"445","severity":1,"message":"449","line":8,"column":8,"nodeType":"447","messageId":"448","endLine":8,"endColumn":20},{"ruleId":"445","severity":1,"message":"450","line":9,"column":8,"nodeType":"447","messageId":"448","endLine":9,"endColumn":22},{"ruleId":"445","severity":1,"message":"451","line":11,"column":57,"nodeType":"447","messageId":"448","endLine":11,"endColumn":64},{"ruleId":"445","severity":1,"message":"452","line":14,"column":8,"nodeType":"447","messageId":"448","endLine":14,"endColumn":12},{"ruleId":"445","severity":1,"message":"453","line":39,"column":7,"nodeType":"447","messageId":"448","endLine":39,"endColumn":16},{"ruleId":"445","severity":1,"message":"454","line":3,"column":23,"nodeType":"447","messageId":"448","endLine":3,"endColumn":34},{"ruleId":"445","severity":1,"message":"455","line":1,"column":17,"nodeType":"447","messageId":"448","endLine":1,"endColumn":26},{"ruleId":"445","severity":1,"message":"456","line":1,"column":29,"nodeType":"447","messageId":"448","endLine":1,"endColumn":37},{"ruleId":"445","severity":1,"message":"452","line":9,"column":8,"nodeType":"447","messageId":"448","endLine":9,"endColumn":12},{"ruleId":"457","severity":1,"message":"458","line":94,"column":9,"nodeType":"459","messageId":"460","endLine":95,"endColumn":19},{"ruleId":"445","severity":1,"message":"461","line":2,"column":8,"nodeType":"447","messageId":"448","endLine":2,"endColumn":14},{"ruleId":"445","severity":1,"message":"456","line":4,"column":28,"nodeType":"447","messageId":"448","endLine":4,"endColumn":36},{"ruleId":"445","severity":1,"message":"462","line":6,"column":20,"nodeType":"447","messageId":"448","endLine":6,"endColumn":24},{"ruleId":"445","severity":1,"message":"463","line":9,"column":9,"nodeType":"447","messageId":"448","endLine":9,"endColumn":16},{"ruleId":"445","severity":1,"message":"464","line":12,"column":21,"nodeType":"447","messageId":"448","endLine":12,"endColumn":31},{"ruleId":"445","severity":1,"message":"465","line":20,"column":20,"nodeType":"447","messageId":"448","endLine":20,"endColumn":27},{"ruleId":"445","severity":1,"message":"466","line":20,"column":29,"nodeType":"447","messageId":"448","endLine":20,"endColumn":34},{"ruleId":"445","severity":1,"message":"453","line":24,"column":11,"nodeType":"447","messageId":"448","endLine":24,"endColumn":20},{"ruleId":"445","severity":1,"message":"467","line":24,"column":22,"nodeType":"447","messageId":"448","endLine":24,"endColumn":33},{"ruleId":"445","severity":1,"message":"468","line":24,"column":35,"nodeType":"447","messageId":"448","endLine":24,"endColumn":44},{"ruleId":"469","severity":1,"message":"470","line":39,"column":6,"nodeType":"471","endLine":39,"endColumn":22,"suggestions":"472"},{"ruleId":"445","severity":1,"message":"473","line":3,"column":8,"nodeType":"447","messageId":"448","endLine":3,"endColumn":19},{"ruleId":"445","severity":1,"message":"462","line":10,"column":10,"nodeType":"447","messageId":"448","endLine":10,"endColumn":14},{"ruleId":"445","severity":1,"message":"474","line":13,"column":10,"nodeType":"447","messageId":"448","endLine":13,"endColumn":19},{"ruleId":"445","severity":1,"message":"464","line":13,"column":21,"nodeType":"447","messageId":"448","endLine":13,"endColumn":31},{"ruleId":"445","severity":1,"message":"467","line":21,"column":23,"nodeType":"447","messageId":"448","endLine":21,"endColumn":34},{"ruleId":"445","severity":1,"message":"468","line":21,"column":36,"nodeType":"447","messageId":"448","endLine":21,"endColumn":45},{"ruleId":"445","severity":1,"message":"465","line":26,"column":13,"nodeType":"447","messageId":"448","endLine":26,"endColumn":20},{"ruleId":"445","severity":1,"message":"466","line":26,"column":32,"nodeType":"447","messageId":"448","endLine":26,"endColumn":37},{"ruleId":"445","severity":1,"message":"475","line":37,"column":12,"nodeType":"447","messageId":"448","endLine":37,"endColumn":17},{"ruleId":"445","severity":1,"message":"476","line":37,"column":19,"nodeType":"447","messageId":"448","endLine":37,"endColumn":27},{"ruleId":"445","severity":1,"message":"477","line":44,"column":26,"nodeType":"447","messageId":"448","endLine":44,"endColumn":41},{"ruleId":"469","severity":1,"message":"478","line":63,"column":8,"nodeType":"471","endLine":63,"endColumn":10,"suggestions":"479"},{"ruleId":"480","severity":1,"message":"481","line":72,"column":32,"nodeType":"482","messageId":"483","endLine":72,"endColumn":34},{"ruleId":"480","severity":1,"message":"481","line":333,"column":65,"nodeType":"482","messageId":"483","endLine":333,"endColumn":67},{"ruleId":"445","severity":1,"message":"484","line":1,"column":17,"nodeType":"447","messageId":"448","endLine":1,"endColumn":26},{"ruleId":"445","severity":1,"message":"461","line":2,"column":8,"nodeType":"447","messageId":"448","endLine":2,"endColumn":14},{"ruleId":"445","severity":1,"message":"485","line":17,"column":10,"nodeType":"447","messageId":"448","endLine":17,"endColumn":17},{"ruleId":"469","severity":1,"message":"486","line":29,"column":6,"nodeType":"471","endLine":29,"endColumn":16,"suggestions":"487"},{"ruleId":"441","replacedBy":"488"},{"ruleId":"443","replacedBy":"489"},{"ruleId":"445","severity":1,"message":"474","line":8,"column":10,"nodeType":"447","messageId":"448","endLine":8,"endColumn":19},{"ruleId":"445","severity":1,"message":"490","line":10,"column":10,"nodeType":"447","messageId":"448","endLine":10,"endColumn":15},{"ruleId":"445","severity":1,"message":"491","line":10,"column":18,"nodeType":"447","messageId":"448","endLine":10,"endColumn":28},{"ruleId":"445","severity":1,"message":"467","line":18,"column":21,"nodeType":"447","messageId":"448","endLine":18,"endColumn":32},{"ruleId":"445","severity":1,"message":"468","line":18,"column":34,"nodeType":"447","messageId":"448","endLine":18,"endColumn":43},{"ruleId":"445","severity":1,"message":"465","line":21,"column":11,"nodeType":"447","messageId":"448","endLine":21,"endColumn":18},{"ruleId":"445","severity":1,"message":"466","line":21,"column":30,"nodeType":"447","messageId":"448","endLine":21,"endColumn":35},{"ruleId":"469","severity":1,"message":"470","line":36,"column":6,"nodeType":"471","endLine":36,"endColumn":11,"suggestions":"492"},{"ruleId":"445","severity":1,"message":"454","line":4,"column":23,"nodeType":"447","messageId":"448","endLine":4,"endColumn":34},{"ruleId":"445","severity":1,"message":"465","line":16,"column":11,"nodeType":"447","messageId":"448","endLine":16,"endColumn":18},{"ruleId":"445","severity":1,"message":"466","line":16,"column":30,"nodeType":"447","messageId":"448","endLine":16,"endColumn":35},{"ruleId":"445","severity":1,"message":"493","line":19,"column":10,"nodeType":"447","messageId":"448","endLine":19,"endColumn":17},{"ruleId":"445","severity":1,"message":"494","line":19,"column":19,"nodeType":"447","messageId":"448","endLine":19,"endColumn":29},{"ruleId":"469","severity":1,"message":"495","line":46,"column":6,"nodeType":"471","endLine":46,"endColumn":8,"suggestions":"496"},{"ruleId":"445","severity":1,"message":"497","line":81,"column":11,"nodeType":"447","messageId":"448","endLine":81,"endColumn":19},{"ruleId":"498","severity":1,"message":"499","line":159,"column":41,"nodeType":"500","endLine":159,"endColumn":53},{"ruleId":"498","severity":1,"message":"501","line":168,"column":45,"nodeType":"500","endLine":168,"endColumn":89},{"ruleId":"498","severity":1,"message":"501","line":172,"column":45,"nodeType":"500","endLine":172,"endColumn":89},{"ruleId":"498","severity":1,"message":"501","line":176,"column":45,"nodeType":"500","endLine":176,"endColumn":89},{"ruleId":"502","severity":1,"message":"503","line":184,"column":53,"nodeType":"500","endLine":184,"endColumn":199},{"ruleId":"504","severity":1,"message":"505","line":206,"column":79,"nodeType":"506","messageId":"507","endLine":206,"endColumn":81},{"ruleId":"498","severity":1,"message":"499","line":212,"column":46,"nodeType":"500","endLine":212,"endColumn":58},{"ruleId":"498","severity":1,"message":"501","line":217,"column":45,"nodeType":"500","endLine":217,"endColumn":89},{"ruleId":"498","severity":1,"message":"501","line":222,"column":45,"nodeType":"500","endLine":222,"endColumn":89},{"ruleId":"498","severity":1,"message":"501","line":226,"column":45,"nodeType":"500","endLine":226,"endColumn":89},{"ruleId":"498","severity":1,"message":"499","line":260,"column":57,"nodeType":"500","endLine":260,"endColumn":99},{"ruleId":"498","severity":1,"message":"501","line":262,"column":50,"nodeType":"500","endLine":262,"endColumn":95},{"ruleId":"498","severity":1,"message":"501","line":281,"column":45,"nodeType":"500","endLine":281,"endColumn":89},{"ruleId":"498","severity":1,"message":"501","line":285,"column":45,"nodeType":"500","endLine":285,"endColumn":89},{"ruleId":"498","severity":1,"message":"501","line":289,"column":45,"nodeType":"500","endLine":289,"endColumn":89},{"ruleId":"502","severity":1,"message":"503","line":297,"column":53,"nodeType":"500","endLine":297,"endColumn":199},{"ruleId":"445","severity":1,"message":"456","line":1,"column":17,"nodeType":"447","messageId":"448","endLine":1,"endColumn":25},{"ruleId":"445","severity":1,"message":"474","line":4,"column":10,"nodeType":"447","messageId":"448","endLine":4,"endColumn":19},{"ruleId":"445","severity":1,"message":"464","line":4,"column":21,"nodeType":"447","messageId":"448","endLine":4,"endColumn":31},{"ruleId":"445","severity":1,"message":"508","line":15,"column":17,"nodeType":"447","messageId":"448","endLine":15,"endColumn":25},{"ruleId":"445","severity":1,"message":"467","line":15,"column":27,"nodeType":"447","messageId":"448","endLine":15,"endColumn":38},{"ruleId":"445","severity":1,"message":"468","line":15,"column":40,"nodeType":"447","messageId":"448","endLine":15,"endColumn":49},{"ruleId":"445","severity":1,"message":"465","line":18,"column":17,"nodeType":"447","messageId":"448","endLine":18,"endColumn":24},{"ruleId":"445","severity":1,"message":"466","line":18,"column":36,"nodeType":"447","messageId":"448","endLine":18,"endColumn":41},{"ruleId":"469","severity":1,"message":"470","line":26,"column":12,"nodeType":"471","endLine":26,"endColumn":14,"suggestions":"509"},{"ruleId":"445","severity":1,"message":"485","line":19,"column":10,"nodeType":"447","messageId":"448","endLine":19,"endColumn":17},{"ruleId":"469","severity":1,"message":"510","line":37,"column":6,"nodeType":"471","endLine":37,"endColumn":16,"suggestions":"511"},{"ruleId":"445","severity":1,"message":"474","line":7,"column":10,"nodeType":"447","messageId":"448","endLine":7,"endColumn":19},{"ruleId":"445","severity":1,"message":"464","line":7,"column":21,"nodeType":"447","messageId":"448","endLine":7,"endColumn":31},{"ruleId":"445","severity":1,"message":"512","line":10,"column":18,"nodeType":"447","messageId":"448","endLine":10,"endColumn":24},{"ruleId":"445","severity":1,"message":"465","line":15,"column":11,"nodeType":"447","messageId":"448","endLine":15,"endColumn":18},{"ruleId":"445","severity":1,"message":"466","line":15,"column":30,"nodeType":"447","messageId":"448","endLine":15,"endColumn":35},{"ruleId":"445","severity":1,"message":"508","line":17,"column":11,"nodeType":"447","messageId":"448","endLine":17,"endColumn":19},{"ruleId":"445","severity":1,"message":"467","line":17,"column":21,"nodeType":"447","messageId":"448","endLine":17,"endColumn":32},{"ruleId":"469","severity":1,"message":"470","line":24,"column":6,"nodeType":"471","endLine":24,"endColumn":8,"suggestions":"513"},{"ruleId":"445","severity":1,"message":"514","line":5,"column":16,"nodeType":"447","messageId":"448","endLine":5,"endColumn":25},{"ruleId":"445","severity":1,"message":"515","line":12,"column":8,"nodeType":"447","messageId":"448","endLine":12,"endColumn":26},{"ruleId":"445","severity":1,"message":"465","line":22,"column":12,"nodeType":"447","messageId":"448","endLine":22,"endColumn":19},{"ruleId":"469","severity":1,"message":"516","line":37,"column":10,"nodeType":"471","endLine":37,"endColumn":29,"suggestions":"517"},{"ruleId":"441","replacedBy":"518"},{"ruleId":"443","replacedBy":"519"},{"ruleId":"445","severity":1,"message":"520","line":3,"column":8,"nodeType":"447","messageId":"448","endLine":3,"endColumn":14},{"ruleId":"445","severity":1,"message":"521","line":4,"column":8,"nodeType":"447","messageId":"448","endLine":4,"endColumn":14},{"ruleId":"445","severity":1,"message":"522","line":5,"column":8,"nodeType":"447","messageId":"448","endLine":5,"endColumn":21},{"ruleId":"445","severity":1,"message":"523","line":6,"column":8,"nodeType":"447","messageId":"448","endLine":6,"endColumn":21},{"ruleId":"445","severity":1,"message":"524","line":7,"column":8,"nodeType":"447","messageId":"448","endLine":7,"endColumn":25},{"ruleId":"445","severity":1,"message":"525","line":8,"column":8,"nodeType":"447","messageId":"448","endLine":8,"endColumn":19},{"ruleId":"445","severity":1,"message":"526","line":10,"column":8,"nodeType":"447","messageId":"448","endLine":10,"endColumn":13},{"ruleId":"445","severity":1,"message":"527","line":33,"column":10,"nodeType":"447","messageId":"448","endLine":33,"endColumn":19},{"ruleId":"445","severity":1,"message":"528","line":33,"column":21,"nodeType":"447","messageId":"448","endLine":33,"endColumn":33},{"ruleId":"445","severity":1,"message":"529","line":35,"column":10,"nodeType":"447","messageId":"448","endLine":35,"endColumn":20},{"ruleId":"445","severity":1,"message":"530","line":35,"column":22,"nodeType":"447","messageId":"448","endLine":35,"endColumn":35},{"ruleId":"445","severity":1,"message":"466","line":42,"column":20,"nodeType":"447","messageId":"448","endLine":42,"endColumn":25},{"ruleId":"445","severity":1,"message":"465","line":45,"column":10,"nodeType":"447","messageId":"448","endLine":45,"endColumn":17},{"ruleId":"469","severity":1,"message":"531","line":74,"column":6,"nodeType":"471","endLine":74,"endColumn":34,"suggestions":"532"},{"ruleId":"504","severity":1,"message":"533","line":85,"column":26,"nodeType":"506","messageId":"534","endLine":85,"endColumn":28},{"ruleId":"480","severity":1,"message":"481","line":86,"column":18,"nodeType":"482","messageId":"483","endLine":86,"endColumn":20},{"ruleId":"504","severity":1,"message":"533","line":103,"column":28,"nodeType":"506","messageId":"534","endLine":103,"endColumn":30},{"ruleId":"480","severity":1,"message":"481","line":104,"column":20,"nodeType":"482","messageId":"483","endLine":104,"endColumn":22},{"ruleId":"445","severity":1,"message":"535","line":138,"column":9,"nodeType":"447","messageId":"448","endLine":138,"endColumn":19},{"ruleId":"504","severity":1,"message":"533","line":158,"column":30,"nodeType":"506","messageId":"534","endLine":158,"endColumn":32},{"ruleId":"504","severity":1,"message":"533","line":162,"column":32,"nodeType":"506","messageId":"534","endLine":162,"endColumn":34},{"ruleId":"480","severity":1,"message":"481","line":163,"column":25,"nodeType":"482","messageId":"483","endLine":163,"endColumn":27},{"ruleId":"445","severity":1,"message":"536","line":3,"column":54,"nodeType":"447","messageId":"448","endLine":3,"endColumn":64},{"ruleId":"445","severity":1,"message":"537","line":3,"column":66,"nodeType":"447","messageId":"448","endLine":3,"endColumn":79},{"ruleId":"445","severity":1,"message":"538","line":10,"column":17,"nodeType":"447","messageId":"448","endLine":10,"endColumn":21},{"ruleId":"445","severity":1,"message":"508","line":44,"column":29,"nodeType":"447","messageId":"448","endLine":44,"endColumn":37},{"ruleId":"445","severity":1,"message":"538","line":64,"column":17,"nodeType":"447","messageId":"448","endLine":64,"endColumn":21},{"ruleId":"445","severity":1,"message":"538","line":93,"column":18,"nodeType":"447","messageId":"448","endLine":93,"endColumn":22},{"ruleId":"480","severity":1,"message":"481","line":31,"column":25,"nodeType":"482","messageId":"483","endLine":31,"endColumn":27},{"ruleId":"445","severity":1,"message":"454","line":5,"column":10,"nodeType":"447","messageId":"448","endLine":5,"endColumn":21},{"ruleId":"445","severity":1,"message":"508","line":11,"column":13,"nodeType":"447","messageId":"448","endLine":11,"endColumn":21},{"ruleId":"445","severity":1,"message":"467","line":11,"column":23,"nodeType":"447","messageId":"448","endLine":11,"endColumn":34},{"ruleId":"445","severity":1,"message":"455","line":3,"column":17,"nodeType":"447","messageId":"448","endLine":3,"endColumn":26},{"ruleId":"445","severity":1,"message":"512","line":4,"column":18,"nodeType":"447","messageId":"448","endLine":4,"endColumn":24},{"ruleId":"480","severity":1,"message":"481","line":28,"column":28,"nodeType":"482","messageId":"483","endLine":28,"endColumn":30},{"ruleId":"445","severity":1,"message":"456","line":3,"column":28,"nodeType":"447","messageId":"448","endLine":3,"endColumn":36},{"ruleId":"445","severity":1,"message":"539","line":6,"column":25,"nodeType":"447","messageId":"448","endLine":6,"endColumn":37},{"ruleId":"469","severity":1,"message":"516","line":19,"column":8,"nodeType":"471","endLine":19,"endColumn":10,"suggestions":"540"},{"ruleId":"504","severity":1,"message":"533","line":31,"column":26,"nodeType":"506","messageId":"534","endLine":31,"endColumn":28},{"ruleId":"441","replacedBy":"541"},{"ruleId":"443","replacedBy":"542"},{"ruleId":"445","severity":1,"message":"543","line":3,"column":11,"nodeType":"447","messageId":"448","endLine":3,"endColumn":19},{"ruleId":"445","severity":1,"message":"474","line":4,"column":10,"nodeType":"447","messageId":"448","endLine":4,"endColumn":19},{"ruleId":"445","severity":1,"message":"464","line":4,"column":21,"nodeType":"447","messageId":"448","endLine":4,"endColumn":31},{"ruleId":"445","severity":1,"message":"508","line":15,"column":11,"nodeType":"447","messageId":"448","endLine":15,"endColumn":19},{"ruleId":"445","severity":1,"message":"465","line":18,"column":11,"nodeType":"447","messageId":"448","endLine":18,"endColumn":18},{"ruleId":"445","severity":1,"message":"466","line":18,"column":30,"nodeType":"447","messageId":"448","endLine":18,"endColumn":35},{"ruleId":"445","severity":1,"message":"544","line":20,"column":10,"nodeType":"447","messageId":"448","endLine":20,"endColumn":13},{"ruleId":"445","severity":1,"message":"545","line":20,"column":15,"nodeType":"447","messageId":"448","endLine":20,"endColumn":21},{"ruleId":"469","severity":1,"message":"516","line":28,"column":6,"nodeType":"471","endLine":28,"endColumn":8,"suggestions":"546"},{"ruleId":"445","severity":1,"message":"456","line":1,"column":28,"nodeType":"447","messageId":"448","endLine":1,"endColumn":36},{"ruleId":"445","severity":1,"message":"474","line":9,"column":10,"nodeType":"447","messageId":"448","endLine":9,"endColumn":19},{"ruleId":"445","severity":1,"message":"464","line":9,"column":21,"nodeType":"447","messageId":"448","endLine":9,"endColumn":31},{"ruleId":"445","severity":1,"message":"465","line":17,"column":13,"nodeType":"447","messageId":"448","endLine":17,"endColumn":20},{"ruleId":"445","severity":1,"message":"466","line":17,"column":32,"nodeType":"447","messageId":"448","endLine":17,"endColumn":37},{"ruleId":"445","severity":1,"message":"508","line":20,"column":12,"nodeType":"447","messageId":"448","endLine":20,"endColumn":20},{"ruleId":"445","severity":1,"message":"467","line":20,"column":22,"nodeType":"447","messageId":"448","endLine":20,"endColumn":33},{"ruleId":"445","severity":1,"message":"468","line":20,"column":35,"nodeType":"447","messageId":"448","endLine":20,"endColumn":44},{"ruleId":"469","severity":1,"message":"470","line":28,"column":10,"nodeType":"471","endLine":28,"endColumn":17,"suggestions":"547"},{"ruleId":"445","severity":1,"message":"491","line":2,"column":16,"nodeType":"447","messageId":"448","endLine":2,"endColumn":26},{"ruleId":"445","severity":1,"message":"548","line":2,"column":28,"nodeType":"447","messageId":"448","endLine":2,"endColumn":38},{"ruleId":"445","severity":1,"message":"549","line":8,"column":11,"nodeType":"447","messageId":"448","endLine":8,"endColumn":15},{"ruleId":"480","severity":1,"message":"481","line":16,"column":43,"nodeType":"482","messageId":"483","endLine":16,"endColumn":45},{"ruleId":"445","severity":1,"message":"550","line":1,"column":22,"nodeType":"447","messageId":"448","endLine":1,"endColumn":35},{"ruleId":"445","severity":1,"message":"551","line":4,"column":25,"nodeType":"447","messageId":"448","endLine":4,"endColumn":42},{"ruleId":"445","severity":1,"message":"552","line":4,"column":44,"nodeType":"447","messageId":"448","endLine":4,"endColumn":59},{"ruleId":"445","severity":1,"message":"553","line":15,"column":10,"nodeType":"447","messageId":"448","endLine":15,"endColumn":17},{"ruleId":"445","severity":1,"message":"554","line":15,"column":19,"nodeType":"447","messageId":"448","endLine":15,"endColumn":29},{"ruleId":"555","severity":1,"message":"556","line":92,"column":11,"nodeType":"500","endLine":93,"endColumn":126},{"ruleId":"441","replacedBy":"557"},{"ruleId":"443","replacedBy":"558"},{"ruleId":"555","severity":1,"message":"556","line":12,"column":13,"nodeType":"500","endLine":21,"endColumn":45},{"ruleId":"445","severity":1,"message":"455","line":1,"column":24,"nodeType":"447","messageId":"448","endLine":1,"endColumn":33},{"ruleId":"445","severity":1,"message":"559","line":4,"column":10,"nodeType":"447","messageId":"448","endLine":4,"endColumn":16},{"ruleId":"445","severity":1,"message":"512","line":4,"column":18,"nodeType":"447","messageId":"448","endLine":4,"endColumn":24},{"ruleId":"445","severity":1,"message":"465","line":13,"column":13,"nodeType":"447","messageId":"448","endLine":13,"endColumn":20},{"ruleId":"445","severity":1,"message":"560","line":13,"column":22,"nodeType":"447","messageId":"448","endLine":13,"endColumn":30},{"ruleId":"445","severity":1,"message":"466","line":13,"column":32,"nodeType":"447","messageId":"448","endLine":13,"endColumn":37},{"ruleId":"445","severity":1,"message":"561","line":14,"column":11,"nodeType":"447","messageId":"448","endLine":14,"endColumn":19},{"ruleId":"445","severity":1,"message":"562","line":18,"column":19,"nodeType":"447","messageId":"448","endLine":18,"endColumn":27},{"ruleId":"445","severity":1,"message":"456","line":1,"column":17,"nodeType":"447","messageId":"448","endLine":1,"endColumn":25},{"ruleId":"445","severity":1,"message":"563","line":3,"column":9,"nodeType":"447","messageId":"448","endLine":3,"endColumn":23},{"ruleId":"445","severity":1,"message":"551","line":3,"column":25,"nodeType":"447","messageId":"448","endLine":3,"endColumn":42},{"ruleId":"445","severity":1,"message":"552","line":3,"column":44,"nodeType":"447","messageId":"448","endLine":3,"endColumn":59},{"ruleId":"445","severity":1,"message":"564","line":4,"column":5,"nodeType":"447","messageId":"448","endLine":4,"endColumn":22},{"ruleId":"445","severity":1,"message":"565","line":4,"column":24,"nodeType":"447","messageId":"448","endLine":4,"endColumn":38},{"ruleId":"445","severity":1,"message":"566","line":4,"column":40,"nodeType":"447","messageId":"448","endLine":4,"endColumn":53},{"ruleId":"445","severity":1,"message":"567","line":4,"column":55,"nodeType":"447","messageId":"448","endLine":4,"endColumn":75},{"ruleId":"445","severity":1,"message":"568","line":4,"column":77,"nodeType":"447","messageId":"448","endLine":4,"endColumn":86},{"ruleId":"502","severity":1,"message":"503","line":14,"column":5,"nodeType":"500","endLine":14,"endColumn":158},{"ruleId":"441","replacedBy":"569"},{"ruleId":"443","replacedBy":"570"},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["571"],"no-negated-in-lhs",["572"],"no-unused-vars","'ForgetPassword' is defined but never used.","Identifier","unusedVar","'ControlPanel' is defined but never used.","'ProductDetails' is defined but never used.","'compose' is defined but never used.","'Home' is defined but never used.","'cartItems' is assigned a value but never used.","'useDispatch' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'Header' is defined but never used.","'Link' is defined but never used.","'usePath' is defined but never used.","'updateCart' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'cartCount' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'userInfo'. Either include them or remove the dependency array.","ArrayExpression",["573"],"'NormalInput' is defined but never used.","'addToCart' is defined but never used.","'order' is assigned a value but never used.","'setOrder' is assigned a value but never used.","'setPaymentTypes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'getAddresses', 'props.history', and 'userInfo'. Either include them or remove the dependency array.",["574"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Component' is defined but never used.","'isError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["575"],["571"],["572"],"'Route' is defined but never used.","'withRouter' is defined but never used.",["576"],"'userIds' is assigned a value but never used.","'setUserIds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'adminGetAllOrders', 'getOrders', 'props.history', and 'userInfo'. Either include them or remove the dependency array.",["577"],"'getUsers' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'cartItem' is assigned a value but never used.",["578"],"React Hook useEffect has missing dependencies: 'error' and 'props.history'. Either include them or remove the dependency array.",["579"],"'update' is defined but never used.",["580"],"'useParams' is defined but never used.","'IdleTimerContainer' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["581"],["571"],["572"],"'Button' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'axios' is defined but never used.","'uploading' is assigned a value but never used.","'setUploading' is assigned a value but never used.","'deleteItem' is assigned a value but never used.","'setDeleteItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'setList'. Either include them or remove the dependency array.",["582"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'Transition' is assigned a value but never used.","'CLEAR_CART' is defined but never used.","'CART_ADD_ITEM' is defined but never used.","'data' is assigned a value but never used.","'listProducts' is defined but never used.",["583"],["571"],["572"],"'Redirect' is defined but never used.","'qty' is assigned a value but never used.","'setQty' is assigned a value but never used.",["584"],["585"],"'useHistory' is defined but never used.","'path' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'MdpStyledFieldset' is defined but never used.","'MdpStyledButton' is defined but never used.","'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.",["571"],["572"],"'logout' is defined but never used.","'userInfo' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'setTimer' is assigned a value but never used.","'MdpStyledError' is defined but never used.","'MdpStyledTextArea' is defined but never used.","'MdpStyledInput' is defined but never used.","'MdpStyledForm' is defined but never used.","'MdpStyledFormWrapper' is defined but never used.","'MdpButton' is defined but never used.",["571"],["572"],"no-global-assign","no-unsafe-negation",{"desc":"586","fix":"587"},{"desc":"588","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},{"desc":"598","fix":"599"},{"desc":"596","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"605","fix":"607"},{"desc":"608","fix":"609"},"Update the dependencies array to be: [slug, category, dispatch, userInfo]",{"range":"610","text":"611"},"Update the dependencies array to be: [dispatch, getAddresses, props.history, userInfo]",{"range":"612","text":"613"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"614","text":"615"},"Update the dependencies array to be: [dispatch, qty, userInfo]",{"range":"616","text":"617"},"Update the dependencies array to be: [adminGetAllOrders, getOrders, props.history, userInfo]",{"range":"618","text":"619"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"620","text":"621"},"Update the dependencies array to be: [error, props.history, userInfo]",{"range":"622","text":"623"},{"range":"624","text":"621"},"Update the dependencies array to be: [slug, filter, url, dispatch]",{"range":"625","text":"626"},"Update the dependencies array to be: [successSave, successDelete, dispatch, setList]",{"range":"627","text":"628"},"Update the dependencies array to be: [dispatch]",{"range":"629","text":"630"},{"range":"631","text":"630"},"Update the dependencies array to be: [dispatch, props, userInfo]",{"range":"632","text":"633"},[1223,1239],"[slug, category, dispatch, userInfo]",[2463,2465],"[dispatch, getAddresses, props.history, userInfo]",[940,950],"[props.history, userInfo]",[962,967],"[dispatch, qty, userInfo]",[1059,1061],"[adminGetAllOrders, getOrders, props.history, userInfo]",[813,815],"[dispatch, userInfo]",[1292,1302],"[error, props.history, userInfo]",[772,774],[1160,1179],"[slug, filter, url, dispatch]",[2377,2405],"[successSave, successDelete, dispatch, setList]",[508,510],"[dispatch]",[706,708],[823,830],"[dispatch, props, userInfo]"]